## Saving dataset {.unnumbered}

```{r setup, warning=FALSE, message=FALSE, cache = TRUE, include=FALSE}
# Load required packages
library(dplyr)
require(Hmisc)
```

::: callout-tip
Once you've made modifications or conducted some preliminary analysis, it's important to save your dataset. We can save the dataset in a different format, e.g., CSV, txt, or even R, SAS or other formats.
:::

Let's open a dataset:

```{r load1, cache=TRUE}
mpg <- read.csv("Data/wrangling/mpg.csv", header = TRUE)
```

We can save our working dataset in different formats. Say, we want to save our `mpg` dataset in `csv` format with a new name `mympg`. We can use the `write.csv()` command:

```{r savecsv1, cache=TRUE}
write.csv(mpg, "Data/wrangling/mympg.csv", 
          row.names = FALSE)
```

We can also save the dataset in `R` format:

```{r saveR1, cache=TRUE}
save(mpg, file = "Data/wrangling/mympg.RData")
```

Now let's open a SAS format data. 

```{r sas, cache=TRUE, warning=FALSE}
# Link
x <- "https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/DEMO_I.XPT"

# Data
NHANES1516data <- sasxport.get(x)
```

We can use the `write.csv()` command to save the `NHANES1516data` dataset:

```{r savecsv2, cache=TRUE}
write.csv(NHANES1516data, "Data/wrangling/NHANES1516.csv", 
          row.names = FALSE)
```

Similarly, we can save the dataset in `R` format:

```{r saveR2, cache=TRUE}
save(NHANES1516data, file = "Data/wrangling/NHANES1516.RData")
```
