x
inA <- createDataPartition(x, list = FALSE)
inA
inA <- createDataPartition(fattyAcids$Stearic, 0.4)
inA
createFolds(oilType, 10)
?trainControl
?train
?caret::train
?sample
?base::sample
?kable
?BrierScore
library(simcausal)
?DAG.empty
?set.DAG
?plotDAG
?sim
?simcausal::sim
?ftable
?lawstat
library(lawstat)
?cmh.test
?as.numeric
as.numeric(c("-.1"," 2.7 ","B"))
as.character(c("-.1"," 2.7 ","B"))
?as.character
?cut
?ls
?svyby
library(survey)
?svyby
?svychisq
?AIC
?psrsq
?regTermTest
?update
?stats::update
library(MASS)
?stepAIC
?step
?stats::step
?eval
?WeightedROC
library(WeightedROC)
?fitted
?residuals
?complete.cases
?md.pattern
library(mice)
?md.pattern
?VIM::marginplot
?mice::complete
?expression
?unlist
?D1
?pool.compare
?bwplot
?mice::bwplot
?parlmice
?imputationList
library(mitools)
?MIcombine
?MIextract
?aggr
?VIM::aggr
?naniar::mcar_test
?boxplot
library(smi)
?sim_slopes
??sim_slopes
?miceadds::pool_mi
?miceadds::tidy.pool_mi
??tidy.pool_mi
?miceadds::pool_mi
library(MatchIt)
?matchit
?do.call
?match.data
?rownames
?base::rownames
?terms
?lowess
?rpart::rpart
??fancyRpartPlot
?varImp
?kmeans
??fviz_nbclust
?listWrappers
library(SuperLearner)
?listWrappers
listWrappers()
?ExtractSmd
??ExtractSmd
?read.table
x <- c(1,2,5, 10)
y <- c(11, 13, 19, 10)
x & y
x | y
x ! y
x == y
?cut
summary(mpg$cty)
data(mpg)
??mpg
data(mpg, package = "ggplot2")
summary(mpg$cty)
# Load required packages
library(dplyr)
## EX. change the cty into two categories (9,14], (14,18] and (18,35]
mpg$cty.num <- cut(mpg$cty, c(9, 14, 18, 35), right = TRUE)
table(mpg$cty.num)
## Try this: do you see a difference?: [9,14), [14,18) and [18,35)
mpg$cty.num2 <- cut(mpg$cty, c(9, 14, 18, 35), right = FALSE)
table(mpg$cty.num2)
table(mpg$cty)
sum(5, 20,  8, 21, 19)
## EX. change the cty into two categories (0,14], (14,18] and (18,40]
mpg$cty.num <- cut(mpg$cty, c(0, 14, 18, 40), right = TRUE)
table(mpg$cty.num)
## Try this: do you see a difference?: [0,14), [14,18) and [18,40)
mpg$cty.num2 <- cut(mpg$cty, c(0, 14, 18, 40), right = FALSE)
table(mpg$cty.num2)
?tableone::CreateTableOne
table(is.na(mpg$class))
table(is.na(mpg$drv))
??plot_missing
library(DataExplorer)
plot_missing(mpg)
# Load required packages
library(dplyr)
require(tableone)
table(is.na(mpg$cty))
data.download <- read.csv("Data/wrangling/Employee_Salaries_-_2017.csv")
View(data.download)
?complete.case
?complete.cases
devtools::install_github("warnes/SASxport")
library(SASxport)
devtools::install_github("warnes/SASxport")
devtools::install_github("warnes/SASxport")
library(SASxport)
devtools::install_github("r-gregmisc/SASxport")
remove.packages("SASxport")
library(SASxport)
devtools::install_github("r-gregmisc/SASxport")
devtools::install_github("r-gregmisc/SASxport")
devtools::install_version("SASxport", version = "1.7.0", repos = "http://cran.us.r-project.org")
install.packages("make")
devtools::install_github("warnes/SASxport")
library(SASxport)
??read.xport
# Load required packages
#devtools::install_github("warnes/SASxport")
library(SASxport)
library(foreign)
library(nhanesA)
use.saved.chche <- TRUE
?nhanes
table(is.na(merged.data$BMXBMI))
library(DataExplorer)
# Load required packages
require(SASxport)
require(DiagrammeR)
require(DiagrammeRsvg)
require(rsvg)
library(magrittr)
library(svglite)
library(png)
require(nhanesA)
require(survey)
require(Publish)
require(jtools)
g2 <- grViz("
digraph causal {
# Nodes
node [shape = box]
# node [shape = circle]
d [label = 'Demographics']
b [label = 'Blood pressure']
bm [label = 'Body Measures']
s [label = 'Smoking']
c [label = 'Cholesterol']
t [label = 'Standard Biochemistry Profile']
p [label = 'Physical Activity']
dd [label = 'Diabetes']
node [shape = egg]
ad [label = 'Analytic Data']
node [shape = plaintext]
d0 [label = 'ID']
d1 [label = 'gender']
d2 [label = 'age']
d3 [label = 'bornCountry']
d4 [label = 'race']
d5 [label = 'education']
d6 [label = 'marital status']
d7 [label = 'weights/psu/strata']
b1 [label = 'diastolic']
b2 [label = 'systolic']
bm1 [label = 'bodyweight']
bm2 [label = 'heignt']
bm3 [label = 'BMI']
bm4 [label = 'BMIcat']
bm5 [label = 'weist']
s1 [label = 'smoking']
c1 [label = 'cholesterol']
t1 [label = 'triglycerides']
t2 [label = 'uric acid']
t3 [label = 'protein']
t4 [label = 'bilirubin']
t5 [label = 'phosphorus']
t6 [label = 'sodium']
t7 [label = 'potassium']
t8 [label = 'globulin']
t9 [label = 'calcium']
dd1 [label = 'Have diabetes']
p1 [label = 'Work acticity']
p2 [label = 'Recreational activity']
# Edges
edge [color = black,
arrowhead = vee]
rankdir = LR
d -> {d1 d2 d3 d4 d5 d6 d7}
b -> {b1 b2}
bm -> {bm1 bm2 bm3 bm4 bm4 bm5}
dd -> dd1
p -> {p1 p2}
s -> {s1}
c -> {c1}
t -> {t1 t2 t3 t4 t5 t6 t7 t8 t9}
{d b bm s c t dd p} -> d0
d0 -> ad
# Graph
graph [overlap = true, fontsize = 10]
}")
g2 %>% export_svg %>% charToRaw %>% rsvg %>% png::writePNG("Images/accessing/overallnhanesplan.png")
knitr::include_graphics("Images/accessing/overallnhanesplan.png")
demo <- nhanes('DEMO_J') # Both males and females 0 YEARS - 150 YEARS
demo <- demo[c("SEQN", # Respondent sequence number
"RIAGENDR", # gender
"RIDAGEYR", # Age in years at screening
"DMDBORN4", # Country of birth
"RIDRETH3", # Race/Hispanic origin w/ NH Asian
"DMDEDUC3", # Education level - Children/Youth 6-19
"DMDEDUC2", # Education level - Adults 20+
"DMDMARTL", # Marital status: 20 YEARS - 150 YEARS
"INDHHIN2", # Total household income
"WTMEC2YR", "SDMVPSU", "SDMVSTRA")]
demo_vars <- names(demo) # nhanesTableVars('DEMO', 'DEMO_J', namesonly=TRUE)
demo1 <- nhanesTranslate('DEMO_J', demo_vars, data=demo)
bpx <- nhanes('BPX_J')
bpx <- bpx[c("SEQN", # Respondent sequence number
"BPXDI1", #Diastolic: Blood pres (1st rdg) mm Hg
"BPXSY1" # Systolic: Blood pres (1st rdg) mm Hg
)]
bpx_vars <- names(bpx)
bpx1 <- nhanesTranslate('BPX_J', bpx_vars, data=bpx)
bmi <- nhanes('BMX_J')
bmi <- bmi[c("SEQN", # Respondent sequence number
"BMXWT", # Weight (kg)
"BMXHT", # Standing Height (cm)
"BMXBMI", # Body Mass Index (kg/m**2): 2 YEARS - 150 YEARS
#"BMDBMIC", # BMI Category - Children/Youth # 2 YEARS - 19 YEARS
"BMXWAIST" # Waist Circumference (cm): 2 YEARS - 150 YEARS
)]
bmi_vars <- names(bmi)
bmi1 <- nhanesTranslate('BMX_J', bmi_vars, data=bmi)
smq <- nhanes('SMQ_J')
smq <- smq[c("SEQN", # Respondent sequence number
"SMQ040" # Do you now smoke cigarettes?: 18 YEARS - 150 YEARS
)]
smq_vars <- names(smq)
smq1 <- nhanesTranslate('SMQ_J', smq_vars, data=smq)
# alq <- nhanes('ALQ_J')
# alq <- alq[c("SEQN", # Respondent sequence number
#                "ALQ130" # Avg # alcoholic drinks/day - past 12 mos
#                # 18 YEARS - 150 YEARS
#                )]
# alq_vars <- names(alq)
# alq1 <- nhanesTranslate('ALQ_J', alq_vars, data=alq)
chl <- nhanes('TCHOL_J') # 6 YEARS - 150 YEARS
chl <- chl[c("SEQN", # Respondent sequence number
"LBXTC", # Total Cholesterol (mg/dL)
"LBDTCSI" # Total Cholesterol (mmol/L)
)]
chl_vars <- names(chl)
chl1 <- nhanesTranslate('TCHOL_J', chl_vars, data=chl)
tri <- nhanes('BIOPRO_J') # 12 YEARS - 150 YEARS
tri <- tri[c("SEQN", # Respondent sequence number
"LBXSTR", # Triglycerides, refrig serum (mg/dL)
"LBXSUA", # Uric acid
"LBXSTP", # total Protein (g/dL)
"LBXSTB", # Total Bilirubin (mg/dL)
"LBXSPH", # Phosphorus (mg/dL)
"LBXSNASI", # Sodium (mmol/L)
"LBXSKSI", # Potassium (mmol/L)
"LBXSGB", # Globulin (g/dL)
"LBXSCA" # Total Calcium (mg/dL)
)]
tri_vars <- names(tri)
tri1 <- nhanesTranslate('BIOPRO_J', tri_vars, data=tri)
paq <- nhanes('PAQ_J')
paq <- paq[c("SEQN", # Respondent sequence number
"PAQ605", # Vigorous work activity
"PAQ650" # Vigorous recreational activities
)]
paq_vars <- names(paq)
paq1 <- nhanesTranslate('PAQ_J', paq_vars, data=paq)
diq <- nhanes('DIQ_J')
diq <- diq[c("SEQN", # Respondent sequence number
"DIQ010" # Doctor told you have diabetes
)]
diq_vars <- names(diq)
diq1 <- nhanesTranslate('DIQ_J', diq_vars, data=diq)
analytic.data7 <- Reduce(function(x,y) merge(x,y,by="SEQN",all=TRUE) ,
list(demo1,bpx1,bmi1,smq1,chl1,tri1,paq1,diq1))
dim(analytic.data7)
# Merging one by one
# analytic.data0 <- merge(demo1, bpx1, by = c("SEQN"), all=TRUE)
# analytic.data1 <- merge(analytic.data0, bmi1, by = c("SEQN"), all=TRUE)
# analytic.data2 <- merge(analytic.data1, smq1, by = c("SEQN"), all=TRUE)
# analytic.data3 <- merge(analytic.data2, alq1, by = c("SEQN"), all=TRUE)
# analytic.data4 <- merge(analytic.data3, chl1, by = c("SEQN"), all=TRUE)
# analytic.data5 <- merge(analytic.data4, tri1, by = c("SEQN"), all=TRUE)
# analytic.data6 <- merge(analytic.data5, paq1, by = c("SEQN"), all=TRUE)
# analytic.data7 <- merge(analytic.data6, diq1, by = c("SEQN"), all=TRUE)
# dim(analytic.data7)
str(analytic.data7)
head(analytic.data7)
summary(analytic.data7$RIDAGEYR)
dim(analytic.data7)
analytic.data8 <- analytic.data7
analytic.data8$RIDAGEYR[analytic.data8$RIDAGEYR < 20] <- NA
#analytic.data8 <- subset(analytic.data7, RIDAGEYR >= 20)
dim(analytic.data8)
analytic.data8$DMDEDUC3 <- NULL # not relevant for adults
#analytic.data8$BMDBMIC <- NULL # not relevant for adults
factor.names <- c("RIAGENDR","DMDBORN4","RIDRETH3",
"DMDEDUC2","DMDMARTL","INDHHIN2",
"SMQ040", "PAQ605", "PAQ650", "DIQ010")
numeric.names <- c("SEQN","RIDAGEYR","WTMEC2YR",
"SDMVPSU", "SDMVSTRA",
"BPXDI1", "BPXSY1", "BMXWT", "BMXHT",
"BMXBMI", "BMXWAIST",
"ALQ130", "LBXTC", "LBDTCSI",
"LBXSTR", "LBXSUA", "LBXSTP", "LBXSTB",
"LBXSPH", "LBXSNASI", "LBXSKSI",
"LBXSGB","LBXSCA")
analytic.data8[factor.names] <- apply(X = analytic.data8[factor.names],
MARGIN = 2, FUN = as.factor)
# analytic.data8[numeric.names] <- apply(X = analytic.data8[numeric.names],
#                                        MARGIN = 2, FUN =
#                                          function (x) as.numeric(as.character(x)))
analytic.data9 <- analytic.data8
analytic.data9$DMDBORN4[analytic.data9$DMDBORN4 == "Don't Know"] <- NA
#analytic.data9 <- subset(analytic.data8, DMDBORN4 != "Don't Know")
dim(analytic.data9)
analytic.data10 <- analytic.data9
analytic.data10$DMDEDUC2[analytic.data10$DMDEDUC2 == "Don't Know"] <- NA
#analytic.data10 <- subset(analytic.data9, DMDEDUC2 != "Don't Know")
dim(analytic.data10)
analytic.data11 <- analytic.data10
analytic.data11$DMDMARTL[analytic.data11$DMDMARTL == "Don't Know"] <- NA
analytic.data11$DMDMARTL[analytic.data11$DMDMARTL == "Refused"] <- NA
# analytic.data11 <- subset(analytic.data10, DMDMARTL != "Don't Know" & DMDMARTL != "Refused")
dim(analytic.data11)
analytic.data12 <- analytic.data11
analytic.data12$INDHHIN2[analytic.data12$INDHHIN2 == "Don't Know"] <- NA
analytic.data12$INDHHIN2[analytic.data12$INDHHIN2 == "Refused"] <- NA
analytic.data12$INDHHIN2[analytic.data12$INDHHIN2 == "Under $20,000"] <- NA
analytic.data12$INDHHIN2[analytic.data12$INDHHIN2 == "$20,000 and Over"] <- NA
# analytic.data12 <- subset(analytic.data11, INDHHIN2 != "Don't know" & INDHHIN2 !=  "Refused" & INDHHIN2 != "Under $20,000" & INDHHIN2 != "$20,000 and Over" )
dim(analytic.data12)
#analytic.data11 <- subset(analytic.data10, ALQ130 != 777 & ALQ130 != 999 )
#dim(analytic.data11) # this are listed as NA anyway
analytic.data13 <- analytic.data12
analytic.data13$PAQ605[analytic.data13$PAQ605 == "Don't know"] <- NA
analytic.data13$PAQ605[analytic.data13$PAQ605 == "Refused"] <- NA
# analytic.data13 <- subset(analytic.data12, PAQ605 != "Don't know" & PAQ605 != "Refused")
dim(analytic.data13)
analytic.data14 <- analytic.data13
analytic.data14$PAQ650[analytic.data14$PAQ650 == "Don't know"] <- NA
analytic.data14$PAQ650[analytic.data14$PAQ650 == "Refused"] <- NA
# analytic.data14 <- subset(analytic.data13, PAQ650 != "Don't Know" & PAQ650 != "Refused")
dim(analytic.data14)
analytic.data15 <- analytic.data14
analytic.data15$DIQ010[analytic.data15$DIQ010 == "Don't know"] <- NA
analytic.data15$DIQ010[analytic.data15$DIQ010 == "Refused"] <- NA
# analytic.data15 <- subset(analytic.data14, DIQ010 != "Don't Know" & DIQ010 != "Refused")
dim(analytic.data15)
# analytic.data15$ALQ130[analytic.data15$ALQ130 > 100] <- NA
# summary(analytic.data15$ALQ130)
table(analytic.data15$SMQ040,useNA = "always")
table(analytic.data15$PAQ605,useNA = "always")
table(analytic.data15$PAQ650,useNA = "always")
table(analytic.data15$PAQ650,useNA = "always")
require(car)
analytic.data15$RIDRETH3 <- recode(analytic.data15$RIDRETH3,
"c('Mexican American','Other Hispanic')='Hispanic';
'Non-Hispanic White'='White';
'Non-Hispanic Black'='Black';
c('Non-Hispanic Asian',
'Other Race - Including Multi-Rac')='Other';
else=NA")
analytic.data15$DMDEDUC2 <- recode(analytic.data15$DMDEDUC2,
"c('Some college or AA degree',
'College graduate or above')='College';
c('9-11th grade (Includes 12th grad',
'High school graduate/GED or equi')
='High.School';
'Less than 9th grade'='School';
else=NA")
analytic.data15$DMDMARTL <- recode(analytic.data15$DMDMARTL,
"c('Divorced','Separated','Widowed')
='Previously.married';
c('Living with partner', 'Married')
='Married';
'Never married'='Never.married';
else=NA")
analytic.data15$INDHHIN2 <- recode(analytic.data15$INDHHIN2,
"c('$ 0 to $ 4,999', '$ 5,000 to $ 9,999',
'$10,000 to $14,999', '$15,000 to $19,999',
'$20,000 to $24,999')='<25k';
c('$25,000 to $34,999', '$35,000 to $44,999',
'$45,000 to $54,999') = 'Between.25kto54k';
c('$55,000 to $64,999', '$65,000 to $74,999',
'$75,000 to $99,999')='Between.55kto99k';
'$100,000 and Over'= 'Over100k';
else=NA")
analytic.data15$SMQ040 <- recode(analytic.data15$SMQ040,
"'Every day'='Every.day';
'Not at all'='Not.at.all';
'Some days'='Some.days';
else=NA")
analytic.data15$DIQ010 <- recode(analytic.data15$DIQ010,
"'No'='No';
c('Yes', 'Borderline')='Yes';
else=NA")
require(DataExplorer)
plot_missing(analytic.data15)
?str
?hclust
?varclus
?glm
# Load required packages
library(rms)
library(Hmisc)
library(Publish)
library(car)
library(pROC)
#### AUC
pred.y <- predict(fit5, type = "response")
# Load required packages
library(rms)
library(Hmisc)
library(Publish)
library(car)
library(pROC)
load(file = "Data/predictivefactors/cholesterolNHANES15part1.RData")
# Binary variable
analytic3$cholesterol.bin <- ifelse(analytic3$cholesterol < 200, "healthy", "unhealthy")
table(analytic3$cholesterol.bin)
# Changing the reference category
analytic3$cholesterol.bin <- as.factor(analytic3$cholesterol.bin)
analytic3$cholesterol.bin <- relevel(analytic3$cholesterol.bin, ref = "unhealthy")
table(analytic3$cholesterol.bin)
# Regression model
formula5x <- as.formula("cholesterol.bin~gender + age + born +
race + education + married +
income + diastolicBP + systolicBP +
bmi + bodyweight + bodyheight + waist +
triglycerides + uric.acid +
protein + bilirubin + phosphorus + sodium + potassium +
globulin + calcium + physical.work + physical.recreational +
diabetes")
# Summary
fit5x <- glm(formula5x, family = binomial(), data = analytic3)
publish(fit5x)
# VIF
car::vif(fit5x)
require(pROC)
pred.y <- predict(fit5x, type = "response")
rocobj <- roc(analytic3$cholesterol.bin, pred.y)
rocobj
auc(rocobj)
formula5 <- as.formula("cholesterol.bin~gender + age + born +
race + education + married +
income + diastolicBP + systolicBP +
bmi +
triglycerides + uric.acid +
protein + bilirubin + phosphorus + sodium + potassium +
globulin + calcium + physical.work + physical.recreational +
diabetes")
fit5 <- glm(formula5, family = binomial(), data = analytic3)
publish(fit5)
# VIF
car::vif(fit5)
#### AUC
pred.y <- predict(fit5, type = "response")
rocobj <- roc(analytic3$cholesterol.bin, pred.y)
rocobj
auc(rocobj)
install.packages("SASxport")
devtools::install_github("warnes/SASxport")
install.packages("C:/Users/Ehsan/Desktop/SASxport_1.7.0.tar.gz", repos = NULL, type = "source")
install.packages("nhanesA")
install.packages("MatchIt")
install.packages("WeightIt")
install.packages("skimr")
install.packages("jtools")
install.packages("xml2", dependencies = TRUE)
install.packages("table1")
