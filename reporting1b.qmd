## Create and Clone a Git Repository {.unnumbered}

This tutorial provides a step-by-step guide for creating repositories on GitHub and cloning them to your local computer. GitHub repositories are remote storage spaces that allow you to track script changes, collaborate with colleagues, and document your research process. Public repositories can also be cloned by others to facilitate reproducibility and collaboration.

### Requirements and Necessary Software

-   [GitHub Account](https://github.com/): Click "Sign up" and follow the instructions.
-   R and RStudio ([see previous chapter](wrangling1a.html))
-   [GitHub Desktop](https://desktop.github.com/): Install and sign in.

### Creating a Repository on GitHub

1.  Sign in to GitHub. Click the "+" icon at the top right and select **New repository**.

    ![](Images/reporting/GITHUB_New_Rep.png)

2.  Enter repository details:

    -   **Name** your repository and provide a brief description.

        ![](Images/reporting/repo_name.png)

    -   Choose **public** or **private** visibility.

        ![](Images/reporting/repo_privacy.png)

    -   Select initialization options.

        ![](Images/reporting/repo_intialize.png)

        -   A `README` is recommended for basic project documentation. For formatting tips, see Chapter 8 of [Data Management in Large-Scale Education Research](https://datamgmtinedresearch.com/).
        -   `.gitignore` lets you exclude specific files from version control (e.g., `.Rhistory` or local `.csv` files). See [Git's documentation](https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring).
        -   A license defines how others may use your code. The [MIT License](https://choosealicense.com/licenses/mit/) is commonly used. For guidance, visit [choosealicense.com](https://choosealicense.com/).

    -   Click **Create repository** to finish.

        ![](Images/reporting/repo_new_repo.png)

### Cloning a Repository via Git Bash

1.  Visit the repository you want to clone.

    -   Example: [Advanced Epidemiological Methods](https://github.com/ehsanx/EpiMethods) by Dr. Ehsan Karim.

        ![](Images/reporting/EpiMethods_Page.png)

    -   Click the green **\< \> Code** button and copy the HTTPS link.

        ![](Images/reporting/HTTPS_Code_EpiMethods.png){width="550"}

2.  Open **Git Bash**.

    ![](Images/reporting/Open_Git_Bash.png)

3.  Navigate to the target directory:

    -   Use `pwd` to check your current path.

        ![](Images/reporting/PWD_Git_Command.png)

    -   Use `cd` to move to your preferred folder.

        ![](Images/reporting/CD_Git_Command.png)

    > The path after `~` shows your current location.

4.  Run the clone command:

    ``` bash
    git clone https://github.com/ehsanx/EpiMethods.git
    ```

    ![](Images/reporting/CLONE_Git_Command.png)

### Cloning a Repository via RStudio

1.  Go to the GitHub repository and copy the HTTPS URL.

    ![](Images/reporting/EpiMethods_Page.png)\
    ![](Images/reporting/HTTPS_Code_EpiMethods.png)

2.  Open RStudio: **File** \> **New Project**

    ![](Images/reporting/R_New_Project.png)

3.  Select **Version Control**.

    ![](Images/reporting/R_Version_Control.png)

    -   Then choose **Git**.

        ![](Images/reporting/R_Select_Git.png)

4.  Complete the Git project setup:

    ![](Images/reporting/R_Git_Menu.png)

    -   Paste the HTTPS link under **Repository URL**.

    -   Optionally, edit the **Project directory name**.

    -   Click **Browse** to choose a folder (e.g., your Desktop).

        ![](Images/reporting/R_Git_Menu_Details.png)

    -   Click **Create Project** to finish.

        ![](Images/reporting/R_Git_Menu_Create_Project.png)

    -   The cloned repository will now be available in your selected folder.

### Useful Resources

-   [Best practices for structuring a repository and writing a README](https://datamgmtinedresearch.com/)
-   [.gitignore guide](https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring)
-   [Choosing a license](https://choosealicense.com/)
-   [UBC Library Git & GitHub workshop](https://ubc-library-rc.github.io/intro-git/)
-   [Managing Personal Access Tokens](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens)
