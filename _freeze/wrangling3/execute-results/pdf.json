{
  "hash": "702beada071aca3a0094c2def4f78a88",
  "result": {
    "markdown": "## Data manipulation {.unnumbered}\n\nData manipulation is a foundational skill for data analysis. This guide introduces common methods for subsetting datasets, handling variable types, creating summary tables, and dealing with missing values using R.\n\n\n\n\n\n\n\n### Load dataset\n\nUnderstanding the dataset's structure is the first step in data manipulation. Here, we're using the `mpg` dataset, which provides information on various car models:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/load1_3a677d8783d8c10f4f857e9cb2c5d64c'}\n\n```{.r .cell-code}\nmpg <- read.csv(\"Data/wrangling/mpg.csv\", header = TRUE)\n```\n:::\n\n\n\n### Subset\n\nOften, you'll need to subset your data for analysis. Here, we'll explore different methods to both drop unwanted variables and keep desired observations.\n\n#### Drop variables\n\nSometimes, only part of the variables will be used in your analysis. Therefore, you may want to drop the variables you do not need. There are multiple ways to drop variables from a dataset. Below are two examples without using any package and using the `dplyr` package.\n\n::: callout-tip\n**Option 1: No package needed**\n\ndataset.name\\[, c(the columns you want to KEEP)\\]\n:::\n\nSay, we want to keep only three variables in the mpg dataset: manufacturer, model and cyl. For Option 1 (without package), we can use the following R codes to keep these three variables:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/load2_095d0203fcc3dc791a465d0e9f9b4fec'}\n\n```{.r .cell-code}\nmpg1 <- mpg[, c(\"manufacturer\", \"model\", \"cyl\")]\nhead(mpg1)\n#>   manufacturer model cyl\n#> 1         audi    a4   4\n#> 2         audi    a4   4\n#> 3         audi    a4   4\n#> 4         audi    a4   4\n#> 5         audi    a4   6\n#> 6         audi    a4   6\n```\n:::\n\n\n\nHere `mpg1` is a new dataset containing only three variables (manufacturer, model and cyl).\n\n::: callout-tip\n**Option 2: use select in dplyr**\n\nselect(dataset.name, ...(columns names you want to KEEP))\n:::\n\nFor Option 2, the `dplyr` package offers the `select` function, which provides a more intuitive way to subset data.\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/load3_9d7a681b847fc4db166c95ec2305f66c'}\n\n```{.r .cell-code}\nmpg2 <- select(mpg, c(\"manufacturer\", \"model\", \"cyl\"))\nhead(mpg2)\n#>   manufacturer model cyl\n#> 1         audi    a4   4\n#> 2         audi    a4   4\n#> 3         audi    a4   4\n#> 4         audi    a4   4\n#> 5         audi    a4   6\n#> 6         audi    a4   6\n```\n:::\n\n\n\nWe can also exclude any variables from the dataset by using the minus (-) sign with the `select` function. For example, we we want to drop `trans`, `drv`, and `cty` from the `mpg` dataset, we can use the following codes:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/load4_53002e8ba0a7e6315b62e591a7e763b1'}\n\n```{.r .cell-code}\nmpg3 <- select(mpg, -c(\"trans\", \"drv\", \"cty\"))\nhead(mpg3)\n#>   manufacturer model displ year cyl hwy fl   class\n#> 1         audi    a4   1.8 1999   4  29  p compact\n#> 2         audi    a4   1.8 1999   4  29  p compact\n#> 3         audi    a4   2.0 2008   4  31  p compact\n#> 4         audi    a4   2.0 2008   4  30  p compact\n#> 5         audi    a4   2.8 1999   6  26  p compact\n#> 6         audi    a4   2.8 1999   6  26  p compact\n```\n:::\n\n\n\nThis `mpg3` is a new dataset from `mpg` after dropping three variables (trans, drv, and cty).\n\n#### Keep observations\n\nIt often happens that we only want to investigate a subset of a population which only requires a subset of our dataset. In this case, we need to subset the dataset to meet certain requirements. Again, there are multiple ways to do this task. Below is an example without a package and with the `dplyr` package:\n\n::: callout-tip\n**Option 1: No package needed**\n\ndataset.name\\[the rows you want to KEEP, \\]\n:::\n\n::: callout-tip\n**Option 2: No package needed**\n\nsubset(dataset.name, ...(logical tests))\n:::\n\n::: callout-tip\n**Option 3: use select in dplyr**\n\nfilter(dataset.name, ...(logical tests))\n:::\n\n::: callout-tip\nCommon logical tests are:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Syntax </th>\n   <th style=\"text-align:left;\"> Meaning </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> X &lt;(=) Y </td>\n   <td style=\"text-align:left;\"> Smaller (equal) than </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> X &gt;(=) Y </td>\n   <td style=\"text-align:left;\"> Larger (equal) than </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> X == Y </td>\n   <td style=\"text-align:left;\"> Equal to </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> X != Y </td>\n   <td style=\"text-align:left;\"> Not equal to </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> is.na(X) </td>\n   <td style=\"text-align:left;\"> is NA/missing? </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\nSay, we want to keep the observations for which cars are manufactured in 2008. We can use the following R codes to do it:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep1_cf66f3b107c373f7d92cb91ae8b21f29'}\n\n```{.r .cell-code}\nmpg4 <- mpg[mpg$year == \"2008\",] # Option 1\nhead(mpg4)\n#>    manufacturer      model displ year cyl      trans drv cty hwy fl   class\n#> 3          audi         a4   2.0 2008   4 manual(m6)   f  20  31  p compact\n#> 4          audi         a4   2.0 2008   4   auto(av)   f  21  30  p compact\n#> 7          audi         a4   3.1 2008   6   auto(av)   f  18  27  p compact\n#> 10         audi a4 quattro   2.0 2008   4 manual(m6)   4  20  28  p compact\n#> 11         audi a4 quattro   2.0 2008   4   auto(s6)   4  19  27  p compact\n#> 14         audi a4 quattro   3.1 2008   6   auto(s6)   4  17  25  p compact\n```\n:::\n\n\n\nThe following codes with the `subset` and `filter` function will do the same:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep2_da1f3736c43146fee9240d7ff1a6371b'}\n\n```{.r .cell-code}\nmpg5 <- subset(mpg, year == \"2008\") # Option 1\nhead(mpg5)\n#>    manufacturer      model displ year cyl      trans drv cty hwy fl   class\n#> 3          audi         a4   2.0 2008   4 manual(m6)   f  20  31  p compact\n#> 4          audi         a4   2.0 2008   4   auto(av)   f  21  30  p compact\n#> 7          audi         a4   3.1 2008   6   auto(av)   f  18  27  p compact\n#> 10         audi a4 quattro   2.0 2008   4 manual(m6)   4  20  28  p compact\n#> 11         audi a4 quattro   2.0 2008   4   auto(s6)   4  19  27  p compact\n#> 14         audi a4 quattro   3.1 2008   6   auto(s6)   4  17  25  p compact\n```\n:::\n\n::: {.cell hash='wrangling3_cache/pdf/keep3_a76df56a47b16a9cac6b5c94a436ed33'}\n\n```{.r .cell-code}\nmpg6 <- filter(mpg, year == \"2008\") # Option 3\nhead(mpg6)\n#>   manufacturer      model displ year cyl      trans drv cty hwy fl   class\n#> 1         audi         a4   2.0 2008   4 manual(m6)   f  20  31  p compact\n#> 2         audi         a4   2.0 2008   4   auto(av)   f  21  30  p compact\n#> 3         audi         a4   3.1 2008   6   auto(av)   f  18  27  p compact\n#> 4         audi a4 quattro   2.0 2008   4 manual(m6)   4  20  28  p compact\n#> 5         audi a4 quattro   2.0 2008   4   auto(s6)   4  19  27  p compact\n#> 6         audi a4 quattro   3.1 2008   6   auto(s6)   4  17  25  p compact\n```\n:::\n\n\n\nThe filter function can also work when you have multiple criteria (i.e., multiple logical tests) to satisfy. Here, we need Boolean operators to connect different logical tests.\n\n::: callout-tip\nCommon boolean operators are:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Syntax </th>\n   <th style=\"text-align:left;\"> Meaning </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> &amp; </td>\n   <td style=\"text-align:left;\"> and </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> | </td>\n   <td style=\"text-align:left;\"> or </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ! </td>\n   <td style=\"text-align:left;\"> not </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> == </td>\n   <td style=\"text-align:left;\"> equals to </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> != </td>\n   <td style=\"text-align:left;\"> not equal to </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &gt; </td>\n   <td style=\"text-align:left;\"> greater than </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &lt; </td>\n   <td style=\"text-align:left;\"> less than </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &gt;= </td>\n   <td style=\"text-align:left;\"> greater than or equal to </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> &lt;= </td>\n   <td style=\"text-align:left;\"> less than or equal to </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\nSay, we want to keep the observations for 6 and 8 cylinders (cyl) and engine displacement (displ) greater than or equal to 4 litres. We can use the following codes to do the task:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep4_0a241abbe842f420aec617631043c5c1'}\n\n```{.r .cell-code}\nmpg7 <- filter(mpg, cyl %in% c(\"6\",\"8\") & displ >= 4)\nhead(mpg7)\n#>   manufacturer              model displ year cyl    trans drv cty hwy fl\n#> 1         audi         a6 quattro   4.2 2008   8 auto(s6)   4  16  23  p\n#> 2    chevrolet c1500 suburban 2wd   5.3 2008   8 auto(l4)   r  14  20  r\n#> 3    chevrolet c1500 suburban 2wd   5.3 2008   8 auto(l4)   r  11  15  e\n#> 4    chevrolet c1500 suburban 2wd   5.3 2008   8 auto(l4)   r  14  20  r\n#> 5    chevrolet c1500 suburban 2wd   5.7 1999   8 auto(l4)   r  13  17  r\n#> 6    chevrolet c1500 suburban 2wd   6.0 2008   8 auto(l4)   r  12  17  r\n#>     class\n#> 1 midsize\n#> 2     suv\n#> 3     suv\n#> 4     suv\n#> 5     suv\n#> 6     suv\n```\n:::\n\n\n\n::: column-margin\nThe `%in%` operator is used to determine whether the values of the first argument are present in the second argument.\n:::\n\n#### Handling Variable Types\n\n::: callout-tip\nMost common types of variable in R are\n\n-   numbers,\n-   factors and\n-   strings(or character).\n\nUnderstanding and manipulating these types are crucial for data analysis.\n:::\n\n1.  Identifying Variable Type\n\nWhen we analyze the data, we usually just deal with numbers and factors. If there are variables are strings, we could convert them to factors using **as.factors(variable.name)**\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep5_818d36631eca2212a28c47aeb7a6cb14'}\n\n```{.r .cell-code}\nmode(mpg$trans)\n#> [1] \"character\"\n```\n:::\n\n::: {.cell hash='wrangling3_cache/pdf/keep6_1134e3ee4ddb1fad9fe9420ad6551288'}\n\n```{.r .cell-code}\nstr(mpg$trans)\n#>  chr [1:234] \"auto(l5)\" \"manual(m5)\" \"manual(m6)\" \"auto(av)\" \"auto(l5)\" ...\n```\n:::\n\n\n\n2.  Converting Characters to Factors\n\nSometimes, it's necessary to treat text data as categorical by converting them into factors. **as.numeric()** converts other types of variables to numbers. For a factor variable, we usually we want to access the categories (or levels) it has. We can use a build-in function to explore: **levels(variable.name)**\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep7_8b47d6bac4633aed0bc451705c5ff904'}\n\n```{.r .cell-code}\n# no levels for character\nlevels(mpg$trans)\n#> NULL\n```\n:::\n\n::: {.cell hash='wrangling3_cache/pdf/keep8_e0dc1164b6c275a4388ba2a09e4d9982'}\n\n```{.r .cell-code}\n## Ex check how many different trans the dataset has\nmpg$trans <- as.factor(mpg$trans)\nlevels(mpg$trans)\n#>  [1] \"auto(av)\"   \"auto(l3)\"   \"auto(l4)\"   \"auto(l5)\"   \"auto(l6)\"  \n#>  [6] \"auto(s4)\"   \"auto(s5)\"   \"auto(s6)\"   \"manual(m5)\" \"manual(m6)\"\n```\n:::\n\n\n\nThe levels usually will be ordered alphabetically. The first level is called \"baseline\". However, the users may/may not want to keep this baseline and want to relevel/change the reference group. We can do it using the `relevel` function:\n\n**relevel(variable.name, ref=)**\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep9_6032d2636dbb6e2770e9a02e30a33045'}\n\n```{.r .cell-code}\nmpg$trans <- relevel(mpg$trans, ref = \"auto(s6)\")\nlevels(mpg$trans)\n#>  [1] \"auto(s6)\"   \"auto(av)\"   \"auto(l3)\"   \"auto(l4)\"   \"auto(l5)\"  \n#>  [6] \"auto(l6)\"   \"auto(s4)\"   \"auto(s5)\"   \"manual(m5)\" \"manual(m6)\"\nnlevels(mpg$trans)\n#> [1] 10\n```\n:::\n\n\n\n`factor` function can be also used to combine factors. If the user want to combine multiple factors to one factors\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep10_7a3a5143c33042673016a0f14799bfeb'}\n\n```{.r .cell-code}\n## EX re-group trans to \"auto\" and \"manual\"\nlevels(mpg$trans) <- list(auto = c(\"auto(av)\", \"auto(l3)\", \"auto(l4)\", \"auto(l5)\", \"auto(l6)\", \n                                   \"auto(s4)\", \"auto(s5)\", \"auto(s6)\"), \n                          manual = c(\"manual(m5)\", \"manual(m6)\"))\nlevels(mpg$trans)\n#> [1] \"auto\"   \"manual\"\n```\n:::\n\n\n\nYou can also change the order of all factors using the following code: **factor(variable.name, levels = c(\"new order\"))**\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/keep11_06afb0e32eae66092a4cf0e5af55db6e'}\n\n```{.r .cell-code}\n## EX. Change the order of trans to manual\nmpg$trans <- factor(mpg$trans, levels = c(\"manual\", \"auto\"))\nlevels(mpg$trans)\n#> [1] \"manual\" \"auto\"\n```\n:::\n\n\n\n::: {.column-margin}\nIn R, the use of factors with multiple levels is primarily a memory optimization strategy. While users may not directly see this, R assigns internal numerical identifiers to each level, which is a more memory-efficient way of handling such data. Unlike some other software packages that generate multiple dummy variables to represent a single variable, R's approach is generally more resource-efficient.\n:::\n\n#### Convert continuous variables to categorical variables\n\n::: callout-tip\n`ifelse`, `cut`, `recode` all are helpful functions to convert numerical variables to categorical variables.\n:::\n\nLet's see the summary of the cty variable first.\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/convert1_040f5806470d0ec18e0a2c6d805fad3e'}\n\n```{.r .cell-code}\nsummary(mpg$cty)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    9.00   14.00   17.00   16.86   19.00   35.00\n```\n:::\n\n\n\nsay, we may want to change continuous 'cty' into groups 0-14, 15-18, and 18-40. Below is an example with the `cut` function.\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/convert2_5e59125d3d60c84408717ef97dd0db74'}\n\n```{.r .cell-code}\n## EX. change the cty into two categories (0,14], (14,18] and (18,40]\nmpg$cty.num <- cut(mpg$cty, c(0, 14, 18, 40), right = TRUE)\ntable(mpg$cty.num)\n#> \n#>  (0,14] (14,18] (18,40] \n#>      73      85      76\n```\n:::\n\n::: {.cell hash='wrangling3_cache/pdf/convert3_bdfb3159a1b6f24d1c49e8f2a4d950ad'}\n\n```{.r .cell-code}\n## Try this: do you see a difference?: [0,14), [14,18) and [18,40)\nmpg$cty.num2 <- cut(mpg$cty, c(0, 14, 18, 40), right = FALSE)\ntable(mpg$cty.num2)\n#> \n#>  [0,14) [14,18) [18,40) \n#>      54      78     102\n```\n:::\n\n\n\n::: column-margin\n`]` stands for closed interval, i.e., right = TRUE. On the other hand, `)` means open interval. Hence, there will be a huge difference when setting right = TRUE vs. right = FALSE\n:::\n\n### Missing value\n\n::: callout-tip\nIncomplete datasets can distort analysis. Identifying and managing these missing values is thus crucial.\n:::\n\nWe can check how many missing values we have by: **table(is.na(variable.name))**\n\nLet's us check whether the cty variable contains any missing values:\n\n\n\n::: {.cell hash='wrangling3_cache/pdf/missval_3cef7f739e22814f099e72a7a7b7dc22'}\n\n```{.r .cell-code}\ntable(is.na(mpg$cty))\n#> \n#> FALSE \n#>   234\n```\n:::\n\n\n\nIf you want to return all non-missing values, i.e., complete case values: **na.omit(variable.name)**. For more extensive methods on handling missing values, see subsequent tutorials.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"unnamed-chunk-1\",\"unnamed-chunk-1\",\"unnamed-chunk-2\",\"unnamed-chunk-2\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"kePrint\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.0.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"C:/Users/wilds/AppData/Local/R/win-library/4.2/kableExtra/kePrint-0.0.1\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"kePrint.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lightable\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.0.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"C:/Users/wilds/AppData/Local/R/win-library/4.2/kableExtra/lightable-0.0.1\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"lightable.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"kePrint\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.0.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"C:/Users/wilds/AppData/Local/R/win-library/4.2/kableExtra/kePrint-0.0.1\"]}]},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"kePrint.js\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"version\",\"src\",\"meta\",\"script\",\"stylesheet\",\"head\",\"attachment\",\"package\",\"all_files\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"html_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"lightable\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"0.0.1\"]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"file\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"C:/Users/wilds/AppData/Local/R/win-library/4.2/kableExtra/lightable-0.0.1\"]}]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"character\",\"attributes\":{},\"value\":[\"lightable.css\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"NULL\"},{\"type\":\"logical\",\"attributes\":{},\"value\":[true]}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}