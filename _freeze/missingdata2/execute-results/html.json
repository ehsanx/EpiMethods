{
  "hash": "1bdae11619c05fdd9cbae84b8309ed99",
  "result": {
    "markdown": "## Imputation in NHANES {.unnumbered}\n\nThis tutorial provides a comprehensive guide on handling and analyzing complex survey data with missing values. In analyzing complex survey data, a distinct approach is required compared to handling regular datasets. Specifically, the intricacies of survey design necessitate the consideration of primary sampling units/cluster, sampling weights, and stratification factors. These elements ensure that the analysis accurately reflects the survey's design and the underlying population structure. Recognizing and incorporating these factors is crucial for obtaining valid and representative insights from the data. As we delve into this tutorial, we'll explore how to effectively integrate these components into our missing data analysis process.\n\n### Complex Survey data\n\nIn the initial chunk, we load all the necessary libraries that will be used throughout the tutorial. These libraries provide functions and tools for data exploration, visualization, imputation, and analysis.\n\n\n::: {.cell hash='missingdata2_cache/html/setup_20c901c565d73549aae622c68e177d34'}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(mice)\nlibrary(DataExplorer)\nlibrary(VIM)\nlibrary(jtools)\nlibrary(survey)\nlibrary(mitools)\n```\n:::\n\n\nNext, we load a dataset that contains survey data with some missing values. We then select specific columns or variables from this dataset that we are interested in analyzing. To understand the extent and pattern of missingness in our data, we visualize it and display the missing data pattern.\n\n\n::: {.cell hash='missingdata2_cache/html/load_a303e5a5f842b53a8af3e689fcc914a6'}\n\n```{.r .cell-code}\nload(\"Data/missingdata/NHANES17.RData\")\n\nVars <- c(\"ID\", \"weight\", \"psu\", \"strata\", \n          \"gender\", \"born\", \"race\", \n          \"bmi\", \"cholesterol\", \"diabetes\")\nanalyticx <- analytic.with.miss[,Vars]\nplot_missing(analyticx)\n```\n\n::: {.cell-output-display}\n![](missingdata2_files/figure-html/load-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmd.pattern(analyticx)\n```\n\n::: {.cell-output-display}\n![](missingdata2_files/figure-html/load-2.png){width=672}\n:::\n\n```\n#>      ID weight psu strata gender race born diabetes  bmi cholesterol     \n#> 6636  1      1   1      1      1    1    1        1    1           1    0\n#> 1364  1      1   1      1      1    1    1        1    1           0    1\n#> 97    1      1   1      1      1    1    1        1    0           1    1\n#> 795   1      1   1      1      1    1    1        1    0           0    2\n#> 4     1      1   1      1      1    1    1        0    1           1    1\n#> 357   1      1   1      1      1    1    1        0    0           0    3\n#> 1     1      1   1      1      1    1    0        1    1           1    1\n#>       0      0   0      0      0    0    1      361 1249        2516 4127\n```\n:::\n\n\n### Imputing\n\nIn the following chunk, we address the missing data by performing multiple imputations. This means that instead of filling in each missing value with a single estimate, we create multiple versions (datasets) where each missing value is filled in differently based on a specified algorithm. This helps in capturing the uncertainty around the missing values. The chunk sets up the parameters for multiple imputations, ensuring reproducibility and efficiency, and then performs the imputations on the dataset with missing values. \n\n\n::: {.cell hash='missingdata2_cache/html/imp_f2fa5fee922be99ede575dbf32866e4b'}\n\n```{.r .cell-code}\n# imputation <- mice(analyticx, m=5, maxit=5, seed = 504007)\nset.seed(504)\nimputation <- parlmice(analyticx, m=5, maxit=5, cluster.seed=504007)\n```\n:::\n\n\n- **Data Input**: The primary input for the imputation function is the dataset with missing values. This dataset is what we aim to impute.\n- **Number of Imputations**: The option `m=5` indicates that we want to create 5 different imputed datasets. Each of these datasets will have the missing values filled in slightly differently, based on the underlying imputation algorithm and the randomness introduced.\n- **Maximum Iterations**: The imputation process is iterative, meaning it refines its estimates over several rounds. The option `maxit=5` specifies that the algorithm should run for a maximum of 5 iterations. This helps in achieving more accurate imputations, especially when the missing data mechanism is complex.\n- **Setting Seed**: In computational processes that involve randomness, it's often useful to set a \"seed\" value. This ensures that the random processes are reproducible. If you run the imputation multiple times with the same seed, you'll get the same results each time. Two seed values are set in the chunk: one using the general `set.seed()` function and another specifically for the imputation function as `cluster.seed`.\n- **Parallel Processing**: The function `parlmice` used for imputation indicates that the imputations are done in parallel. This means that instead of imputing one dataset after the other, the function tries to impute multiple datasets simultaneously (if the computational resources allow). This can speed up the process, especially when dealing with large datasets or when creating many imputed datasets.\n\n### Create new variable\n\nAfter imputation, we might want to create new variables or modify existing ones to better suit our analysis. Here, we transform one of the variables into a binary category based on a threshold. This can help in simplifying the analysis or making the results more interpretable.\n\n\n::: {.cell hash='missingdata2_cache/html/newvar_fc78171edf1b171b2f6385b297ce4c6d'}\n\n```{.r .cell-code}\nimpdata <- complete(imputation, action=\"long\") #stacked data\nimpdata$cholesterol.bin <- ifelse(impdata$cholesterol < 200, \"healthy\", \"unhealthy\")\nimpdata$cholesterol.bin <- as.factor(impdata$cholesterol.bin)\ndim(impdata)\n#> [1] 46270    13\nhead(impdata)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\".imp\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\".id\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"ID\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"weight\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"psu\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"strata\"],\"name\":[6],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"born\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"race\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"bmi\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cholesterol\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"diabetes\"],\"name\":[12],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cholesterol.bin\"],\"name\":[13],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"1\",\"3\":\"93703\",\"4\":\"8539.731\",\"5\":\"2\",\"6\":\"145\",\"7\":\"Female\",\"8\":\"Born in 50 US states or Washingt\",\"9\":\"Other\",\"10\":\"17.5\",\"11\":\"160\",\"12\":\"No\",\"13\":\"healthy\",\"_rn_\":\"1\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"93704\",\"4\":\"42566.615\",\"5\":\"1\",\"6\":\"143\",\"7\":\"Male\",\"8\":\"Born in 50 US states or Washingt\",\"9\":\"White\",\"10\":\"15.7\",\"11\":\"186\",\"12\":\"No\",\"13\":\"healthy\",\"_rn_\":\"2\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"93705\",\"4\":\"8338.420\",\"5\":\"2\",\"6\":\"145\",\"7\":\"Female\",\"8\":\"Born in 50 US states or Washingt\",\"9\":\"Black\",\"10\":\"31.7\",\"11\":\"157\",\"12\":\"No\",\"13\":\"healthy\",\"_rn_\":\"3\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"93706\",\"4\":\"8723.440\",\"5\":\"2\",\"6\":\"134\",\"7\":\"Male\",\"8\":\"Born in 50 US states or Washingt\",\"9\":\"Other\",\"10\":\"21.5\",\"11\":\"148\",\"12\":\"No\",\"13\":\"healthy\",\"_rn_\":\"4\"},{\"1\":\"1\",\"2\":\"5\",\"3\":\"93707\",\"4\":\"7064.610\",\"5\":\"1\",\"6\":\"138\",\"7\":\"Male\",\"8\":\"Born in 50 US states or Washingt\",\"9\":\"Other\",\"10\":\"18.1\",\"11\":\"189\",\"12\":\"No\",\"13\":\"healthy\",\"_rn_\":\"5\"},{\"1\":\"1\",\"2\":\"6\",\"3\":\"93708\",\"4\":\"14372.489\",\"5\":\"2\",\"6\":\"138\",\"7\":\"Female\",\"8\":\"Others\",\"9\":\"Other\",\"10\":\"23.7\",\"11\":\"209\",\"12\":\"Yes\",\"13\":\"unhealthy\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Checking the data\n\nAfter imputation, it's crucial to ensure that the imputed data maintains the integrity and structure of the original dataset. The following chunks are designed to help you visually and programmatically inspect the imputed data.\n\n**Visual Inspection of Missing Data**:\n\nIn this chunk, we visually inspect the imputed datasets to see if there are any remaining missing values. We specifically look at the first two imputed datasets. Visualization tools like these can quickly show if the imputation process was successful in filling all missing values.\n\n\n::: {.cell hash='missingdata2_cache/html/check1_4e7e03743d06307610061ec3f66afbed'}\n\n```{.r .cell-code}\nplot_missing(subset(impdata, subset=.imp==1))\n```\n\n::: {.cell-output-display}\n![](missingdata2_files/figure-html/check1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_missing(subset(impdata, subset=.imp==2))\n```\n\n::: {.cell-output-display}\n![](missingdata2_files/figure-html/check1-2.png){width=672}\n:::\n:::\n\n\n**Comparing Original and Imputed Data (First Imputed Dataset)**:\n\n- In this chunk, we focus on the first imputed dataset. We extract this dataset and display the initial entries to get a sense of the data.\n- We then remove any remaining missing values (if any) and display the initial entries of this complete dataset.\n- Next, we compare the IDs (or unique identifiers) of the entries in the complete dataset with the original dataset to see which entries had missing values. \n- We then create a new variable that indicates whether an entry had missing values or not and tabulate this information.\n\n\n::: {.cell hash='missingdata2_cache/html/check2_d1fe6babb850404b40d2ec1608f8e650'}\n\n```{.r .cell-code}\nanalytic.miss1 <- subset(impdata, subset=.imp==1)\nhead(analytic.miss1$ID) # full data\n#> [1] 93703 93704 93705 93706 93707 93708\n\nanalytic1 <- as.data.frame(na.omit(analytic.miss1))\nhead(analytic1$ID) # complete case\n#> [1] 93703 93704 93705 93706 93707 93708\n\nhead(analytic.miss1$ID[analytic.miss1$ID %in% analytic1$ID])\n#> [1] 93703 93704 93705 93706 93707 93708\n\nanalytic.miss1$miss <- 1\nanalytic.miss1$miss[analytic.miss1$ID %in% analytic1$ID] <- 0\ntable(analytic.miss1$miss)\n#> \n#>    0    1 \n#> 8892  362\n\nhead(analytic.miss1$ID[analytic.miss1$miss==1])\n#> [1] 93710 93748 93786 93854 93865 93934\ntail(analytic.miss1$ID[analytic.miss1$miss==1])\n#> [1] 102840 102862 102919 102927 102928 102942\n```\n:::\n\n\n**Comparing Original and Imputed Data (Second Imputed Dataset)**:\n\nThe this chunk is similar to the above but focuses on the second imputed dataset. We perform the same steps: extracting the dataset, removing missing values, comparing IDs, and creating a variable to indicate missingness.\n\n\n::: {.cell hash='missingdata2_cache/html/check3_8d84aee32a802f5f5ed02bfbfac74e04'}\n\n```{.r .cell-code}\nanalytic.miss2 <- subset(impdata, subset=.imp==2)\nhead(analytic.miss2$ID) # full data\n#> [1] 93703 93704 93705 93706 93707 93708\n\nanalytic2 <- as.data.frame(na.omit(analytic.miss2))\nhead(analytic2$ID) # complete case\n#> [1] 93703 93704 93705 93706 93707 93708\n\nhead(analytic.miss2$ID[analytic.miss2$ID %in% analytic2$ID])\n#> [1] 93703 93704 93705 93706 93707 93708\n\nanalytic.miss2$miss <- 1\nanalytic.miss2$miss[analytic.miss2$ID %in% analytic2$ID] <- 0\ntable(analytic.miss2$miss)\n#> \n#>    0    1 \n#> 8892  362\n\nhead(analytic.miss1$ID[analytic.miss1$miss==1])\n#> [1] 93710 93748 93786 93854 93865 93934\ntail(analytic.miss1$ID[analytic.miss1$miss==1])\n#> [1] 102840 102862 102919 102927 102928 102942\n```\n:::\n\n\n**Aggregating Missingness Information Across All Imputed Datasets**:\n\n- In the fourth chunk, we aim to consolidate the missingness information across all imputed datasets. We initialize a variable in the main dataset to indicate missingness.\n- We then loop through each of the imputed datasets and update the main dataset's missingness variable based on the missingness information from each imputed dataset. This gives us a consolidated view of which entries had missing values across all imputed datasets.\n\n\n::: {.cell hash='missingdata2_cache/html/check4_a8004a8f02cce256ba9e8395a5ec645c'}\n\n```{.r .cell-code}\nimpdata$miss<-1\nm <- 5\nfor (i in 1:m){\n  impdata$miss[impdata$.imp == i] <- analytic.miss2$miss\n  print(table(impdata$miss[impdata$.imp == i]))\n}\n#> \n#>    0    1 \n#> 8892  362 \n#> \n#>    0    1 \n#> 8892  362 \n#> \n#>    0    1 \n#> 8892  362 \n#> \n#>    0    1 \n#> 8892  362 \n#> \n#>    0    1 \n#> 8892  362\n```\n:::\n\n\n### Combining data\n\nSince we have multiple versions of the imputed dataset, we need a way to combine them for analysis. In the next chunks, we use a method to merge these datasets into a single list, making it easier to apply subsequent analyses on all datasets simultaneously.\n\n\n::: {.cell hash='missingdata2_cache/html/combine1_e80114a00bea27e712ff2022292a3eb3'}\n\n```{.r .cell-code}\nlibrary(mitools) \nallImputations <- imputationList(list(\n  subset(impdata, subset=.imp==1),\n  subset(impdata, subset=.imp==2),\n  subset(impdata, subset=.imp==3),\n  subset(impdata, subset=.imp==4), \n  subset(impdata, subset=.imp==5)))\nstr(allImputations)\n#> List of 2\n#>  $ imputations:List of 5\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 18.3 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 160 186 157 148 189 209 176 162 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 44.8 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 107 153 157 148 189 209 176 195 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 3 3 3 3 3 3 3 3 3 3 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 13.6 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 153 110 157 148 189 209 176 141 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 4 4 4 4 4 4 4 4 4 4 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 19.2 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 160 159 157 148 189 209 176 196 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 5 5 5 5 5 5 5 5 5 5 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 26 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 132 198 157 148 189 209 176 255 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 2 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>  $ call       : language imputationList(list(subset(impdata, subset = .imp == 1), subset(impdata,      subset = .imp == 2), subset(impdata| __truncated__ ...\n#>  - attr(*, \"class\")= chr \"imputationList\"\n```\n:::\n\n\n### Combining data efficiently\n\n\n::: {.cell hash='missingdata2_cache/html/combine2_3419f46d70a9462014b1bbbf193f7700'}\n\n```{.r .cell-code}\nm <- 5\nset.seed(123)\nallImputations <-  imputationList(lapply(1:m, \n                                         function(n)  \n                                           subset(impdata, subset=.imp==n)))\n                                           #mice::complete(imputation, action = n)))\nsummary(allImputations)\n#>             Length Class  Mode\n#> imputations 5      -none- list\n#> call        2      -none- call\nstr(allImputations)\n#> List of 2\n#>  $ imputations:List of 5\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 18.3 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 160 186 157 148 189 209 176 162 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 44.8 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 107 153 157 148 189 209 176 195 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 3 3 3 3 3 3 3 3 3 3 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 13.6 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 153 110 157 148 189 209 176 141 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 4 4 4 4 4 4 4 4 4 4 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 19.2 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 160 159 157 148 189 209 176 196 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 1 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp           : int [1:9254] 5 5 5 5 5 5 5 5 5 5 ...\n#>   .. ..$ .id            : int [1:9254] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ ID             : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ weight         : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ psu            : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata         : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ gender         : chr [1:9254] \"Female\" \"Male\" \"Female\" \"Male\" ...\n#>   .. ..$ born           : chr [1:9254] \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" \"Born in 50 US states or Washingt\" ...\n#>   .. ..$ race           : chr [1:9254] \"Other\" \"White\" \"Black\" \"Other\" ...\n#>   .. ..$ bmi            : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 26 21.3 19.7 ...\n#>   .. ..$ cholesterol    : int [1:9254] 132 198 157 148 189 209 176 255 238 182 ...\n#>   .. ..$ diabetes       : chr [1:9254] \"No\" \"No\" \"No\" \"No\" ...\n#>   .. ..$ cholesterol.bin: Factor w/ 2 levels \"healthy\",\"unhealthy\": 1 1 1 1 1 2 1 2 2 1 ...\n#>   .. ..$ miss           : num [1:9254] 0 0 0 0 0 0 0 1 0 0 ...\n#>  $ call       : language imputationList(lapply(1:m, function(n) subset(impdata, subset = .imp ==      n)))\n#>  - attr(*, \"class\")= chr \"imputationList\"\n```\n:::\n\n\n### Logistic regression\n\nWith our imputed datasets ready, we proceed to fit a statistical model. Here, we use logistic regression as an example. We fit the model to each imputed dataset separately and then extract relevant statistics like odds ratios and confidence intervals.\n\n\n::: {.cell hash='missingdata2_cache/html/fit0_5536688bcbfecc5dd889a6f451195b27'}\n\n```{.r .cell-code}\nrequire(jtools)\nrequire(survey)\ndata.list <- vector(\"list\", m)\nmodel.formula <- as.formula(\"I(cholesterol.bin=='healthy')~diabetes+gender+born+race+bmi\")\n```\n:::\n\n::: {.cell hash='missingdata2_cache/html/fit1_33bace3c035a57958f5d8d95d6a65031'}\n\n```{.r .cell-code}\nsummary(allImputations$imputations[[1]]$weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>       0   12347   21060   34671   37562  419763\nsum(allImputations$imputations[[1]]$weight==0)\n#> [1] 550\nw.design0 <- svydesign(ids=~psu, weights=~weight, strata=~strata,\n                           data = allImputations, nest = TRUE)\nw.design <- subset(w.design0, miss == 0)\nfits <- with(w.design, svyglm(model.formula, family=quasibinomial))\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n# Estimate from first data\nexp(coef(fits[[1]]))[2]\n#> diabetesYes \n#>    1.409246\nexp(confint(fits[[1]]))[2,]\n#>    2.5 %   97.5 % \n#> 1.129997 1.757503\n# Estimate from second data\nexp(coef(fits[[2]]))[2]\n#> diabetesYes \n#>    1.437951\nexp(confint(fits[[2]]))[2,]\n#>    2.5 %   97.5 % \n#> 1.171160 1.765518\n```\n:::\n\n\n### Pooled / averaged estimates\n\nAfter analyzing each imputed dataset separately, we need to combine the results to get a single set of estimates. This is done using a method that pools the results, taking into account the variability between the different imputed datasets.\n\n\n::: {.cell hash='missingdata2_cache/html/fit2_77691af175359907d6f120cf329cf1d7'}\n\n```{.r .cell-code}\npooled.estimates <- MIcombine(fits)\nsum.pooled <- summary(pooled.estimates)\n#> Multiple imputation results:\n#>       with(w.design, svyglm(model.formula, family = quasibinomial))\n#>       MIcombine.default(fits)\n#>                   results          se        (lower       upper) missInfo\n#> (Intercept)    2.13514754 0.236310332   1.667691110   2.60260397     19 %\n#> diabetesYes    0.35209050 0.089197557   0.177261457   0.52691955      1 %\n#> genderMale     0.17677460 0.088502097   0.003168621   0.35038058      5 %\n#> bornOthers    -0.59642404 0.096782869  -0.786797572  -0.40605051     11 %\n#> bornRefused  -12.33262819 0.708505945 -13.721274703 -10.94398169      0 %\n#> raceHispanic   0.13913500 0.142910787  -0.141238429   0.41950842      6 %\n#> raceOther     -0.17347602 0.105412185  -0.380201753   0.03324971      5 %\n#> raceWhite     -0.35812104 0.134733737  -0.622240268  -0.09400181      2 %\n#> bmi           -0.04011243 0.006523474  -0.053037557  -0.02718730     20 %\nexp(sum.pooled[,1])\n#> [1] 8.458294e+00 1.422037e+00 1.193362e+00 5.507777e-01 4.405626e-06\n#> [6] 1.149279e+00 8.407373e-01 6.989885e-01 9.606814e-01\nOR <- round(exp(pooled.estimates$coefficients),2) \nOR <- as.data.frame(OR)\nCI <- round(exp(confint(pooled.estimates)),2)\nsig <- (CI[,1] < 1 & CI[,2] > 1)\nsig <- ifelse(sig==FALSE, \"*\", \"\")\nOR <- cbind(OR,CI,sig)\nOR\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"OR\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"2.5 %\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"97.5 %\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sig\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"8.46\",\"2\":\"5.32\",\"3\":\"13.44\",\"4\":\"*\",\"_rn_\":\"(Intercept)\"},{\"1\":\"1.42\",\"2\":\"1.19\",\"3\":\"1.69\",\"4\":\"*\",\"_rn_\":\"diabetesYes\"},{\"1\":\"1.19\",\"2\":\"1.00\",\"3\":\"1.42\",\"4\":\"*\",\"_rn_\":\"genderMale\"},{\"1\":\"0.55\",\"2\":\"0.46\",\"3\":\"0.67\",\"4\":\"*\",\"_rn_\":\"bornOthers\"},{\"1\":\"0.00\",\"2\":\"0.00\",\"3\":\"0.00\",\"4\":\"*\",\"_rn_\":\"bornRefused\"},{\"1\":\"1.15\",\"2\":\"0.87\",\"3\":\"1.52\",\"4\":\"\",\"_rn_\":\"raceHispanic\"},{\"1\":\"0.84\",\"2\":\"0.68\",\"3\":\"1.03\",\"4\":\"\",\"_rn_\":\"raceOther\"},{\"1\":\"0.70\",\"2\":\"0.54\",\"3\":\"0.91\",\"4\":\"*\",\"_rn_\":\"raceWhite\"},{\"1\":\"0.96\",\"2\":\"0.95\",\"3\":\"0.97\",\"4\":\"*\",\"_rn_\":\"bmi\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Step-by-step example\n\nThis segment offers a hands-on approach to understanding the imputation process. Here's a breakdown:\n\n1. **Fitting Models to Individual Imputed Datasets**:\n   - A list is initialized to store the results of models fitted to each imputed dataset.\n   - For every dataset, the specific imputed data is extracted.\n   - A survey design is established, considering factors like primary sampling units, stratification, and weights. This ensures the analysis aligns with the survey's design.\n   - This design is then refined to only consider complete data entries.\n   - A logistic regression model is then applied to this refined data.\n   - The results of this modeling are stored and displayed for review.\n\n2. **Pooling Results from All Models**:\n   - After individual analysis, the next step is to combine or 'pool' these results.\n   - A special function is used to merge the results from all the models. This function accounts for variations between datasets and offers a combined estimate.\n   - A summary of this combined data is then displayed, offering insights like coefficients, standard errors, and more. Another version of this summary, focusing on log-effects, is also presented for deeper insights.\n\n\n::: {.cell hash='missingdata2_cache/html/fit3_d155f4eac6fa7649d4e1e90c10679b56'}\n\n```{.r .cell-code}\nfits2 <- vector(\"list\", m)\nfor (i in 1:m) {\n  analytic.i <- allImputations$imputations[[i]]\n  w.design0.i <- svydesign(id=~psu, strata=~strata, weights=~weight,\n                        data=analytic.i, nest = TRUE)\n  w.design.i <- subset(w.design0.i, miss == 0)\n  fit <- svyglm(model.formula, design=w.design.i, \n                family = quasibinomial(\"logit\"))\n  print(summ(fit))\n  fits2[[i]] <- fit\n}\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> MODEL INFO:\n#> Observations: 8892\n#> Dependent Variable: I(cholesterol.bin == \"healthy\")\n#> Type: Analysis of complex survey design \n#>  Family: quasibinomial \n#>  Link function: logit \n#> \n#> MODEL FIT:\n#> Pseudo-R² (Cragg-Uhler) = 0.05\n#> Pseudo-R² (McFadden) = 0.03\n#> AIC =  NA \n#> \n#> --------------------------------------------------\n#>                        Est.   S.E.   t val.      p\n#> ------------------ -------- ------ -------- ------\n#> (Intercept)            2.26   0.20    11.32   0.00\n#> diabetesYes            0.34   0.09     3.67   0.01\n#> genderMale             0.17   0.09     1.88   0.10\n#> bornOthers            -0.62   0.10    -6.36   0.00\n#> bornRefused          -12.35   0.70   -17.63   0.00\n#> raceHispanic           0.18   0.14     1.27   0.25\n#> raceOther             -0.20   0.11    -1.77   0.12\n#> raceWhite             -0.38   0.13    -2.83   0.03\n#> bmi                   -0.04   0.01    -7.92   0.00\n#> --------------------------------------------------\n#> \n#> Estimated dispersion parameter = 0.99\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> MODEL INFO:\n#> Observations: 8892\n#> Dependent Variable: I(cholesterol.bin == \"healthy\")\n#> Type: Analysis of complex survey design \n#>  Family: quasibinomial \n#>  Link function: logit \n#> \n#> MODEL FIT:\n#> Pseudo-R² (Cragg-Uhler) = 0.05\n#> Pseudo-R² (McFadden) = 0.03\n#> AIC =  NA \n#> \n#> --------------------------------------------------\n#>                        Est.   S.E.   t val.      p\n#> ------------------ -------- ------ -------- ------\n#> (Intercept)            2.08   0.23     9.17   0.00\n#> diabetesYes            0.36   0.09     4.19   0.00\n#> genderMale             0.20   0.08     2.49   0.04\n#> bornOthers            -0.63   0.08    -7.41   0.00\n#> bornRefused          -12.33   0.71   -17.25   0.00\n#> raceHispanic           0.13   0.14     0.95   0.37\n#> raceOther             -0.16   0.10    -1.57   0.16\n#> raceWhite             -0.37   0.14    -2.71   0.03\n#> bmi                   -0.04   0.01    -6.05   0.00\n#> --------------------------------------------------\n#> \n#> Estimated dispersion parameter = 1\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> MODEL INFO:\n#> Observations: 8892\n#> Dependent Variable: I(cholesterol.bin == \"healthy\")\n#> Type: Analysis of complex survey design \n#>  Family: quasibinomial \n#>  Link function: logit \n#> \n#> MODEL FIT:\n#> Pseudo-R² (Cragg-Uhler) = 0.04\n#> Pseudo-R² (McFadden) = 0.02\n#> AIC =  NA \n#> \n#> --------------------------------------------------\n#>                        Est.   S.E.   t val.      p\n#> ------------------ -------- ------ -------- ------\n#> (Intercept)            2.03   0.22     9.22   0.00\n#> diabetesYes            0.35   0.08     4.30   0.00\n#> genderMale             0.17   0.09     1.88   0.10\n#> bornOthers            -0.56   0.08    -7.21   0.00\n#> bornRefused          -12.30   0.70   -17.49   0.00\n#> raceHispanic           0.10   0.13     0.76   0.47\n#> raceOther             -0.19   0.10    -1.81   0.11\n#> raceWhite             -0.34   0.13    -2.59   0.04\n#> bmi                   -0.04   0.01    -6.58   0.00\n#> --------------------------------------------------\n#> \n#> Estimated dispersion parameter = 0.99\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> MODEL INFO:\n#> Observations: 8892\n#> Dependent Variable: I(cholesterol.bin == \"healthy\")\n#> Type: Analysis of complex survey design \n#>  Family: quasibinomial \n#>  Link function: logit \n#> \n#> MODEL FIT:\n#> Pseudo-R² (Cragg-Uhler) = 0.05\n#> Pseudo-R² (McFadden) = 0.03\n#> AIC =  NA \n#> \n#> --------------------------------------------------\n#>                        Est.   S.E.   t val.      p\n#> ------------------ -------- ------ -------- ------\n#> (Intercept)            2.18   0.21    10.57   0.00\n#> diabetesYes            0.36   0.09     3.75   0.01\n#> genderMale             0.16   0.09     1.78   0.12\n#> bornOthers            -0.57   0.10    -5.98   0.00\n#> bornRefused          -12.35   0.71   -17.32   0.00\n#> raceHispanic           0.12   0.14     0.83   0.43\n#> raceOther             -0.16   0.10    -1.61   0.15\n#> raceWhite             -0.34   0.13    -2.55   0.04\n#> bmi                   -0.04   0.01    -7.11   0.00\n#> --------------------------------------------------\n#> \n#> Estimated dispersion parameter = 0.99\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> MODEL INFO:\n#> Observations: 8892\n#> Dependent Variable: I(cholesterol.bin == \"healthy\")\n#> Type: Analysis of complex survey design \n#>  Family: quasibinomial \n#>  Link function: logit \n#> \n#> MODEL FIT:\n#> Pseudo-R² (Cragg-Uhler) = 0.05\n#> Pseudo-R² (McFadden) = 0.03\n#> AIC =  NA \n#> \n#> --------------------------------------------------\n#>                        Est.   S.E.   t val.      p\n#> ------------------ -------- ------ -------- ------\n#> (Intercept)            2.12   0.22     9.67   0.00\n#> diabetesYes            0.35   0.09     4.02   0.01\n#> genderMale             0.19   0.08     2.30   0.06\n#> bornOthers            -0.60   0.10    -6.06   0.00\n#> bornRefused          -12.33   0.71   -17.40   0.00\n#> raceHispanic           0.17   0.14     1.20   0.27\n#> raceOther             -0.17   0.10    -1.64   0.14\n#> raceWhite             -0.36   0.13    -2.78   0.03\n#> bmi                   -0.04   0.01    -6.65   0.00\n#> --------------------------------------------------\n#> \n#> Estimated dispersion parameter = 0.99\n```\n:::\n\n::: {.cell hash='missingdata2_cache/html/fit4_11ffa1f17ce850bfb4c592da1e8e105b'}\n\n```{.r .cell-code}\npooled.estimates <- MIcombine(fits2)\nsummary(pooled.estimates)\n#> Multiple imputation results:\n#>       MIcombine.default(fits2)\n#>                   results          se        (lower       upper) missInfo\n#> (Intercept)    2.13514754 0.236310332   1.667691110   2.60260397     19 %\n#> diabetesYes    0.35209050 0.089197557   0.177261457   0.52691955      1 %\n#> genderMale     0.17677460 0.088502097   0.003168621   0.35038058      5 %\n#> bornOthers    -0.59642404 0.096782869  -0.786797572  -0.40605051     11 %\n#> bornRefused  -12.33262819 0.708505945 -13.721274703 -10.94398169      0 %\n#> raceHispanic   0.13913500 0.142910787  -0.141238429   0.41950842      6 %\n#> raceOther     -0.17347602 0.105412185  -0.380201753   0.03324971      5 %\n#> raceWhite     -0.35812104 0.134733737  -0.622240268  -0.09400181      2 %\n#> bmi           -0.04011243 0.006523474  -0.053037557  -0.02718730     20 %\nsummary(pooled.estimates,logeffect=TRUE, digits = 2)\n#> Multiple imputation results:\n#>       MIcombine.default(fits2)\n#>              results      se  (lower  upper) missInfo\n#> (Intercept)  8.5e+00 2.0e+00 5.3e+00 1.3e+01     19 %\n#> diabetesYes  1.4e+00 1.3e-01 1.2e+00 1.7e+00      1 %\n#> genderMale   1.2e+00 1.1e-01 1.0e+00 1.4e+00      5 %\n#> bornOthers   5.5e-01 5.3e-02 4.6e-01 6.7e-01     11 %\n#> bornRefused  4.4e-06 3.1e-06 1.1e-06 1.8e-05      0 %\n#> raceHispanic 1.1e+00 1.6e-01 8.7e-01 1.5e+00      6 %\n#> raceOther    8.4e-01 8.9e-02 6.8e-01 1.0e+00      5 %\n#> raceWhite    7.0e-01 9.4e-02 5.4e-01 9.1e-01      2 %\n#> bmi          9.6e-01 6.3e-03 9.5e-01 9.7e-01     20 %\n```\n:::\n\n\n### Variable selection\n\nSometimes, not all variables in the dataset are relevant for our analysis. In the final chunks, we apply a method to select the most relevant variables for our model. This can help in simplifying the model and improving its interpretability.\n\n\n::: {.cell hash='missingdata2_cache/html/fit5_3558bc4c28ee22ff3e1a5226b0e80914'}\n\n```{.r .cell-code}\nrequire(jtools)\nrequire(survey)\ndata.list <- vector(\"list\", m)\nmodel.formula <- as.formula(\"cholesterol~diabetes+gender+born+race+bmi\")\nscope <- list(upper = ~ diabetes+gender+born+race+bmi,\n              lower = ~ diabetes)\nfor (i in 1:m) {\n  analytic.i <- allImputations$imputations[[i]]\n  w.design0.i <- svydesign(id=~psu, strata=~strata, weights=~weight,\n                        data=analytic.i, nest = TRUE)\n  w.design.i <- subset(w.design0.i, miss == 0)\n  fit <- svyglm(model.formula, design=w.design.i)\n  fitstep <- step(fit, scope = scope, trace = FALSE,\n                              direction = \"backward\")\n  data.list[[i]] <- fitstep\n}\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(g): observations with zero weight not used for\n#> calculating dispersion\n#> Warning in summary.glm(glm.object): observations with zero weight not used for\n#> calculating dispersion\n```\n:::\n\n\nCheck out the variables selected\n\n\n::: {.cell hash='missingdata2_cache/html/stepTab_1732f85d03cc4e12e6048bb6e9bafcef'}\n\n```{.r .cell-code}\nx <- all.vars(formula(fit))\nfor (i in 1:m) x <- c(x, all.vars(formula(data.list[[i]])))\ntable(x)-1\n#> x\n#>         bmi        born cholesterol    diabetes      gender        race \n#>           5           5           5           5           5           5\n```\n:::\n\n\n\n#### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/Ndwplpu2lQk\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/nFOL9fdJTY8\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}