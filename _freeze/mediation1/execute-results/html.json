{
  "hash": "556326187193172ccd5d995bead6d1e7",
  "result": {
    "markdown": "## Baron and Kenny {.unnumbered}\n\n### Baron and Kenny (1986) approach 1\n\nIn Baron and Kenny approach 1 [@baron1986moderator], two regression models are fitted to estimate the total effect, direct effect, and indirect effect. \n\n$$ Y = \\alpha_{0} + \\beta_0 A + \\gamma_0 M, $$\n$$ Y = \\alpha_{1} + \\beta_1 A, $$\nwhere $Y$ is the outcome, $A$ is the exposure, $M$ is the mediator, and $\\alpha, \\beta, \\gamma$ are regression coefficients. The effects are then calculated as:\n\n-   Total effect of A on Y: $\\hat{\\beta}_1$\n-   Direct effect of A on Y: $\\hat{\\beta}_0$\n-   Indirect effect of A on Y through M: $\\hat{\\beta}_1 - \\hat{\\beta}_0$, \n\nwhere $\\hat{\\beta}$ is estimated regression coefficient of $\\beta$.\n\n### Baron and Kenny (1986) approach 2\nIn the second approach, three models are fitted: \n\n$$ Y = \\alpha_{0} + \\beta_0 A + \\gamma_0 M, $$\n$$ Y = \\alpha_{1} + \\beta_1 A, $$\n$$ M = \\alpha_{2} + \\beta_2 A, $$\n\nThe indirect effect of A on Y through M can be calculated as: $\\hat{\\beta}_2 \\times \\hat{\\beta}_0$, where $\\hat{\\beta}$ is estimated regression coefficient of $\\beta$. \n\n\n\n::: {.cell hash='mediation1_cache/html/setup_577ff7eb7ad377c5ba1cf926779ebd70'}\n\n```{.r .cell-code}\n# Load required packages\nrequire(simcausal)\n```\n:::\n\n\nBig data: **What if we had 1,000,000 (1 million) observations?**\n\nLet us explore the mediation analysis using Baron and Kenny (1986) approaches. We first simulate a big dataset and then show the results from the mediation analysis.\n\n### Continuous outcome, continuous mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n::: {.cell hash='mediation1_cache/html/m11_998b1086a705e83adea02435622b1951'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n    node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n    node(\"M\", distr = \"rnorm\", mean = 0.5 * A, sd = 1) + \n    node(\"Y\", distr = \"rnorm\", mean = 0.5 * M + 1.3 * A, sd = .1)\nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n#### Generate DAG\n\n\n::: {.cell hash='mediation1_cache/html/m12_c874cccadabbb230d016dfe0b5c37858'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-html/m12-1.png){width=672}\n:::\n:::\n\n\n#### Generate Data\n\n\n::: {.cell hash='mediation1_cache/html/m13_c8d8fc4fe95c71709c4975daf4bd9f52'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"M\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"-0.56047565\",\"3\":\"-1.2883086\",\"4\":\"-1.3953599\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"-0.23017749\",\"3\":\"1.2398506\",\"4\":\"0.3695715\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"1.55870831\",\"3\":\"0.3103793\",\"4\":\"2.1781918\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"0.07050839\",\"3\":\"1.5034478\",\"4\":\"0.8197663\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"0.12928774\",\"3\":\"0.5072003\",\"4\":\"0.3199635\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"1.71506499\",\"3\":\"1.0037356\",\"4\":\"2.6603537\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Estimate effect (beta-coef)\n\n\n::: {.cell hash='mediation1_cache/html/m14_9845bad79a36aa79959b1171a6b8ad65'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.00        1.55\nfit.am <- glm(Y ~ A + M, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/html/m15_0cc1205610426396ac73d0562a0b3554'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.55\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n::: {.cell hash='mediation1_cache/html/m16_65f3f14103627a81afd7572a2d395774'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.55\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.25\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n::: {.cell hash='mediation1_cache/html/m17_6dc8d6e6471c54d32f423de41ef066b8'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\n### Binary outcome, continuous mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n::: {.cell hash='mediation1_cache/html/m18_669aef9357b04f3c683050fc589a49b3'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n  node(\"M\", distr = \"rnorm\", mean = 0.5 * A, sd = 1) + \n  node(\"Y\", distr = \"rbern\", prob = plogis(0.5 * M + 1.3 * A)) \nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n#### Generate DAG\n\n\n::: {.cell hash='mediation1_cache/html/m19_2afbef8ed8479573863c0aa87fa13257'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-html/m19-1.png){width=672}\n:::\n:::\n\n\n#### Generate Data\n\n\n::: {.cell hash='mediation1_cache/html/m20_6c6167a0c4cf025417ac68605e66c545'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"M\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"-0.56047565\",\"3\":\"-1.2883086\",\"4\":\"0\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"-0.23017749\",\"3\":\"1.2398506\",\"4\":\"0\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"1.55870831\",\"3\":\"0.3103793\",\"4\":\"1\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"0.07050839\",\"3\":\"1.5034478\",\"4\":\"1\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"0.12928774\",\"3\":\"0.5072003\",\"4\":\"1\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"1.71506499\",\"3\":\"1.0037356\",\"4\":\"1\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Estimate effect (beta-coef)\n\n\n::: {.cell hash='mediation1_cache/html/m21_09f00bcbbb4dbdc5df6bf65b91719913'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.00        1.48\nfit.am <- glm(Y ~ A + M, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/html/m22_f95a4926c6cfd6015600957ab917d2b1'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.48\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n::: {.cell hash='mediation1_cache/html/m23_cdbf37867ed3620d6323f8a16f4b6b9b'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.48\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.18\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n::: {.cell hash='mediation1_cache/html/m24_8f55e8ebd10fbf513901645d4bb0e964'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\n### Binary outcome, binary mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n::: {.cell hash='mediation1_cache/html/m25_266653f98cce068a10811ac536b0cb75'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n  node(\"M\", distr = \"rbern\", prob = plogis(0.5 * A)) + \n  node(\"Y\", distr = \"rbern\", prob = plogis(0.5 * M + 1.3 * A)) \nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n#### Generate DAG\n\n\n::: {.cell hash='mediation1_cache/html/m26_00b90642aa8ca21438b8ed48cdf90396'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-html/m26-1.png){width=672}\n:::\n:::\n\n\n#### Generate Data\n\n\n::: {.cell hash='mediation1_cache/html/m27_5816bc7a57ad1a3b9a65ee6880233b2d'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"M\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"-0.56047565\",\"3\":\"0\",\"4\":\"1\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"-0.23017749\",\"3\":\"0\",\"4\":\"1\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"1.55870831\",\"3\":\"0\",\"4\":\"1\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"0.07050839\",\"3\":\"0\",\"4\":\"0\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"0.12928774\",\"3\":\"1\",\"4\":\"0\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"1.71506499\",\"3\":\"0\",\"4\":\"1\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Estimate effect (beta-coef)\n\n\n::: {.cell hash='mediation1_cache/html/m28_fc7761d7719c04b4319ab684eec38f04'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.25        1.34\nfit.am <- glm(Y ~ A + M, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/html/m29_69d8c8ddfe5d35176c3c32c1d2e82ea3'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.34\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n::: {.cell hash='mediation1_cache/html/m30_ff66c207afc230e66093f57bd744f779'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.34\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.04\n```\n:::\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n::: {.cell hash='mediation1_cache/html/m31_67cdfb6e8bb0fe5f2f4cd4b4052a064e'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\nAs we can see, the estimated indirect effects are different from the two approaches. That means Baron and Kenny's (1986) approach doesn't work for a non-collapsible effect measure such as the odds ratio.  \n\n\n### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/gdtBdvyVZYk\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}