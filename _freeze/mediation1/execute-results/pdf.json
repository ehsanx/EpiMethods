{
  "hash": "59d232f8660a21a0759a019501e3e6ca",
  "result": {
    "markdown": "## Baron and Kenny {.unnumbered}\n\n\n\n::: {.cell hash='mediation1_cache/pdf/setup_004fda7ea3cf991583c04a2f66e77cb4'}\n\n```{.r .cell-code}\n# Load required packages\nrequire(simcausal)\n```\n:::\n\n\n\nBig data: **What if we had 1,000,000 (1 million) observations?**\n\n### Continuous outcome, continuous mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m11_cda2d25eeb5ea4fbc0fdc47915966676'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n    node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n    node(\"M\", distr = \"rnorm\", mean = 0.5 * A, sd = 1) + \n    node(\"Y\", distr = \"rnorm\", mean = 0.5 * M + 1.3 * A, sd = .1)\nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n\n#### Generate DAG\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m12_40af3f8fc9640bfd46e82dd96eb2f693'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-pdf/m12-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Generate Data\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m13_7826c8d37e408f9cb271c7cc8cb3d42f'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n#>   ID           A          M          Y\n#> 1  1 -0.56047565 -1.2883086 -1.3953599\n#> 2  2 -0.23017749  1.2398506  0.3695715\n#> 3  3  1.55870831  0.3103793  2.1781918\n#> 4  4  0.07050839  1.5034478  0.8197663\n#> 5  5  0.12928774  0.5072003  0.3199635\n#> 6  6  1.71506499  1.0037356  2.6603537\n```\n:::\n\n\n\n#### Estimate effect (beta-coef)\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m14_13f36f14747d0e115046ebafae931c85'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.00        1.55\nfit.am <- glm(Y ~ A + M, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/pdf/m15_2e76f4b83602b10f0fa331e228ee39d6'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.55\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m16_499d5da7452fe5993fa03161c6df5e84'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.55\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.25\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m17_8370477e76ae002a5fb6ecdb9a33e08c'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\n\n### Binary outcome, continuous mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m18_c98e2d5044dee32198c52ea3f45f4c3c'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n  node(\"M\", distr = \"rnorm\", mean = 0.5 * A, sd = 1) + \n  node(\"Y\", distr = \"rbern\", prob = plogis(0.5 * M + 1.3 * A)) \nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n\n#### Generate DAG\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m19_0150bcd61ef774e81f8cfae55892c294'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-pdf/m19-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Generate Data\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m20_5668885b75a7728ee54106c4da743c10'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n#>   ID           A          M Y\n#> 1  1 -0.56047565 -1.2883086 0\n#> 2  2 -0.23017749  1.2398506 0\n#> 3  3  1.55870831  0.3103793 1\n#> 4  4  0.07050839  1.5034478 1\n#> 5  5  0.12928774  0.5072003 1\n#> 6  6  1.71506499  1.0037356 1\n```\n:::\n\n\n\n#### Estimate effect (beta-coef)\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m21_97419ef87b83d302b244c9f4d459ba8e'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.00        1.48\nfit.am <- glm(Y ~ A + M, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/pdf/m22_c617268add74bc454cae747a435f973a'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.48\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m23_a1c6c5fb9199e6cdac89ca833a92231e'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.48\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.18\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m24_3c9796da4f045b85870f2ae4cbd0ebfc'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\n\n### Binary outcome, binary mediator\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m25_8f5ec22fb6b3a5ac952e2fe59e676604'}\n\n```{.r .cell-code}\nrequire(simcausal)\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rnorm\", mean = 0, sd = 1) + \n  node(\"M\", distr = \"rbern\", prob = plogis(0.5 * A)) + \n  node(\"Y\", distr = \"rbern\", prob = plogis(0.5 * M + 1.3 * A)) \nDset <- set.DAG(D)\n#> ...automatically assigning order attribute to some nodes...\n#> node A, order:1\n#> node M, order:2\n#> node Y, order:3\n```\n:::\n\n\n\n#### Generate DAG\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m26_4dd0acc65882bad4cc265cc3bfcf131a'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n#> using the following vertex attributes:\n#> 120.8NAdarkbluenone0\n#> using the following edge attributes:\n#> 0.50.40.7black1\n```\n\n::: {.cell-output-display}\n![](mediation1_files/figure-pdf/m26-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Generate Data\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m27_b245d6ead2ba6ccc1048b9ec984165c2'}\n\n```{.r .cell-code}\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\n#> simulating observed dataset from the DAG object\nhead(Obs.Data)\n#>   ID           A M Y\n#> 1  1 -0.56047565 0 1\n#> 2  2 -0.23017749 0 1\n#> 3  3  1.55870831 0 1\n#> 4  4  0.07050839 0 0\n#> 5  5  0.12928774 1 0\n#> 6  6  1.71506499 0 1\n```\n:::\n\n\n\n#### Estimate effect (beta-coef)\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m28_7d30f3f79b858537e164d04620102897'}\n\n```{.r .cell-code}\nfit <- glm(Y ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A \n#>        0.25        1.34\nfit.am <- glm(Y ~ A + M, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.am),2)\n#> (Intercept)           A           M \n#>         0.0         1.3         0.5\nfit.m <- glm(M ~ A, family=binomial(link = \"logit\"), data=Obs.Data)\nround(coef(fit.m),2)\n#> (Intercept)           A \n#>         0.0         0.5\n```\n:::\n\n::: {.cell hash='mediation1_cache/pdf/m29_6dce6229caa940b0d74d7de21a021809'}\n\n```{.r .cell-code}\n# from 1st model\na.coef <- round(coef(fit),2)[2]\na.coef\n#>    A \n#> 1.34\n# from 2nd (adjusted) model\nam.coef <- round(coef(fit.am),2)[2]\nam.coef\n#>   A \n#> 1.3\nm.coef <- round(coef(fit.am),2)[3]\nm.coef\n#>   M \n#> 0.5\n# from 3rd (mediator) model\nma.coef <- round(coef(fit.m),2)[2]\nma.coef\n#>   A \n#> 0.5\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 1\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m30_517c2db82c08649374497bc7fb3790e1'}\n\n```{.r .cell-code}\n# Direct effect\nam.coef\n#>   A \n#> 1.3\n# Total effect\na.coef\n#>    A \n#> 1.34\n# Indirect effect\na.coef - am.coef\n#>    A \n#> 0.04\n```\n:::\n\n\n\n#### Baron and Kenny (1986) approach 2\n\n\n\n::: {.cell hash='mediation1_cache/pdf/m31_69cc0501defff4619522ef2d05caa64b'}\n\n```{.r .cell-code}\n# Indirect effect\nm.coef * ma.coef\n#>    M \n#> 0.25\n```\n:::\n\n\n\n\n### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/gdtBdvyVZYk\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}