{
  "hash": "047a4356e2ceab958b80043a33176c45",
  "result": {
    "markdown": "## Exercise (W) {.unnumbered}\n\n::: callout-tip\nYou cannot input any codes on this website but need to download the exercise files on your computer. You can download all of the related files in a zip file **wranglingEx.zip** from [Github folder](https://github.com/ehsanx/EpiMethods/tree/main/LabExercises/) folder, or just by clicking this link [directly](https://github.com/ehsanx/EpiMethods/raw/main/LabExercises/wranglingEx.zip).\n\n-   Navigate to the GitHub folder (above link) where the ZIP file is located.\n-   Click on the file name (above zip file) to open its preview window.\n-   Click on the Download button to download the file. If you can't see the Download button, click on \"Download Raw File\" link that should appear on the page.\n:::\n\n::: callout-important\nOnce you download and unzip the files, you should see the following files:\n:::\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Images/wrangling/openEx.png){fig-align='center' width=80%}\n:::\n:::\n\n-   You will work with the file `wranglingE.RMD`\n\n::: callout-important\nBefore you start:\n\n-   You need R and RStudio to complete this exercise. See the [R basics chapter](wrangling1a.html) on how to download and install R and RStudio on your computer.\n\n-   Please knit your file at least once and check whether a pdf file is created. See the [R Markdown chapter](wrangling6.html) if you need help regarding working with an RMD file.  \n:::\n\n## Problem Statement\n\nUse the functions we learned in [Lab 1](wrangling.html) to complete Lab 1 Exercise. We will use Right Heart Catheterization Dataset saved in the folder named 'Data/wrangling/'. The variable list and description can be accessed from [Vanderbilt Biostatistics website](https://biostat.app.vumc.org/wiki/pub/Main/DataSets/rhc.html).\n\nA paper you can access the original table from [this paper](https://jamanetwork-com.ezproxy.library.ubc.ca/journals/jama/fullarticle/407990) ([doi: 10.1001/jama.1996.03540110043030](https://pubmed.ncbi.nlm.nih.gov/8782638/)). We have modified the table and corrected some issues. Please knit your file once you finished and submit the knitted file **ONLY**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(dplyr)\nlibrary(tableone)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data import: name it rhc\n#rhc <- ...(\"Data/wrangling/rhc.csv\", ...)\n```\n:::\n\n\n## Problem 1: Basic Manipulation \\[60%\\]\n\n(I) Continuous to Categories: Change the Age variable into categories below 50, 50 to below 60, 60 to below 70, 70 to below 80, 80 and above \\[Hint: the `cut` function could be helpful\\]\n\n\n::: {.cell}\n\n:::\n\n\n(II) Re-order: Re-order the levels of race to white, black and other\n\n\n::: {.cell}\n\n:::\n\n\n(III) Set reference: Change the reference category for gender to Male\n\n\n::: {.cell}\n\n:::\n\n\n(IV) Count levels: Check how many levels does the variable \"cat1\" (Primary disease category) have? Regroup the levels for disease categories to \"ARF\",\"CHF\",\"MOSF\",\"Other\". \\[Hint: the `nlevels` and `list` functions could be helpful\\]\n\n\n::: {.cell}\n\n:::\n\n\n(V) Rename levels: Rename the levels of \"ca\" (Cancer) to \"Metastatic\",\"None\" and \"Localized (Yes)\", then re-order the levels to \"None\",\"Localized (Yes)\" and \"Metastatic\"\n\n\n::: {.cell}\n\n:::\n\n\n(VI) comorbidities:\n\n-   Create a new variable called \"numcom\" to count number of comorbidities illness for each person (12 categories) \\[Hint: the `rowSums` command could be helpful\\],\n-   Report maximum and minimum values of numcom:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# See head of comorbidities\n# head(rhc[,c(\"cardiohx\", \"chfhx\", \"dementhx\", \"psychhx\", \"chrpulhx\", \"renalhx\", \n#             \"liverhx\", \"gibledhx\", \"malighx\", \"immunhx\", \"transhx\", \"amihx\")])\n\n# your codes here\n\n```\n:::\n\n\n(VII) Anlaytic data: Create a dataset that has only the following variables\n\n-   age, sex, race, cat1, ca, dnr1, aps1, surv2md1, numcom, adld3p, das2d3pc, temp1, hrt1, meanbp1, resp1, wblc1, pafi1, paco21, ph1, crea1, alb1, scoma1, swang1\n\n-   name the dataset as rhc2\n\n\n::: {.cell}\n\n:::\n\n\n## Problem 2: Table 1 \\[10%\\]\n\nRe-produce the sample table 1 from the rhc2 data (see the Table below). In your table, the variables should be ordered as the same as the sample. Please re-level or re-order the levels if needed. \\[Hint: the `tableone` package might be useful\\]\n\n|                      | No RHC          | RHC             |\n| -------------------- | --------------- | --------------- |\n| n                    | 3551            | 2184            |\n| age (%)              |                 |                 |\n|    [-Inf,50)         |    884 (24.9)   |    540 (24.7)   |\n|    [50,60)           |    546 (15.4)   |    371 (17.0)   |\n|    [60,70)           |    812 (22.9)   |    577 (26.4)   |\n|    [70,80)           |    809 (22.8)   |    529 (24.2)   |\n|    [80, Inf)         |    500 (14.1)   |    167 ( 7.6)   |\n| sex = Female (%)     |   1637 (46.1)   |    906 (41.5)   |\n| race (%)             |                 |                 |\n|    white             |   2753 (77.5)   |   1707 (78.2)   |\n|    black             |    585 (16.5)   |    335 (15.3)   |\n|    other             |    213 ( 6.0)   |    142 ( 6.5)   |\n| cat1 (%)             |                 |                 |\n|    ARF               |   1581 (44.5)   |    909 (41.6)   |\n|    CHF               |    247 ( 7.0)   |    209 ( 9.6)   |\n|    Other             |    955 (26.9)   |    208 ( 9.5)   |\n|    MOSF              |    768 (21.6)   |    858 (39.3)   |\n| ca (%)               |                 |                 |\n|    None              |   2652 (74.7)   |   1727 (79.1)   |\n|    Localized (Yes)   |    638 (18.0)   |    334 (15.3)   |\n|    Metastatic        |    261 ( 7.4)   |    123 ( 5.6)   |\n| dnr1 = Yes (%)       |    499 (14.1)   |    155 ( 7.1)   |\n| aps1 (mean (SD))     |  50.93 (18.81)  |  60.74 (20.27)  |\n| surv2md1 (mean (SD)) |   0.61 (0.19)   |   0.57 (0.20)   |\n| numcom (mean (SD))   |   1.52 (1.17)   |   1.48 (1.13)   |\n| adld3p (mean (SD))   |   1.24 (1.86)   |   1.02 (1.69)   |\n| das2d3pc (mean (SD)) |  20.37 (5.48)   |  20.70 (5.03)   |\n| temp1 (mean (SD))    |  37.63 (1.74)   |  37.59 (1.83)   |\n| hrt1 (mean (SD))     | 112.87 (40.94)  | 118.93 (41.47)  |\n| meanbp1 (mean (SD))  |  84.87 (38.87)  |  68.20 (34.24)  |\n| resp1 (mean (SD))    |  28.98 (13.95)  |  26.65 (14.17)  |\n| wblc1 (mean (SD))    |  15.26 (11.41)  |  16.27 (12.55)  |\n| pafi1 (mean (SD))    | 240.63 (116.66) | 192.43 (105.54) |\n| paco21 (mean (SD))   |  39.95 (14.24)  |  36.79 (10.97)  |\n| ph1 (mean (SD))      |   7.39 (0.11)   |   7.38 (0.11)   |\n| crea1 (mean (SD))    |   1.92 (2.03)   |   2.47 (2.05)   |\n| alb1 (mean (SD))     |   3.16 (0.67)   |   2.98 (0.93)   |\n| scoma1 (mean (SD))   |  22.25 (31.37)  |  18.97 (28.26)  |\n\n\n::: {.cell}\n\n:::\n\n\n## Problem 3: Table 1 for subset \\[10%\\] \n\nProduce a similar table as Problem 2 but with only male sex and ARF primary disease category (cat1). Add the overall column in the same table. \\[Hint: `filter` command could be useful\\]\n\n\n::: {.cell}\n\n:::\n\n\n## Problem 4: Considering eligibility criteria \\[20%\\]\n\nProduce a similar table as Problem 2 but only for the subjects who meet all of the following eligibility criteria: (i) age is equal to or above 50, (ii) age is below 80 (iii) Glasgow Coma Score is below 61 and (iv) Primary disease categories are either ARF or MOSF. \\[Hint: `droplevels.data.frame` can be a useful function\\]\n\n\n::: {.cell}\n\n:::\n\n\n## Optional \\[0%\\]\n\n### Optional 1: Missing values\n\n(I) Any variables included in rhc2 data had missing values? Name that variable. \\[Hint: `apply` function could be helpful\\]\n\n\n::: {.cell}\n\n:::\n\n\n(II) Count how many NAs does that variable have?\n\n\n::: {.cell}\n\n:::\n\n\n(III) Produce a table 1 for a complete case data (no missing observations) stratified by `swang1`.\n\n\n::: {.cell}\n\n:::\n\n\n### Optional 2: Calculating variance of a sample\n\nWrite a `function` for Bessel's correction to calculate an unbiased estimate of the population variance from a finite sample (a vector of 100 observations, consisting of numbers from 1 to 100).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVector <- 1:100\n\n#variance.est <- function(?){?}\n\n#variance.est(Vector)\n```\n:::\n\n\nHint: Take a closer look at the functions, loops and algorithms shown in lab materials. Use a `for loop`, utilizing the following pseudocode of the [algorithm](https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance):\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Images/wrangling/algorithm.png){width=90%}\n:::\n:::\n\n\nVerify that estimated variance with the following variance function output in R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(Vector)\n#> [1] 841.6667\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}