{
  "hash": "983cdb290c63bbb0d9895867dd721d7e",
  "result": {
    "engine": "knitr",
    "markdown": "## Cross-validation {.unnumbered}\n\n::: callout-important\nThis tutorial is very similar to one of the [previous tutorials](predictivefactors6.html), but uses a different data (we used [RHC data](researchquestion1.html) here). We are revisiting concepts related to [prediction](predictivefactors.html) before introducing ideas related to machine learning. \n:::\n\nNow, we will describe the ideas of cross-validation.\n\n\n\n\n\n### Load previously saved data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nObsData <- readRDS(file = \"Data/machinelearning/rhcAnalytic.RDS\")\nout.formula1 <- readRDS(file = \"Data/machinelearning/form1.RDS\")\n```\n:::\n\n\n### k-fold cross-vaildation\n\nSee [@Cross-validation]\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Images/machinelearning/kf.png){width=90%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk = 5\ndim(ObsData)\n#> [1] 5735   52\nset.seed(567)\n# create folds (based on outcome)\nfolds <- createFolds(ObsData$Length.of.Stay, k = k, \n                     list = TRUE, returnTrain = TRUE)\nmode(folds)\n#> [1] \"list\"\ndim(ObsData)*4/5 # approximate training data size\n#> [1] 4588.0   41.6\ndim(ObsData)/5  # approximate test data size\n#> [1] 1147.0   10.4\nlength(folds[[1]])\n#> [1] 4588\nlength(folds[[5]])\n#> [1] 4587\nstr(folds[[1]])\n#>  int [1:4588] 1 2 4 6 7 8 9 10 11 13 ...\nstr(folds[[5]])\n#>  int [1:4587] 1 3 5 6 7 8 10 11 12 13 ...\n```\n:::\n\n\n#### Calculation for Fold 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfold.index <- 1\nfold1.train.ids <- folds[[fold.index]]\nhead(fold1.train.ids)\n#> [1] 1 2 4 6 7 8\nfold1.train <- ObsData[fold1.train.ids,]\nfold1.test <- ObsData[-fold1.train.ids,]\nout.formula1\n#> Length.of.Stay ~ Disease.category + Cancer + Cardiovascular + \n#>     Congestive.HF + Dementia + Psychiatric + Pulmonary + Renal + \n#>     Hepatic + GI.Bleed + Tumor + Immunosupperssion + Transfer.hx + \n#>     MI + age + sex + edu + DASIndex + APACHE.score + Glasgow.Coma.Score + \n#>     blood.pressure + WBC + Heart.rate + Respiratory.rate + Temperature + \n#>     PaO2vs.FIO2 + Albumin + Hematocrit + Bilirubin + Creatinine + \n#>     Sodium + Potassium + PaCo2 + PH + Weight + DNR.status + Medical.insurance + \n#>     Respiratory.Diag + Cardiovascular.Diag + Neurological.Diag + \n#>     Gastrointestinal.Diag + Renal.Diag + Metabolic.Diag + Hematologic.Diag + \n#>     Sepsis.Diag + Trauma.Diag + Orthopedic.Diag + race + income + \n#>     RHC.use\nmodel.fit <- lm(out.formula1, data = fold1.train)\npredictions <- predict(model.fit, \n                       newdata = fold1.test)\nperform(new.data=fold1.test,\n        y.name = \"Length.of.Stay\",\n        model.fit=model.fit)\n#>         n  p    R2  adjR2  RMSE\n#> [1,] 1147 64 0.051 -0.004 24.86\n```\n:::\n\n\n#### Calculation for Fold 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfold.index <- 2\nfold1.train.ids <- folds[[fold.index]]\nhead(fold1.train.ids)\n#> [1] 2 3 4 5 6 7\nfold1.train <- ObsData[fold1.train.ids,]\nfold1.test <- ObsData[-fold1.train.ids,]\nmodel.fit <- lm(out.formula1, data = fold1.train)\npredictions <- predict(model.fit, \n                       newdata = fold1.test)\nperform(new.data=fold1.test,\n        y.name = \"Length.of.Stay\",\n        model.fit=model.fit)\n#>         n  p    R2 adjR2   RMSE\n#> [1,] 1147 64 0.066 0.011 24.714\n```\n:::\n\n\n### Using caret package to automate\n\nSee [@tuning]\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using Caret package\nset.seed(504)\n# make a 5-fold CV\nctrl<-trainControl(method = \"cv\",number = 5)\n# fit the model with formula = out.formula1\n# use training method lm\nfit.cv<-train(out.formula1, trControl = ctrl,\n               data = ObsData, method = \"lm\")\nfit.cv\n#> Linear Regression \n#> \n#> 5735 samples\n#>   50 predictor\n#> \n#> No pre-processing\n#> Resampling: Cross-Validated (5 fold) \n#> Summary of sample sizes: 4588, 4588, 4587, 4589, 4588 \n#> Resampling results:\n#> \n#>   RMSE      Rsquared    MAE     \n#>   25.05478  0.05980578  15.19515\n#> \n#> Tuning parameter 'intercept' was held constant at a value of TRUE\n# extract results from each test data \nsummary.res <- fit.cv$resample\nsummary.res\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"RMSE\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Rsquared\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"MAE\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Resample\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"22.45199\",\"2\":\"0.06463766\",\"3\":\"14.52080\",\"4\":\"Fold1\"},{\"1\":\"27.05869\",\"2\":\"0.06799916\",\"3\":\"15.29290\",\"4\":\"Fold2\"},{\"1\":\"27.65794\",\"2\":\"0.06034484\",\"3\":\"15.51895\",\"4\":\"Fold3\"},{\"1\":\"24.55357\",\"2\":\"0.03892546\",\"3\":\"15.47073\",\"4\":\"Fold4\"},{\"1\":\"23.55174\",\"2\":\"0.06712180\",\"3\":\"15.17238\",\"4\":\"Fold5\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmean(fit.cv$resample$Rsquared)\n#> [1] 0.05980578\nsd(fit.cv$resample$Rsquared)\n#> [1] 0.01204451\nmean(fit.cv$resample$RMSE)\n#> [1] 25.05478\nsd(fit.cv$resample$RMSE)\n#> [1] 2.240366\n```\n:::\n\n\n### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/BSDrIrSxqFU\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::\n\n### References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}