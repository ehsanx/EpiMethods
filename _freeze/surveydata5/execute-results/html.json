{
  "hash": "cdc16745c0449d2b42b1a420f90a01c6",
  "result": {
    "engine": "knitr",
    "markdown": "## CCHS: Performance {.unnumbered}\n\nThe tutorial outlines the process for evaluating the performance of logistic regression models fitted to complex survey data using R. It focuses on two major aspects: creating Receiver Operating Characteristic (ROC) curves and conducting Archer and Lemeshow Goodness of Fit tests. Here AUC is a measure to evaluate the predictive accuracy of the model, and Archer and Lemeshow test is a statistical test to evaluate how well your model fits the observed data.\n\n::: callout-important\nSee an updated version of this tutorial [here](surveydata9c.html) that uses `svyTable1` package on an NHANES data analysis.\n:::\n\nWe start by importing the required R packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(survey)\nlibrary(ROCR)\nlibrary(WeightedROC)\n```\n:::\n\n\n### Load data\n\nIt loads two datasets from the specified paths.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"Data/surveydata/cchs123w.RData\")\nload(\"Data/surveydata/cchs123w2.RData\")\nls()\n#> [1] \"aic.int.model\" \"analytic.miss\" \"analytic2\"     \"basic.model\"  \n#> [5] \"w.design\"\ndim(analytic.miss)\n#> [1] 397173     23\ndim(analytic2)\n#> [1] 185613     22\n```\n:::\n\n\nThree different logistic regression models are fitted to the data:\n\n-   Simple model: Model with only OA as a predictor\n-   Basic model: Model with OA, age and sex\n-   Complex model: Model with many predictors and some interaction terms\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Formula for Simple model\nsimple.model <- as.formula(I(CVD==\"event\") ~ OA)\nsimple.model\n#> I(CVD == \"event\") ~ OA\n\n# Formula for Basic model\nbasic.model\n#> I(CVD == \"event\") ~ OA + age + sex\n#> attr(,\"variables\")\n#> list(I(CVD == \"event\"), OA, age, sex)\n#> attr(,\"factors\")\n#>                   OA age sex\n#> I(CVD == \"event\")  0   0   0\n#> OA                 1   0   0\n#> age                0   1   0\n#> sex                0   0   1\n#> attr(,\"term.labels\")\n#> [1] \"OA\"  \"age\" \"sex\"\n#> attr(,\"order\")\n#> [1] 1 1 1\n#> attr(,\"intercept\")\n#> [1] 1\n#> attr(,\"response\")\n#> [1] 1\n#> attr(,\".Environment\")\n#> <environment: R_GlobalEnv>\n#> attr(,\"predvars\")\n#> list(I(CVD == \"event\"), OA, age, sex)\n#> attr(,\"dataClasses\")\n#> I(CVD == \"event\")                OA               age               sex \n#>         \"logical\"          \"factor\"          \"factor\"          \"factor\" \n#>         (weights) \n#>         \"numeric\"\n\n# Formula for the Complex model with interactions\naic.int.model\n#> I(CVD == \"event\") ~ OA + age + sex + married + race + edu + income + \n#>     bmi + phyact + fruit + bp + diab + doctor + stress + smoke + \n#>     drink + age:sex + bmi:diab\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\n\n# Simple model\nfit0 <- svyglm(simple.model,\n              design = w.design,\n              family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n\n# Basic model\nfit5 <- svyglm(basic.model,\n              design = w.design,\n              family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n\n# Complex model with interactions\nfit9 <- svyglm(aic.int.model,\n              design = w.design,\n              family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n```\n:::\n\n\n### Model performance\n\n#### ROC curve\n\nThis section defines a function, `svyROCw`, to plot the ROC curves and calculate the area under the curve (AUC). The function can handle both weighted and unweighted survey data.\n\n-   The appropriateness of the fitted logistic regression model needs to be examined before it is accepted for use.\n-   Plotting the pairs of - sensitivities vs - 1-specificities on a scatter plot provides a Receiver Operating Characteristic (ROC) curve.\n-   The area under the ROC curve = AUC / C-statistic.\n-   ROC/AUC should consider weights for complex surveys.\n\nGrading Guidelines for AUC values:\n\n-   0.90-1.0 excellent discrimination (unusual)\n-   0.80-0.90 good discrimination\n-   0.70-0.80 fair discrimination\n-   0.60-0.70 poor discrimination\n-   0.50-0.60 failed discrimination\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(ROCR)\n# WeightedROC may not be on cran for all R versions\n# devtools::install_github(\"tdhock/WeightedROC\")\n\nlibrary(WeightedROC)\nsvyROCw <- function(fit=fit,outcome=analytic2$CVD==\"event\", weight = NULL){\n  # ROC curve for\n  # Survey Data with Logistic Regression\n  if (is.null(weight)){ # require(ROCR)\n    prob <- predict(fit, type = \"response\")\n  pred <- prediction(as.vector(prob), outcome)\n  perf <- performance(pred, \"tpr\", \"fpr\")\n  auc <- performance(pred, measure = \"auc\")\n  auc <- auc@y.values[[1]]\n  roc.data <- data.frame(fpr = unlist(perf@x.values), tpr = unlist(perf@y.values), \n      model = \"Logistic\")\n  with(data = roc.data,plot(fpr, tpr, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n     xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n     main = paste(\"AUC = \", round(auc,3))))\n  mtext(\"Unweighted ROC\")\n  abline(0,1, lty=2)\n  } else { # library(WeightedROC)\n    outcome <- as.numeric(outcome)\n  pred <- predict(fit, type = \"response\")\n  tp.fp <- WeightedROC(pred, outcome, weight)\n  auc <- WeightedAUC(tp.fp)\n  with(data = tp.fp,plot(FPR, TPR, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n     xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n     main = paste(\"AUC = \", round(auc,3))))\n  abline(0,1, lty=2)\n  mtext(\"Weighted ROC\")\n  }\n}\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(analytic2$weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    1.17   71.56  137.95  214.61  261.91 7154.95\nanalytic2$corrected.weight <- weights(w.design)\nsummary(analytic2$corrected.weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    0.39   23.85   45.98   71.54   87.30 2384.98\nsvyROCw(fit=fit0,outcome=analytic2$CVD==\"event\", weight = analytic2$corrected.weight)\n```\n\n::: {.cell-output-display}\n![](surveydata5_files/figure-html/auc2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsvyROCw(fit=fit5,outcome=analytic2$CVD==\"event\", weight = analytic2$corrected.weight)\n```\n\n::: {.cell-output-display}\n![](surveydata5_files/figure-html/auc2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsvyROCw(fit=fit9,outcome=analytic2$CVD==\"event\", weight = analytic2$corrected.weight)\n```\n\n::: {.cell-output-display}\n![](surveydata5_files/figure-html/auc2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# This function does not take in to account of strata/cluster\n```\n:::\n\n\n#### Archer and Lemeshow test\n\nThis test helps to evaluate how well the model fits the data. A Goodness of Fit (GOF) function `AL.gof` is defined. If the p-value from this test is greater than a certain threshold (e.g., 0.05), the model fit is considered acceptable.\n\n-   Hosmer Lemeshow-type tests are most useful as a very crude way to screen for fit problems, and should not be taken as a definitive diagnostic of a 'good' fit.\n    -   problem in small sample size\n    -   Dependent on G (group)\n-   Archer and Lemeshow (2006) extended the standard Hosmer and Lemeshow GOF test for complex surveys.\n-   After fitting the survey weighted logistic regression, the F-adjusted mean residual goodness-of-fit test could suggest\n    -   no evidence of lack of fit (if P-value \\> a reasonable cut-point, e.g., 0.05)\n    -   evidence of lack of fit (if P-value \\< a reasonable cut-point, e.g., 0.05)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAL.gof <- function(fit=fit, data = analytic2, \n                   weight = \"corrected.weight\"){\n  # Archer-Lemeshow Goodness of Fit Test for\n  # Survey Data with Logistic Regression\n  r <- residuals(fit, type=\"response\") \n  f<-fitted(fit) \n  breaks.g <- c(-Inf, quantile(f,  (1:9)/10), Inf)\n  breaks.g <- breaks.g + seq_along(breaks.g) * .Machine$double.eps\n  g<- cut(f, breaks.g)\n  data2g <- cbind(data,r,g)\n  newdesign <- svydesign(id=~1, \n                         weights=as.formula(paste0(\"~\",weight)), \n                        data=data2g)\n  decilemodel<- svyglm(r~g, design=newdesign) \n  res <- regTermTest(decilemodel, ~g)\n  return(res) \n}\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAL.gof(fit0, analytic2, weight =\"corrected.weight\")\n#> Wald test for g\n#>  in svyglm(formula = r ~ g, design = newdesign)\n#> F =  2.20807e-22  on  1  and  185611  df: p= 1\nAL.gof(fit5, analytic2, weight =\"corrected.weight\")\n#> Wald test for g\n#>  in svyglm(formula = r ~ g, design = newdesign)\n#> F =  2.795204  on  8  and  185604  df: p= 0.0042898\nAL.gof(fit9, analytic2, weight = \"corrected.weight\")\n#> Wald test for g\n#>  in svyglm(formula = r ~ g, design = newdesign)\n#> F =  2.650332  on  9  and  185603  df: p= 0.0045417\n```\n:::\n\n\n#### Additional function\n\nIf the survey data contains strata and cluster, then the following function will be useful:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAL.gof2 <- function(fit=fit7, data = analytic, \n                   weight = \"corrected.weight\", psu = \"psu\", strata= \"strata\"){\n  # Archer-Lemeshow Goodness of Fit Test for\n  # Survey Data with Logistic Regression\n  r <- residuals(fit, type=\"response\") \n  f<-fitted(fit) \n  breaks.g <- c(-Inf, quantile(f,  (1:9)/10), Inf)\n  breaks.g <- breaks.g + seq_along(breaks.g) * .Machine$double.eps\n  g<- cut(f, breaks.g)\n  data2g <- cbind(data,r,g)\n  newdesign <- svydesign(id=as.formula(paste0(\"~\",psu)),\n                         strata=as.formula(paste0(\"~\",strata)),\n                         weights=as.formula(paste0(\"~\",weight)), \n                        data=data2g, nest = TRUE)\n  decilemodel<- svyglm(r~g, design=newdesign) \n  res <- regTermTest(decilemodel, ~g)\n  return(res) \n}\n```\n:::\n\n\n### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/n9WSFJH8FcQ\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}