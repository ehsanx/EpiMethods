{
  "hash": "664727f54bbbd5ba47b69301994a31bf",
  "result": {
    "markdown": "## Effect modification {.unnumbered}\n\nIn this tutorial, we delve into the concept of effect modification.\n\n::: callout-important\nWe discussed about effect modification in an [earlier discussion](confounding0.html).\n:::\n\nWe start by loading the necessary packages that will aid in the analysis. We also define a function `tidy.pool_mi` to streamline the pooling process for multiple imputation results.\n\n\n::: {.cell hash='missingdata7_cache/html/setup_5fa1f99a2175370b8f78ac599b747bc9'}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(survey)\nrequire(interactions)\nrequire(mitools)\nrequire(mice)\nrequire(miceadds)\nlibrary(modelsummary)\n\ntidy.pool_mi <- function(x, ...) {\n  msg <- capture.output(out <- summary(x, ...))\n  out$term <- row.names(out)\n  colnames(out) <- c(\"estimate\", \"std.error\", \"statistic\", \"p.value\",\n                     \"conf.low\", \"conf.high\", \"miss\", \"term\")\n  return(out)\n}\n```\n:::\n\n\n### Data\n\nWe load a dataset named `smi`. This dataset is a list of multiple imputed datasets, which is evident from the structure and the way we access its elements.\n\n\n::: {.cell hash='missingdata7_cache/html/data_1e4d4522fcc72ffc29ea53e1aee87893'}\n\n```{.r .cell-code}\nrequire(mitools)\ndata(smi)\nlength(smi)\n#> [1] 2\nlength(smi[[1]])\n#> [1] 5\nhead(smi[[1]][[1]])\n#>       id wave mmetro parsmk         drkfre         alcdos alcdhi           smk\n#> 1 920006    1      1      0    Non drinker    Non drinker      0 non/ex-smoker\n#> 2 920006    2      1      0    Non drinker    Non drinker      0 non/ex-smoker\n#> 3 920006    3      1      0    Non drinker    Non drinker      0 non/ex-smoker\n#> 4 920006    4      1      0    Non drinker    Non drinker      0 non/ex-smoker\n#> 5 920006    5      1      0    Non drinker    Non drinker      0 non/ex-smoker\n#> 6 920006    6      1      0 not in last wk not in last wk      0 non/ex-smoker\n#>   cistot mdrkfre sex drinkreg\n#> 1      0       0   1    FALSE\n#> 2      0       0   1    FALSE\n#> 3      0       0   1    FALSE\n#> 4      1       0   1    FALSE\n#> 5      4       0   1    FALSE\n#> 6      3       0   1    FALSE\n```\n:::\n\n\n### Model with interaction and ORs\n\nWe're interested in understanding how the variable `wave` interacts with `sex` in predicting `drinkreg`. We fit two logistic regression models, one for each level of the `sex` variable (0 males, 1 females), to understand this interaction. `wave` is the exposure variable here.\n\n#### For effect modifier sex = 0 (males)\n\n\n::: {.cell hash='missingdata7_cache/html/em0_b54c7092ccb2ebbd5b6ad2fc3035db24'}\n\n```{.r .cell-code}\nmodels <- with(smi, glm(drinkreg~ wave + sex + wave*sex, family = binomial()))\nsummary(pool(models, rule = \"rubin1987\"), conf.int = TRUE, exponentiate = TRUE)[2,]\n#>   term estimate  std.error statistic       df      p.value   2.5 %   97.5 %\n#> 2 wave 1.271952 0.06587423  3.651693 234.4974 0.0003212903 1.11714 1.448217\n```\n:::\n\n\n#### For effect modifier sex = 1 (females) (just changing reference)\n\n\n::: {.cell hash='missingdata7_cache/html/em1_692a6b81daf7a5659fbf0d067f7911f2'}\n\n```{.r .cell-code}\nmodels2<-with(smi, glm(drinkreg~ wave + I(sex==0) + wave*I(sex==0),family=binomial()))\nsummary(pool(models2, rule = \"rubin1987\"),conf.int = TRUE, exponentiate = TRUE)[2,]\n#>   term estimate  std.error statistic       df      p.value    2.5 %   97.5 %\n#> 2 wave 1.225438 0.05876369   3.45959 240.3053 0.0006399352 1.091487 1.375828\n```\n:::\n\n\n-   Notice the ORs for `wave` in the above 2 analyses. These are basically our target.\n-   For proper survey data analysis, you will have to work with design and make sure you subset your subpopulation (those eligible) appropriately.\n\n### Simple slopes analyses\n\nWe perform a simple slopes analysis for each imputed dataset. This analysis helps in understanding the relationship between the predictor and the outcome at specific levels of the moderator.\n\n\n::: {.cell hash='missingdata7_cache/html/em2_c0306127998dfa8fe0b90d8d11731b3e'}\n\n```{.r .cell-code}\na1 <- sim_slopes(models[[1]], pred = wave, modx = sex)\na2 <- sim_slopes(models[[2]], pred = wave, modx = sex)\na3 <- sim_slopes(models[[3]], pred = wave, modx = sex)\na4 <- sim_slopes(models[[4]], pred = wave, modx = sex)\na5 <- sim_slopes(models[[5]], pred = wave, modx = sex)\n```\n:::\n\n\nAfter obtaining the results from each imputed dataset, we pool them to get a consolidated result. This is done separately for each level of the `sex` variable.\n\n### Pooled results for sex = 0\n\n\n::: {.cell hash='missingdata7_cache/html/em3_35552c19f0a1f9a3bb8680664ab22321'}\n\n```{.r .cell-code}\n# For sex = 0\nef.lev <- 1\nest <- c(a1$slopes$Est.[ef.lev],\n         a2$slopes$Est.[ef.lev],\n         a3$slopes$Est.[ef.lev],\n         a4$slopes$Est.[ef.lev],\n         a5$slopes$Est.[ef.lev])\nse <- c(a1$slopes$S.E.[ef.lev],\n        a2$slopes$S.E.[ef.lev],\n        a3$slopes$S.E.[ef.lev],\n        a4$slopes$S.E.[ef.lev],\n        a5$slopes$S.E.[ef.lev])\nvr <- se^2\nOR <- exp(est)\nOR.se <- OR * se\nOR.v <- OR.se^2\n\nmod_pooled <- miceadds::pool_mi(qhat=OR, u=OR.v)\ntidy.pool_mi(mod_pooled)\n#>   estimate  std.error statistic      p.value conf.low conf.high   miss term\n#> 1 1.272164 0.08386552  15.16909 6.987679e-39 1.107118   1.43721 12.2 %    1\nsummary(MIcombine(as.list(OR), as.list(OR.v)))\n#> Multiple imputation results:\n#>       MIcombine.default(as.list(OR), as.list(OR.v))\n#>    results         se   (lower  upper) missInfo\n#> 1 1.272164 0.08386552 1.107118 1.43721     12 %\n```\n:::\n\n\n### Pooled results for sex = 1\n\n\n::: {.cell hash='missingdata7_cache/html/em4_dbaad853bd2d293c09d8737bb139b95b'}\n\n```{.r .cell-code}\n# For sex = 1\nef.lev <- 2\nest <- c(a1$slopes$Est.[ef.lev],\n         a2$slopes$Est.[ef.lev],\n         a3$slopes$Est.[ef.lev],\n         a4$slopes$Est.[ef.lev],\n         a5$slopes$Est.[ef.lev])\nse <- c(a1$slopes$S.E.[ef.lev],\n        a2$slopes$S.E.[ef.lev],\n        a3$slopes$S.E.[ef.lev],\n        a4$slopes$S.E.[ef.lev],\n        a5$slopes$S.E.[ef.lev])\nvr <- se^2\nOR <- exp(est)\nOR.se <- OR * se\nOR.v <- OR.se^2\n\nmod_pooled <- miceadds::pool_mi(qhat=OR, u=OR.v)\ntidy.pool_mi(mod_pooled)\n#>   estimate  std.error statistic      p.value conf.low conf.high   miss term\n#> 1 1.225598 0.07204679  17.01113 2.282427e-46 1.083838  1.367357 11.9 %    1\nsummary(MIcombine(as.list(OR), as.list(OR.v)))\n#> Multiple imputation results:\n#>       MIcombine.default(as.list(OR), as.list(OR.v))\n#>    results         se   (lower   upper) missInfo\n#> 1 1.225598 0.07204679 1.083838 1.367357     12 %\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}