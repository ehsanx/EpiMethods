{
  "hash": "97737166022bd438c0cc9a10674e851b",
  "result": {
    "markdown": "## Exact Matching (CCHS) {.unnumbered}\n\nIn the following code chunk, we load the necessary R libraries for our analysis. `MatchIt` is used for matching methods to find comparable control units, `tableone` for creating Table 1 to describe baseline characteristics, `Publish` for generating readable output of regression analysis, and `survey` for analyzing complex survey samples.\n\n\n::: {.cell hash='propensityscore1_cache/html/setup_389be1adc848ec1ead4cc6c15f4a879a'}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(MatchIt)\nrequire(tableone)\nrequire(Publish)\nrequire(survey)\n```\n:::\n\n\n### Load data\n\nIn the following code chunk, we load the CCHS dataset which is related to the Canadian Community Health Survey (CCHS). We then use `ls()` to list all objects in the workspace and `str` to display the structure of the data frame, providing a quick overview of the data and checking for any character variables.\n\n\n::: {.cell hash='propensityscore1_cache/html/data_b6242cd3d8636a1bbdafd29120024f99'}\n\n```{.r .cell-code}\nload(\"Data/propensityscore/cchs123b.RData\")\nls()\n#> [1] \"analytic.miss\"   \"analytic2\"       \"has_annotations\"\nstr(analytic.miss) # is there any character variable?\n#> 'data.frame':\t397173 obs. of  22 variables:\n#>  $ CVD      : chr  \"event\" \"no event\" \"no event\" \"no event\" ...\n#>  $ age      : chr  \"65 years and over\" \"65 years and over\" \"30-39 years\" \"65 years and over\" ...\n#>  $ sex      : chr  \"Female\" \"Female\" \"Male\" \"Female\" ...\n#>  $ married  : chr  \"single\" \"single\" \"not single\" \"single\" ...\n#>  $ race     : chr  \"White\" \"White\" \"White\" \"White\" ...\n#>  $ edu      : chr  \"2nd grad.\" \"Post-2nd grad.\" \"Post-2nd grad.\" \"Post-2nd grad.\" ...\n#>  $ income   : chr  \"$29,999 or less\" \"$29,999 or less\" \"$80,000 or more\" \"$29,999 or less\" ...\n#>  $ bmi      : Factor w/ 3 levels \"Underweight\",..: NA NA 2 NA 2 NA 3 NA 2 3 ...\n#>  $ phyact   : chr  \"Inactive\" \"Inactive\" \"Inactive\" \"Inactive\" ...\n#>  $ doctor   : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n#>  $ stress   : chr  \"Not too stressed\" \"Not too stressed\" \"stressed\" \"Not too stressed\" ...\n#>  $ smoke    : Factor w/ 3 levels \"Never smoker\",..: 3 1 3 3 2 2 3 1 2 2 ...\n#>  $ drink    : Factor w/ 3 levels \"Never drank\",..: 2 1 2 2 2 2 3 1 2 2 ...\n#>  $ fruit    : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 3 3 3 2 2 2 2 ...\n#>  $ bp       : chr  \"No\" \"No\" \"No\" \"No\" ...\n#>  $ diab     : chr  \"No\" \"No\" \"No\" \"No\" ...\n#>  $ province : Factor w/ 2 levels \"South\",\"North\": 1 1 1 1 1 1 1 1 1 1 ...\n#>  $ weight   : num  142.8 71.4 168.3 71.4 196.1 ...\n#>  $ cycle    : Factor w/ 3 levels \"11\",\"21\",\"31\": 1 1 1 1 1 1 1 1 1 1 ...\n#>  $ ID       : int  1 2 3 4 5 6 7 8 9 10 ...\n#>  $ OA       : chr  \"Control\" \"Control\" \"Control\" \"Control\" ...\n#>  $ immigrate: Factor w/ 3 levels \"not immigrant\",..: 1 1 3 1 1 1 1 1 1 1 ...\n```\n:::\n\n\n### Data pre-pocessing\n\nIn the following code chunk, we define a vector containing the names of variables of interest that needs to be converted to factor variables. We then convert these variables to factors, ensuring they are treated as categorical in subsequent analyses. We also `recode` the Osteoarthritis (OA) variable into a numeric binary format and display the frequency table of OA before and after the transformation.\n\n\n::: {.cell hash='propensityscore1_cache/html/data2_b4d1fbf20c03eca84be8a2720add3dd2'}\n\n```{.r .cell-code}\nvar.names <- c(\"age\", \"sex\", \"stress\", \"married\", \"income\", \"race\", \n               \"bmi\", \"phyact\", \"smoke\", \"doctor\", \"drink\", \"bp\", \"province\",\n               \"immigrate\", \"fruit\", \"diab\", \"edu\", \"CVD\", \"OA\")\nanalytic.miss[var.names] <- lapply(analytic.miss[var.names] , factor)\ntable(analytic.miss$OA)\n#> \n#> Control      OA \n#>  314542   40943\nanalytic.miss$OA <- as.numeric(analytic.miss$OA==\"OA\") \ntable(analytic.miss$OA)\n#> \n#>      0      1 \n#> 314542  40943\n```\n:::\n\n\n### Identify subjects with missing\n\nIn the following code chunk, we create a new variable `miss` and initially assign all its values to 1 in the full dataset (that contains some missing observations). We then adjust this assignment by setting miss to 0 for observations that are also present in another complete case dataset. That means any row with `miss` equal to 0 means that row has no missing observations. Finally, we display the frequency table of the miss variable to check the number of missing and non-missing observations.\n\n\n::: {.cell hash='propensityscore1_cache/html/miss_54bffef0a0ba74b9715e77dd7455b7d6'}\n\n```{.r .cell-code}\nanalytic.miss$miss <- 1\nhead(analytic.miss$ID) # full data\n#> [1] 1 2 3 4 5 6\nhead(analytic2$ID) # complete case\n#> [1]  3  5  7 10 11 13\nhead(analytic.miss$ID[analytic.miss$ID %in% analytic2$ID])\n#> [1]  3  5  7 10 11 13\n# if associated with complete case, assign miss <- 0\nanalytic.miss$miss[analytic.miss$ID %in% analytic2$ID] <- 0\ntable(analytic.miss$miss)\n#> \n#>      0      1 \n#> 185613 211560\n```\n:::\n\n\n### Setting Design\n\n#### Unconditional design\n\nIn the following code chunk, we explore the summary of the weight variable and establish an unconditional survey design object `w.design0` using the `svydesign` function, which will be used for subsequent survey-weighted analyses. We then explore the summary, standard deviation, and sum of the weights within our design object.\n\n\n::: {.cell hash='propensityscore1_cache/html/design_8add528f321be64256c1edf07cdad333'}\n\n```{.r .cell-code}\nsummary(analytic.miss$weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    1.17   65.28  126.63  200.09  243.21 7154.95\nw.design0 <- svydesign(id=~1, weights=~weight, \n                      data=analytic.miss)\nsummary(weights(w.design0))\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    1.17   65.28  126.63  200.09  243.21 7154.95\nsd(weights(w.design0))\n#> [1] 241.0279\nsum(weights(w.design0))\n#> [1] 79468929\n```\n:::\n\n\n#### Conditioning the design\n\nIn the following code chunk, we create a new survey design object `w.design` by subsetting `w.design0` to only include observations without missing data `(miss == 0)`. We then explore the summary, standard deviation, and sum of the weights within this new design object.\n\n\n::: {.cell hash='propensityscore1_cache/html/design2_5cbe08638157353fbd7f586743db7d7e'}\n\n```{.r .cell-code}\nw.design <- subset(w.design0, miss == 0)\nsummary(weights(w.design))\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    1.17   71.56  137.95  214.61  261.91 7154.95\nsd(weights(w.design))\n#> [1] 254.9346\nsum(weights(w.design))\n#> [1] 39835061\n```\n:::\n\n\n#### Subset data (more!)\n\nWe subset the data for fast results (less computation). We will only work with cycle 1.1, and the people from Northern provinces in Canada.\n\n\n::: {.cell hash='propensityscore1_cache/html/design3_e78c0f8f5bdf4b3472fe8a45bdd27239'}\n\n```{.r .cell-code}\nw.design1 <- subset(w.design, cycle == 11 & province == \"North\")\nsum(weights(w.design1))\n#> [1] 42786.28\n```\n:::\n\n\n### Preliminary analysis\n\n#### Table 1\n\nIn the following code chunk, we define a new variable vector `var.names` and create a categorical table using `svyCreateCatTable` to explore the distribution of `age` and `sex` across strata of `OA` within our subsetted design object `w.design1`. We then print the table with standardized mean differences (SMD) to assess the balance of these variables across strata.\n\n\n::: {.cell hash='propensityscore1_cache/html/tab_a87e0ef9900a24f78aa6b427858274f3'}\n\n```{.r .cell-code}\nvar.names <- c(\"age\", \"sex\")\ntab0 <- svyCreateCatTable(var = var.names, strata= \"OA\", data=w.design1,test=FALSE)\nprint(tab0, smd = TRUE)\n#>                       Stratified by OA\n#>                        0               1              SMD   \n#>   n                    40691.2         2095.1               \n#>   age (%)                                              1.084\n#>      20-29 years       10889.4 (26.8)   120.9 ( 5.8)        \n#>      30-39 years       12251.7 (30.1)   237.8 (11.3)        \n#>      40-49 years       11094.0 (27.3)   572.7 (27.3)        \n#>      50-59 years        5346.6 (13.1)  1092.4 (52.1)        \n#>      60-64 years        1109.4 ( 2.7)    71.4 ( 3.4)        \n#>      65 years and over     0.0 ( 0.0)     0.0 ( 0.0)        \n#>      teen                  0.0 ( 0.0)     0.0 ( 0.0)        \n#>   sex = Male (%)       20824.6 (51.2)  1050.8 (50.2)   0.020\n```\n:::\n\n\n#### Treatment effect\n\nIn the following code chunk, we fit a logistic regression model using `svyglm` to estimate the effect of `OA` and other covariates on the binary outcome `CVD` (cardiovascular disease). We then use `publish` to display the results in a readable format.\n\n\n::: {.cell hash='propensityscore1_cache/html/tx_b768a08d6f6682d04da92a072debdf8c'}\n\n```{.r .cell-code}\nfit.outcome <- svyglm(I(CVD==\"event\") ~ OA + age + sex + stress + married + \n                         income + race + bmi + phyact + smoke +\n                         immigrate + fruit + diab + edu,\n                   design = w.design1,\n                   family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\npublish(fit.outcome)\n#>   Variable             Units OddsRatio         CI.95    p-value \n#>         OA                        0.89   [0.17;4.59]   0.887411 \n#>        age       20-29 years       Ref                          \n#>                  30-39 years      2.62  [0.29;23.43]   0.389521 \n#>                  40-49 years      4.89  [0.59;40.73]   0.142280 \n#>                  50-59 years     17.95 [2.59;124.68]   0.003550 \n#>                  60-64 years     23.95 [3.41;168.27]   0.001439 \n#>        sex            Female       Ref                          \n#>                         Male      1.32   [0.64;2.71]   0.456222 \n#>     stress  Not too stressed       Ref                          \n#>                     stressed      0.54   [0.21;1.39]   0.198815 \n#>    married        not single       Ref                          \n#>                       single      0.75   [0.31;1.80]   0.513807 \n#>     income   $29,999 or less       Ref                          \n#>              $30,000-$49,999      0.72   [0.24;2.16]   0.556703 \n#>              $50,000-$79,999      0.95   [0.27;3.40]   0.939104 \n#>              $80,000 or more      0.47   [0.10;2.15]   0.332557 \n#>       race         Non-white       Ref                          \n#>                        White      0.33   [0.11;0.94]   0.038131 \n#>        bmi       Underweight       Ref                          \n#>               healthy weight      0.29   [0.03;3.20]   0.310237 \n#>                   Overweight      0.44   [0.04;4.77]   0.503130 \n#>     phyact            Active       Ref                          \n#>                     Inactive      0.84   [0.30;2.40]   0.751345 \n#>                     Moderate      1.02   [0.32;3.27]   0.979528 \n#>      smoke      Never smoker       Ref                          \n#>               Current smoker      0.98   [0.26;3.76]   0.981454 \n#>                Former smoker      0.71   [0.18;2.71]   0.612518 \n#>  immigrate     not immigrant       Ref                          \n#>                   > 10 years      0.14   [0.03;0.78]   0.025010 \n#>                       recent      0.00   [0.00;0.00]    < 1e-04 \n#>      fruit 0-3 daily serving       Ref                          \n#>            4-6 daily serving      1.15   [0.52;2.56]   0.725722 \n#>             6+ daily serving      0.68   [0.17;2.71]   0.583752 \n#>       diab                No       Ref                          \n#>                          Yes      3.08  [0.93;10.23]   0.066677 \n#>        edu          < 2ndary       Ref                          \n#>                    2nd grad.      4.12  [0.87;19.43]   0.074178 \n#>              Other 2nd grad.      3.04  [0.63;14.67]   0.167135 \n#>               Post-2nd grad.      3.00  [0.82;10.98]   0.096939\n```\n:::\n\n\n### Matching: Estimating treatment effect\n\nGoing back to the data (**not working on design here while matching**)\n\nIn the following code chunk, we create a new dataset by omitting `NA` values from `analytic.miss` and converting it to a data frame. We then create a subset `analytic11n` which includes only observations from cycle 1.1 and the Northern provinces. We display the dimensions of this subset, as well as frequency tables of `OA` and a cross-tabulation of `OA` and `age` to understand the distribution of our target variable and a key covariate.\n\n\n::: {.cell hash='propensityscore1_cache/html/effect_fb5ad33cbfbb4fc2fff2f84aa3fb196d'}\n\n```{.r .cell-code}\n# Create the dataset without design features\nanalytic2 <- as.data.frame(na.omit(analytic.miss))\nanalytic11n <- subset(analytic2, cycle == 11 & province == \"North\")\ndim(analytic11n)\n#> [1] 1424   23\ntable(analytic11n$OA)\n#> \n#>    0    1 \n#> 1357   67\ntable(analytic11n$OA,analytic11n$age)\n#>    \n#>     20-29 years 30-39 years 40-49 years 50-59 years 60-64 years\n#>   0         345         432         358         177          45\n#>   1           4          11          18          31           3\n#>    \n#>     65 years and over teen\n#>   0                 0    0\n#>   1                 0    0\n```\n:::\n\n\n#### Matching by 1 matching variable\n\nIn the following code chunk, we perform exact matching using a single variable, `age`. We define the matching formula and apply the `matchit` function to create matched sets of treated and control units. The resulting `matching.obj` object is displayed to summarize the matching results.\n\n\n::: {.cell hash='propensityscore1_cache/html/match1_afef3d17396fa5ad0f38cb24a13bbd5d'}\n\n```{.r .cell-code}\nmatch.formula <- as.formula(\"OA ~ age\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 1424 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age\n```\n:::\n\n\n#### Matching by 2 matching variables\n\nIn the following code chunk, we extend the matching to include two variables, `age` and `sex`. We create a new variable `var.comb` that concatenates these two variables and display its frequency table and the number of unique combinations. We then perform exact matching using both variables and display the resulting object.\n\n\n::: {.cell hash='propensityscore1_cache/html/match2_1bc4a99a512e98b34585732ae998c093'}\n\n```{.r .cell-code}\nvar.comb <- do.call('paste0', \n                    analytic11n[, c('age', 'sex')])\ntable(var.comb)\n#> var.comb\n#> 20-29 yearsFemale   20-29 yearsMale 30-39 yearsFemale   30-39 yearsMale \n#>               184               165               220               223 \n#> 40-49 yearsFemale   40-49 yearsMale 50-59 yearsFemale   50-59 yearsMale \n#>               187               189               101               107 \n#> 60-64 yearsFemale   60-64 yearsMale \n#>                24                24\nlength(table(var.comb))\n#> [1] 10\nmatch.formula <- as.formula(\"OA ~ age + sex\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 1424 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex\n```\n:::\n\n\n#### Matching by 3 matching variables\n\nIn the following code chunk, we further extend the matching to include three variables: `age`, `sex`, and `stress`. We explore the unique combinations of these variables and their distribution across levels of `OA`. We then perform exact matching using these three variables and display the resulting object.\n\n\n::: {.cell hash='propensityscore1_cache/html/match3_91d16b5f7ec48601e916494aad3a243c'}\n\n```{.r .cell-code}\nvar.comb <- do.call('paste0', \n                    analytic11n[, c('age', 'sex', 'stress')])\ntable(var.comb)\n#> var.comb\n#> 20-29 yearsFemaleNot too stressed         20-29 yearsFemalestressed \n#>                               157                                27 \n#>   20-29 yearsMaleNot too stressed           20-29 yearsMalestressed \n#>                               147                                18 \n#> 30-39 yearsFemaleNot too stressed         30-39 yearsFemalestressed \n#>                               170                                50 \n#>   30-39 yearsMaleNot too stressed           30-39 yearsMalestressed \n#>                               183                                40 \n#> 40-49 yearsFemaleNot too stressed         40-49 yearsFemalestressed \n#>                               142                                45 \n#>   40-49 yearsMaleNot too stressed           40-49 yearsMalestressed \n#>                               141                                48 \n#> 50-59 yearsFemaleNot too stressed         50-59 yearsFemalestressed \n#>                                72                                29 \n#>   50-59 yearsMaleNot too stressed           50-59 yearsMalestressed \n#>                                78                                29 \n#> 60-64 yearsFemaleNot too stressed         60-64 yearsFemalestressed \n#>                                18                                 6 \n#>   60-64 yearsMaleNot too stressed           60-64 yearsMalestressed \n#>                                20                                 4\nlength(table(var.comb))\n#> [1] 20\ntable(var.comb,analytic11n$OA)\n#>                                    \n#> var.comb                              0   1\n#>   20-29 yearsFemaleNot too stressed 156   1\n#>   20-29 yearsFemalestressed          27   0\n#>   20-29 yearsMaleNot too stressed   144   3\n#>   20-29 yearsMalestressed            18   0\n#>   30-39 yearsFemaleNot too stressed 168   2\n#>   30-39 yearsFemalestressed          49   1\n#>   30-39 yearsMaleNot too stressed   178   5\n#>   30-39 yearsMalestressed            37   3\n#>   40-49 yearsFemaleNot too stressed 130  12\n#>   40-49 yearsFemalestressed          42   3\n#>   40-49 yearsMaleNot too stressed   138   3\n#>   40-49 yearsMalestressed            48   0\n#>   50-59 yearsFemaleNot too stressed  65   7\n#>   50-59 yearsFemalestressed          22   7\n#>   50-59 yearsMaleNot too stressed    67  11\n#>   50-59 yearsMalestressed            23   6\n#>   60-64 yearsFemaleNot too stressed  17   1\n#>   60-64 yearsFemalestressed           5   1\n#>   60-64 yearsMaleNot too stressed    19   1\n#>   60-64 yearsMalestressed             4   0\nmatch.formula <- as.formula(\"OA ~ age + sex + stress\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 1327 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex, stress\n```\n:::\n\n\n#### Matching by 4 matching variables\n\nThe process of matching by 4 variables involves creating combinations of the 4 variables, exploring their distributions, and performing exact matching.\n\n\n::: {.cell hash='propensityscore1_cache/html/match4_b9f24e58776f9503b5d1c09ef78fba25'}\n\n```{.r .cell-code}\nvar.comb <- do.call('paste0', \n                    analytic11n[, c('age', 'sex',\n                                    'stress','income')])\n#table(var.comb)\nlength(table(var.comb))\n#> [1] 76\nmatch.formula <- as.formula(\"OA ~ age + sex + stress + income\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 900 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex, stress, income\n```\n:::\n\n\n#### Matching by 5 matching variables\n\n\n::: {.cell hash='propensityscore1_cache/html/match5_ee290ef054223049251f5e5c54764bc1'}\n\n```{.r .cell-code}\nvar.comb <- do.call('paste0', \n                    analytic11n[, c('age', 'sex',\n                                    'stress','income','race')])\nlength(table(var.comb))\n#> [1] 146\nmatch.formula <- as.formula(\"OA ~ age + sex + stress + income + race\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 616 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex, stress, income, race\n```\n:::\n\n\n#### Matching by 6 matching variables\n\n\n::: {.cell hash='propensityscore1_cache/html/match6_1cb51e3c7d3671cb8e83ffa7cd05f66d'}\n\n```{.r .cell-code}\nvar.comb <- do.call('paste0', \n                    analytic11n[, c('age', 'sex',\n                                    'stress','income','race','edu')])\nlength(table(var.comb))\n#> [1] 354\nmatch.formula <- as.formula(\"OA ~ age + sex + stress + income + race + edu\")\nmatching.obj <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 399 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex, stress, income, race, edu\nOACVD.match.11n <- match.data(matching.obj)\nvar.names <- c(\"age\", \"sex\", \"stress\", \"income\", \"race\", \"edu\")\ntab1 <- CreateCatTable(var = var.names, strata= \"OA\", data=OACVD.match.11n,test=FALSE)\nprint(tab1, smd = TRUE)\n#>                        Stratified by OA\n#>                         0           1          SMD   \n#>   n                     337         62               \n#>   age (%)                                       0.565\n#>      20-29 years         63 (18.7)   4 ( 6.5)        \n#>      30-39 years         61 (18.1)  11 (17.7)        \n#>      40-49 years        127 (37.7)  17 (27.4)        \n#>      50-59 years         82 (24.3)  28 (45.2)        \n#>      60-64 years          4 ( 1.2)   2 ( 3.2)        \n#>      65 years and over    0 ( 0.0)   0 ( 0.0)        \n#>      teen                 0 ( 0.0)   0 ( 0.0)        \n#>   sex = Male (%)        211 (62.6)  29 (46.8)   0.322\n#>   stress = stressed (%)  42 (12.5)  17 (27.4)   0.381\n#>   income (%)                                    0.115\n#>      $29,999 or less     69 (20.5)  11 (17.7)        \n#>      $30,000-$49,999     57 (16.9)  13 (21.0)        \n#>      $50,000-$79,999     69 (20.5)  12 (19.4)        \n#>      $80,000 or more    142 (42.1)  26 (41.9)        \n#>   race = White (%)      242 (71.8)  43 (69.4)   0.054\n#>   edu (%)                                       0.146\n#>      < 2ndary            73 (21.7)  11 (17.7)        \n#>      2nd grad.            5 ( 1.5)   2 ( 3.2)        \n#>      Other 2nd grad.      0 ( 0.0)   0 ( 0.0)        \n#>      Post-2nd grad.     259 (76.9)  49 (79.0)\n```\n:::\n\n\n### Treatment effect\n\n#### Convert data to design\n\nIn the following code chunk, we create a new variable matched in the `analytic.miss` dataset to indicate whether an observation was included in the matched dataset `OACVD.match.11n`. We then create a new survey design object `w.design.m` that includes only the matched observations for subsequent analyses.\n\n\n::: {.cell hash='propensityscore1_cache/html/tx2_e66e2866179c5cc37d58b3a27f27f67a'}\n\n```{.r .cell-code}\nanalytic.miss$matched <- 0\nlength(analytic.miss$ID) # full data\n#> [1] 397173\nlength(OACVD.match.11n$ID) # matched data\n#> [1] 399\nlength(analytic.miss$ID[analytic.miss$ID %in% OACVD.match.11n$ID])\n#> [1] 399\nanalytic.miss$matched[analytic.miss$ID %in% OACVD.match.11n$ID] <- 1\ntable(analytic.miss$matched)\n#> \n#>      0      1 \n#> 396774    399\nw.design0 <- svydesign(id=~1, weights=~weight, \n                      data=analytic.miss)\nw.design.m <- subset(w.design0, matched == 1)\n```\n:::\n\n\n#### Outcome analysis\n\nThe subsequent code chunks involve fitting logistic regression models to estimate the treatment effect, both in a crude and adjusted manner, respectively. The models are fitted using the matched survey design object and the results are displayed in a readable format.\n\n##### Crude\n\n\n::: {.cell hash='propensityscore1_cache/html/est2_9fa4571e2fb6e48eba2982d4761bfde4'}\n\n```{.r .cell-code}\nfit.outcome <- svyglm(I(CVD==\"event\") ~ OA,\n                   design = w.design.m,\n                   family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\npublish(fit.outcome)\n#>  Variable Units OddsRatio        CI.95  p-value \n#>        OA            3.14 [0.80;12.40]   0.1025\n```\n:::\n\n\n##### Adjusted\n\n\n::: {.cell hash='propensityscore1_cache/html/est3_5b255853590977a332345bb51961efb3'}\n\n```{.r .cell-code}\nfit.outcome <- svyglm(I(CVD==\"event\") ~ OA + \n                        age + sex + stress + income + race + edu,\n                   design = w.design.m,\n                   family = binomial(logit))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n#> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred\npublish(fit.outcome)\n#>  Variable            Units    OddsRatio                        CI.95   p-value \n#>        OA                          2.04                 [0.34;12.16]   0.43593 \n#>       age      20-29 years          Ref                                        \n#>                30-39 years         0.54                  [0.08;3.51]   0.51962 \n#>                40-49 years  30148597.83    [7758796.64;117149345.85]   < 1e-04 \n#>                50-59 years  63290825.92   [12589874.04;318170669.03]   < 1e-04 \n#>                60-64 years         0.31                  [0.01;9.33]   0.49735 \n#>       sex           Female          Ref                                        \n#>                       Male         1.58                  [0.29;8.62]   0.59729 \n#>    stress Not too stressed          Ref                                        \n#>                   stressed         0.15                  [0.01;1.80]   0.13666 \n#>    income  $29,999 or less          Ref                                        \n#>            $30,000-$49,999         0.20                  [0.01;3.84]   0.28640 \n#>            $50,000-$79,999         0.20                  [0.02;1.95]   0.16543 \n#>            $80,000 or more         0.08                  [0.01;0.68]   0.02122 \n#>      race        Non-white          Ref                                        \n#>                      White         1.02                  [0.11;9.45]   0.98723 \n#>       edu         < 2ndary          Ref                                        \n#>                  2nd grad. 845233463.16 [44642866.24;16002995941.97]   < 1e-04 \n#>             Post-2nd grad.  69867459.11    [9660580.05;505296971.72]   < 1e-04\n```\n:::\n\n\n#### Questions for the students\n\n-   Look at all the ORs. Some of them are VERY high. Why?\n-   Look at the CI in the above table. Some of them are Inf. Why?\n-   Should we match matching variables in the regression?\n\n### Matching by a lot of variables\n\nThe code chunks involve performing matching using a large number of variables and estimating the treatment effect using the matched data. The process involves creating matched datasets, converting them to survey design objects, and fitting logistic regression models.\n\n#### Matching part in data\n\n\n::: {.cell hash='propensityscore1_cache/html/match10_5305d71ad4fea66ec0da9e3e01112663'}\n\n```{.r .cell-code}\nmatch.formula <- as.formula(\"OA ~ age + sex + stress + married + \n                         income + race + bmi + phyact + smoke +\n                         immigrate + fruit + diab + edu\")\nmatching.obj2 <- matchit(match.formula,\n                        data = analytic11n,\n                        method = \"exact\")\nmatching.obj2\n#> A matchit object\n#>  - method: Exact matching\n#>  - number of obs.: 1424 (original), 22 (matched)\n#>  - target estimand: ATT\n#>  - covariates: age, sex, stress, married, income, race, bmi, phyact, smoke, immigrate, fruit, diab, edu\nOACVD.match.11n2 <- match.data(matching.obj2)\nvar.names <- c(\"age\", \"sex\", \"stress\", \"married\", \"income\", \"race\", \n               \"bmi\", \"phyact\", \"smoke\", \"immigrate\", \"fruit\", \"diab\", \"edu\")\ntab2 <- CreateCatTable(var = var.names, strata= \"OA\", data=OACVD.match.11n2,test=FALSE)\nprint(tab2, smd = TRUE)\n#>                        Stratified by OA\n#>                         0          1          SMD   \n#>   n                     11         11               \n#>   age (%)                                     <0.001\n#>      20-29 years         3 (27.3)   3 (27.3)        \n#>      30-39 years         1 ( 9.1)   1 ( 9.1)        \n#>      40-49 years         4 (36.4)   4 (36.4)        \n#>      50-59 years         3 (27.3)   3 (27.3)        \n#>      60-64 years         0 ( 0.0)   0 ( 0.0)        \n#>      65 years and over   0 ( 0.0)   0 ( 0.0)        \n#>      teen                0 ( 0.0)   0 ( 0.0)        \n#>   sex = Male (%)         6 (54.5)   6 (54.5)  <0.001\n#>   stress = stressed (%)  1 ( 9.1)   1 ( 9.1)  <0.001\n#>   married = single (%)   3 (27.3)   3 (27.3)  <0.001\n#>   income (%)                                  <0.001\n#>      $29,999 or less     1 ( 9.1)   1 ( 9.1)        \n#>      $30,000-$49,999     2 (18.2)   2 (18.2)        \n#>      $50,000-$79,999     2 (18.2)   2 (18.2)        \n#>      $80,000 or more     6 (54.5)   6 (54.5)        \n#>   race = White (%)      10 (90.9)  10 (90.9)  <0.001\n#>   bmi (%)                                     <0.001\n#>      Underweight         0 ( 0.0)   0 ( 0.0)        \n#>      healthy weight      4 (36.4)   4 (36.4)        \n#>      Overweight          7 (63.6)   7 (63.6)        \n#>   phyact (%)                                  <0.001\n#>      Active              3 (27.3)   3 (27.3)        \n#>      Inactive            5 (45.5)   5 (45.5)        \n#>      Moderate            3 (27.3)   3 (27.3)        \n#>   smoke (%)                                   <0.001\n#>      Never smoker        3 (27.3)   3 (27.3)        \n#>      Current smoker      2 (18.2)   2 (18.2)        \n#>      Former smoker       6 (54.5)   6 (54.5)        \n#>   immigrate (%)                               <0.001\n#>      not immigrant      10 (90.9)  10 (90.9)        \n#>      > 10 years          1 ( 9.1)   1 ( 9.1)        \n#>      recent              0 ( 0.0)   0 ( 0.0)        \n#>   fruit (%)                                   <0.001\n#>      0-3 daily serving   3 (27.3)   3 (27.3)        \n#>      4-6 daily serving   6 (54.5)   6 (54.5)        \n#>      6+ daily serving    2 (18.2)   2 (18.2)        \n#>   diab = Yes (%)         0 ( 0.0)   0 ( 0.0)  <0.001\n#>   edu (%)                                     <0.001\n#>      < 2ndary            1 ( 9.1)   1 ( 9.1)        \n#>      2nd grad.           0 ( 0.0)   0 ( 0.0)        \n#>      Other 2nd grad.     0 ( 0.0)   0 ( 0.0)        \n#>      Post-2nd grad.     10 (90.9)  10 (90.9)\n```\n:::\n\n\n#### Treatment effect estimation in design\n\n##### Create design\n\n\n::: {.cell hash='propensityscore1_cache/html/match11_cd2b5e4f583e3bff5366435e716794e1'}\n\n```{.r .cell-code}\nanalytic.miss$matched2 <- 0\nlength(analytic.miss$ID) # full data\n#> [1] 397173\nlength(OACVD.match.11n2$ID) # matched data\n#> [1] 22\nlength(analytic.miss$ID[analytic.miss$ID %in% OACVD.match.11n2$ID])\n#> [1] 22\nanalytic.miss$matched2[analytic.miss$ID %in% OACVD.match.11n2$ID] <- 1\ntable(analytic.miss$matched2)\n#> \n#>      0      1 \n#> 397151     22\nw.design0 <- svydesign(id=~1, weights=~weight, \n                      data=analytic.miss)\nw.design.m2 <- subset(w.design0, matched2 == 1)\n```\n:::\n\n\n##### outcome analysis\n\n\n::: {.cell hash='propensityscore1_cache/html/match12_592ee9ec86b4895657d4ab6696ddd2b5'}\n\n```{.r .cell-code}\nfit.outcome <- svyglm(I(CVD==\"event\") ~ OA + age + sex + stress + married +\n                         income + race + bmi + phyact + smoke +\n                         immigrate + fruit + diab + edu,\n                   design = w.design.m2,\n                   family = binomial(logit))\npublish(fit.outcome)\n# Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : \n#   contrasts can be applied only to factors with 2 or more levels\n```\n:::\n\n\n##### Questions for the students\n\n-   Why the above model not fitting?\n\n### Save data for later use\n\n\n::: {.cell hash='propensityscore1_cache/html/savedata_2325ed7e464d8f009a7dde30240d0b05'}\n\n```{.r .cell-code}\nsave(analytic11n, analytic2, analytic.miss, file=\"Data/propensityscore/cchs123c.RData\")\n```\n:::\n\n\n### Video content (optional)\n\n::: callout-tip\nFor those who prefer a video walkthrough, feel free to watch the video below, which offers a description of an earlier version of the above content.\n:::\n\n::: {style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"}\n<iframe src=\"https://www.youtube.com/embed/jC8g_n6RqK0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" allowfullscreen>\n\n</iframe>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}