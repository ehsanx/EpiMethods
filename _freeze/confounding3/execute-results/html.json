{
  "hash": "30211458027ccb611a4c2cbd27dfb8a7",
  "result": {
    "markdown": "## Collider {.unnumbered}\n\nIn causal inference, understanding the role of colliders is crucial. A collider is a variable that is a common effect of two or more variables. Adjusting for a collider can introduce bias into your estimates. \n\n\n\n::: {.cell hash='confounding3_cache/html/setup_23cc31283cea6ce95d60e8c614c3bebd'}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(simcausal)\n```\n:::\n\n\nIn a DAG, a collider is a variable influenced by two or more other variables. In our case, L is a collider because it is affected by both A (the treatment) and Y (the outcome). When you adjust for a collider like L, you could introduce bias into your estimates, as demonstrated in the examples below.\n\nLet us consider\n\n-   L is continuous variable\n-   A is binary treatment\n-   Y is continuous outcome\n\n### Non-null effect\n\n-   True treatment effect = 1.3\n\n#### Data generating process\n\n\n::: {.cell hash='confounding3_cache/html/dgm3_fa5d7bdd42ac56ab43c1e8956f10a9e7'}\n\n```{.r .cell-code}\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rbern\", prob = plogis(-10)) +\n  node(\"Y\", distr = \"rnorm\", mean = 1.3 * A, sd = .1) +\n  node(\"L\", distr = \"rnorm\", mean = 10 * Y + 1.3 * A, sd = 1)\nDset <- set.DAG(D)\n```\n:::\n\n\n#### Generate DAG\n\n\n::: {.cell hash='confounding3_cache/html/dag3_de96ab10b5d14b2026ad36247a4ce8de'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n```\n\n::: {.cell-output-display}\n![](confounding3_files/figure-html/dag3-1.png){width=672}\n:::\n:::\n\n\n#### Generate data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(simcausal)\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\nhead(Obs.Data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"L\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"0.02620001\",\"4\":\"1.7153509\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"0\",\"3\":\"-0.15209594\",\"4\":\"-2.9689005\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"0\",\"3\":\"0.02366280\",\"4\":\"0.6548666\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"0\",\"3\":\"0.06603038\",\"4\":\"-0.2591076\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"0\",\"3\":\"-0.02140063\",\"4\":\"0.5220096\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"0\",\"3\":\"0.01928270\",\"4\":\"-0.6426011\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Estimate effect\n\n\n::: {.cell hash='confounding3_cache/html/est3_1a7ae2d5923545e90553634f846e6273'}\n\n```{.r .cell-code}\n# Not adjusted for L\nfit0 <- glm(Y ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit0),2)\n#> (Intercept)           A \n#>        0.00        1.29\n\n# Adjusted for L\nfit <- glm(Y ~ A + L, family=\"gaussian\", data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A           L \n#>        0.00        0.58        0.05\n```\n:::\n\n\n::: callout-important\nWhen not adjusting for L, we recover the true effect close to 1.3. Adjusting for L introduces bias, making the estimate unreliable.\n::: \n\n\n### Null effect\n\n-   True treatment effect = 0\n\n#### Data generating process\n\n\n::: {.cell hash='confounding3_cache/html/dgm4_c1c896a7724a6f6caa101454f48d9e46'}\n\n```{.r .cell-code}\nD <- DAG.empty()\nD <- D + \n  node(\"A\", distr = \"rbern\", prob = plogis(-10)) +\n  node(\"Y\", distr = \"rnorm\", mean = 0, sd = .1) +\n  node(\"L\", distr = \"rnorm\", mean = 10 * Y + 1.3 * A, sd = 1)\nDset <- set.DAG(D)\n```\n:::\n\n\n#### Generate DAG\n\n\n::: {.cell hash='confounding3_cache/html/dag4_3640eee82398c43fad568e0a8ba2f0a8'}\n\n```{.r .cell-code}\nplotDAG(Dset, xjitter = 0.1, yjitter = .9,\n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 0.7),\n        vertex_attrs = list(size = 12, label.cex = 0.8))\n```\n\n::: {.cell-output-display}\n![](confounding3_files/figure-html/dag4-1.png){width=672}\n:::\n:::\n\n\n#### Generate data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(simcausal)\nObs.Data <- sim(DAG = Dset, n = 1000000, rndseed = 123)\nhead(Obs.Data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"L\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0\",\"3\":\"0.02620001\",\"4\":\"1.7153509\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"0\",\"3\":\"-0.15209594\",\"4\":\"-2.9689005\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"0\",\"3\":\"0.02366280\",\"4\":\"0.6548666\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"0\",\"3\":\"0.06603038\",\"4\":\"-0.2591076\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"0\",\"3\":\"-0.02140063\",\"4\":\"0.5220096\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"0\",\"3\":\"0.01928270\",\"4\":\"-0.6426011\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Estimate effect\n\n\n::: {.cell hash='confounding3_cache/html/est4_5705136f7c7ef94962b1d11d50a2f38a'}\n\n```{.r .cell-code}\n# Not adjusted for L\nfit0 <- glm(Y ~ A, family=\"gaussian\", data=Obs.Data)\nround(coef(fit0),2)\n#> (Intercept)           A \n#>        0.00       -0.01\n\n# Adjusted for L\nfit <- glm(Y ~ A + L, family=\"gaussian\", data=Obs.Data)\nround(coef(fit),2)\n#> (Intercept)           A           L \n#>        0.00       -0.07        0.05\n```\n:::\n\n\n::: callout-important\nWhen the true effect is null, not adjusting for L shows an estimate close to zero. Adjusting for L moves the estimate away from the null value, introducing bias.\n::: \n\n\nEven 1,000,000 observations were not enough to recover true treatment effect! But we are close enough.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}