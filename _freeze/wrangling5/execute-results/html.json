{
  "hash": "906889178cb285cd4773f94d908300ba",
  "result": {
    "engine": "knitr",
    "markdown": "## Summary tables {.unnumbered}\n\nMedical research and epidemiology often involve large, complex datasets. Data summarization is a vital step that transforms these vast datasets into concise, understandable insights. In medical contexts, these summaries can highlight patterns, indicate data inconsistencies, and guide further research. This tutorial will teach you how to use R to efficiently summarize medical data.\n\nIn epidemiology and medical research, \"Table 1\" typically refers to the first table in a research paper or report that provides descriptive statistics of the study population. It offers a snapshot of the baseline characteristics of the study groups, whether in a cohort study, clinical trial, or any other study design.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\nmpg <- read.csv(\"Data/wrangling/mpg.csv\", header = TRUE)\n\n# Frequency table for drv\ntable(mpg$drv)\n#> \n#>   4   f   r \n#> 103 106  25\n\n# Frequency table for manufacturer\ntable(mpg$manufacturer)\n#> \n#>       audi  chevrolet      dodge       ford      honda    hyundai       jeep \n#>         18         19         37         25          9         14          8 \n#> land rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n#>          4          3          4         13          5         14         34 \n#> volkswagen \n#>         27\n\n## Ex create a summary table between manufacturer and drv\ntable(mpg$drv, mpg$manufacturer)\n#>    \n#>     audi chevrolet dodge ford honda hyundai jeep land rover lincoln mercury\n#>   4   11         4    26   13     0       0    8          4       0       4\n#>   f    7         5    11    0     9      14    0          0       0       0\n#>   r    0        10     0   12     0       0    0          0       3       0\n#>    \n#>     nissan pontiac subaru toyota volkswagen\n#>   4      4       0     14     15          0\n#>   f      9       5      0     19         27\n#>   r      0       0      0      0          0\n```\n:::\n\n\nThe first line reads a CSV file. It uses the table() function to generate a contingency table (cross-tabulation) between two categorical variables: `drv` (drive) and `manufacturer`. It essentially counts how many times each combination of drv and manufacturer appears in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Get the percentage summary using prop.table\nprop.table(table(mpg$drv, mpg$manufacturer), margin = 2)\n#>    \n#>          audi chevrolet     dodge      ford     honda   hyundai      jeep\n#>   4 0.6111111 0.2105263 0.7027027 0.5200000 0.0000000 0.0000000 1.0000000\n#>   f 0.3888889 0.2631579 0.2972973 0.0000000 1.0000000 1.0000000 0.0000000\n#>   r 0.0000000 0.5263158 0.0000000 0.4800000 0.0000000 0.0000000 0.0000000\n#>    \n#>     land rover   lincoln   mercury    nissan   pontiac    subaru    toyota\n#>   4  1.0000000 0.0000000 1.0000000 0.3076923 0.0000000 1.0000000 0.4411765\n#>   f  0.0000000 0.0000000 0.0000000 0.6923077 1.0000000 0.0000000 0.5588235\n#>   r  0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000\n#>    \n#>     volkswagen\n#>   4  0.0000000\n#>   f  1.0000000\n#>   r  0.0000000\n## margin = 1 sum across row, 2 across col\n```\n:::\n\n\nThis code calculates the column-wise proportion (as percentages) for each combination of `drv` and `manufacturer`. The prop.table() function is used to compute the proportions. The `margin = 2` argument indicates that the proportions are to be computed across columns (`margin = 1` would compute them across rows).\n\n### tableone package\n\n::: callout-tip\nCreateTableOne function from tableone package could be a very useful function to see the summary table. Type `?tableone::CreateTableOne` to see for more details.\n:::\n\nThis section introduces the tableone package, which offers the `CreateTableOne` function. This function helps in creating \"Table 1\" type summary tables, commonly used in epidemiological studies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tableone)\n#> Loading required package: tableone\nCreateTableOne(vars = c(\"cyl\", \"drv\", \"hwy\", \"cty\"), data = mpg, \n               strata = \"trans\", includeNA = TRUE, test = FALSE)\n#>                  Stratified by trans\n#>                   auto(av)       auto(l3)       auto(l4)      auto(l5)     \n#>   n                   5              2             83            39        \n#>   cyl (mean (SD))  5.20 (1.10)    4.00 (0.00)    6.14 (1.62)   6.56 (1.45) \n#>   drv (%)                                                                  \n#>      4                0 (  0.0)      0 (  0.0)     34 (41.0)     29 (74.4) \n#>      f                5 (100.0)      2 (100.0)     37 (44.6)      8 (20.5) \n#>      r                0 (  0.0)      0 (  0.0)     12 (14.5)      2 ( 5.1) \n#>   hwy (mean (SD)) 27.80 (2.59)   27.00 (4.24)   21.96 (5.64)  20.72 (6.04) \n#>   cty (mean (SD)) 20.00 (2.00)   21.00 (4.24)   15.94 (3.98)  14.72 (3.49) \n#>                  Stratified by trans\n#>                   auto(l6)      auto(s4)      auto(s5)      auto(s6)     \n#>   n                   6             3             3            16        \n#>   cyl (mean (SD))  7.33 (1.03)   5.33 (2.31)   6.00 (2.00)   6.00 (1.59) \n#>   drv (%)                                                                \n#>      4                2 (33.3)      2 (66.7)      1 (33.3)      7 (43.8) \n#>      f                2 (33.3)      1 (33.3)      2 (66.7)      8 (50.0) \n#>      r                2 (33.3)      0 ( 0.0)      0 ( 0.0)      1 ( 6.2) \n#>   hwy (mean (SD)) 20.00 (2.37)  25.67 (1.15)  25.33 (6.66)  25.19 (3.99) \n#>   cty (mean (SD)) 13.67 (1.86)  18.67 (2.31)  17.33 (5.03)  17.38 (3.22) \n#>                  Stratified by trans\n#>                   manual(m5)    manual(m6)   \n#>   n                  58            19        \n#>   cyl (mean (SD))  5.00 (1.30)   6.00 (1.76) \n#>   drv (%)                                    \n#>      4               21 (36.2)      7 (36.8) \n#>      f               33 (56.9)      8 (42.1) \n#>      r                4 ( 6.9)      4 (21.1) \n#>   hwy (mean (SD)) 26.29 (5.99)  24.21 (5.75) \n#>   cty (mean (SD)) 19.26 (4.56)  16.89 (3.83)\n```\n:::\n\n\nThe CreateTableOne function is used to create a summary table for the variables `cyl, drv, hwy, and cty` from the `mpg` dataset. The `strata = trans` argument means that the summary is stratified by the trans variable. The `includeNA = TRUE` argument means that missing values (NAs) are included in the summary. The `test = FALSE` argument indicates that no statistical tests should be applied to the data (often tests are used to compare groups in the table).\n\n### table1 package\n\nThis section introduces another package, `table1`, which can also be used to create \"Table 1\" type summary tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(table1)\n#> Loading required package: table1\n#> \n#> Attaching package: 'table1'\n#> The following objects are masked from 'package:base':\n#> \n#>     units, units<-\ntable1(~ cyl + drv + hwy + cty | trans, data=mpg)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"Rtable1\"><table class=\"Rtable1\">\n<thead>\n<tr>\n<th class='rowlabel firstrow lastrow'></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(av)<br><span class='stratn'>(N=5)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(l3)<br><span class='stratn'>(N=2)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(l4)<br><span class='stratn'>(N=83)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(l5)<br><span class='stratn'>(N=39)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(l6)<br><span class='stratn'>(N=6)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(s4)<br><span class='stratn'>(N=3)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(s5)<br><span class='stratn'>(N=3)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>auto(s6)<br><span class='stratn'>(N=16)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>manual(m5)<br><span class='stratn'>(N=58)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>manual(m6)<br><span class='stratn'>(N=19)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>Overall<br><span class='stratn'>(N=234)</span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class='rowlabel firstrow'>cyl</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>5.20 (1.10)</td>\n<td>4.00 (0)</td>\n<td>6.14 (1.62)</td>\n<td>6.56 (1.45)</td>\n<td>7.33 (1.03)</td>\n<td>5.33 (2.31)</td>\n<td>6.00 (2.00)</td>\n<td>6.00 (1.59)</td>\n<td>5.00 (1.30)</td>\n<td>6.00 (1.76)</td>\n<td>5.89 (1.61)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Median [Min, Max]</td>\n<td class='lastrow'>6.00 [4.00, 6.00]</td>\n<td class='lastrow'>4.00 [4.00, 4.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n<td class='lastrow'>8.00 [6.00, 8.00]</td>\n<td class='lastrow'>4.00 [4.00, 8.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n<td class='lastrow'>4.00 [4.00, 8.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n<td class='lastrow'>6.00 [4.00, 8.00]</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>drv</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>f</td>\n<td>5 (100%)</td>\n<td>2 (100%)</td>\n<td>37 (44.6%)</td>\n<td>8 (20.5%)</td>\n<td>2 (33.3%)</td>\n<td>1 (33.3%)</td>\n<td>2 (66.7%)</td>\n<td>8 (50.0%)</td>\n<td>33 (56.9%)</td>\n<td>8 (42.1%)</td>\n<td>106 (45.3%)</td>\n</tr>\n<tr>\n<td class='rowlabel'>4</td>\n<td>0 (0%)</td>\n<td>0 (0%)</td>\n<td>34 (41.0%)</td>\n<td>29 (74.4%)</td>\n<td>2 (33.3%)</td>\n<td>2 (66.7%)</td>\n<td>1 (33.3%)</td>\n<td>7 (43.8%)</td>\n<td>21 (36.2%)</td>\n<td>7 (36.8%)</td>\n<td>103 (44.0%)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>r</td>\n<td class='lastrow'>0 (0%)</td>\n<td class='lastrow'>0 (0%)</td>\n<td class='lastrow'>12 (14.5%)</td>\n<td class='lastrow'>2 (5.1%)</td>\n<td class='lastrow'>2 (33.3%)</td>\n<td class='lastrow'>0 (0%)</td>\n<td class='lastrow'>0 (0%)</td>\n<td class='lastrow'>1 (6.3%)</td>\n<td class='lastrow'>4 (6.9%)</td>\n<td class='lastrow'>4 (21.1%)</td>\n<td class='lastrow'>25 (10.7%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>hwy</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>27.8 (2.59)</td>\n<td>27.0 (4.24)</td>\n<td>22.0 (5.64)</td>\n<td>20.7 (6.04)</td>\n<td>20.0 (2.37)</td>\n<td>25.7 (1.15)</td>\n<td>25.3 (6.66)</td>\n<td>25.2 (3.99)</td>\n<td>26.3 (5.99)</td>\n<td>24.2 (5.75)</td>\n<td>23.4 (5.95)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Median [Min, Max]</td>\n<td class='lastrow'>27.0 [25.0, 31.0]</td>\n<td class='lastrow'>27.0 [24.0, 30.0]</td>\n<td class='lastrow'>22.0 [14.0, 41.0]</td>\n<td class='lastrow'>19.0 [12.0, 36.0]</td>\n<td class='lastrow'>19.0 [18.0, 23.0]</td>\n<td class='lastrow'>25.0 [25.0, 27.0]</td>\n<td class='lastrow'>27.0 [18.0, 31.0]</td>\n<td class='lastrow'>26.0 [18.0, 29.0]</td>\n<td class='lastrow'>26.0 [16.0, 44.0]</td>\n<td class='lastrow'>26.0 [12.0, 32.0]</td>\n<td class='lastrow'>24.0 [12.0, 44.0]</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>cty</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>20.0 (2.00)</td>\n<td>21.0 (4.24)</td>\n<td>15.9 (3.98)</td>\n<td>14.7 (3.49)</td>\n<td>13.7 (1.86)</td>\n<td>18.7 (2.31)</td>\n<td>17.3 (5.03)</td>\n<td>17.4 (3.22)</td>\n<td>19.3 (4.56)</td>\n<td>16.9 (3.83)</td>\n<td>16.9 (4.26)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Median [Min, Max]</td>\n<td class='lastrow'>19.0 [18.0, 23.0]</td>\n<td class='lastrow'>21.0 [18.0, 24.0]</td>\n<td class='lastrow'>16.0 [11.0, 29.0]</td>\n<td class='lastrow'>14.0 [9.00, 25.0]</td>\n<td class='lastrow'>13.0 [12.0, 16.0]</td>\n<td class='lastrow'>20.0 [16.0, 20.0]</td>\n<td class='lastrow'>18.0 [12.0, 22.0]</td>\n<td class='lastrow'>17.0 [12.0, 22.0]</td>\n<td class='lastrow'>19.0 [11.0, 35.0]</td>\n<td class='lastrow'>16.0 [9.00, 23.0]</td>\n<td class='lastrow'>17.0 [9.00, 35.0]</td>\n</tr>\n</tbody>\n</table>\n</div>\n```\n\n:::\n:::\n\n\nThe `table1()` function is used to generate a summary table for the specified variables. The formula-like syntax `(~ cyl + drv + hwy + cty | trans)` indicates that the summary should be stratified by the `trans` variable.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/table1-1.0/table1_defaults.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}