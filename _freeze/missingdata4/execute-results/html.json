{
  "hash": "0842f1960f2ed0e55d429f2a852af6fc",
  "result": {
    "engine": "knitr",
    "markdown": "## Performance with NA {.unnumbered}\n\nThis is a tutorial of how to estimate model performance while analyzing survey data with missing values (for predictive goals).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(survey)\nlibrary(ROCR)\nlibrary(WeightedROC)\n```\n:::\n\n\n### Useful functions \n\nThe functions below could be helpful in \n\n-  `svyROCw3`: calculating area under the ROC curve (AUC) value with survey data with logistic regression  \n-  `AL.gof3`: testing Archer-Lemeshow goodness of fit for survey data with logistic regression \n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE)\n\n# ROC curve for Survey Data with Logistic Regression\nsvyROCw3 <- function(fit=fit7,outcome=analytic2$CVD==\"event\", weight = NULL,plot=FALSE){\n  if (is.null(weight)){ # require(ROCR)\n    prob <- predict(fit, type = \"response\")\n  pred <- prediction(as.vector(prob), outcome)\n  perf <- performance(pred, \"tpr\", \"fpr\")\n  auc <- performance(pred, measure = \"auc\")\n  auc <- auc@y.values[[1]]\n  if (plot == TRUE){\n    roc.data <- data.frame(fpr = unlist(perf@x.values), tpr = unlist(perf@y.values), \n      model = \"Logistic\")\n    with(data = roc.data,plot(fpr, tpr, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n     xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n     main = paste(\"AUC = \", round(auc,3))))\n  mtext(\"Unweighted ROC\")\n  abline(0,1, lty=2)\n  }\n  } else { # library(WeightedROC)\n    outcome <- as.numeric(outcome)\n  pred <- predict(fit, type = \"response\")\n  tp.fp <- WeightedROC(pred, outcome, weight)\n  auc <- WeightedAUC(tp.fp)\n  if (plot == TRUE){\n    with(data = tp.fp,plot(FPR, TPR, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n     xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n     main = paste(\"AUC = \", round(auc,3))))\n  abline(0,1, lty=2)\n  mtext(\"Weighted ROC\")\n  }\n  }\n  return(auc)\n}\n\n# Archer-Lemeshow Goodness of Fit Test for Survey Data with Logistic Regression\nAL.gof3 <- function(fit=fit7, data = analytic2, weight = \"weight\", psu = \"psu\", \n                    strata= \"strata\"){\n  r <- residuals(fit, type=\"response\") \n  f<-fitted(fit) \n  breaks.g <- c(-Inf, quantile(f,  (1:9)/10), Inf)\n  breaks.g <- breaks.g + seq_along(breaks.g) * .Machine$double.eps\n  g<- cut(f, breaks.g)\n  data2g <- cbind(data,r,g)\n  if (is.null(psu)){\n    newdesign <- svydesign(id=~1,\n                         weights=as.formula(paste0(\"~\",weight)), \n                        data=data2g, nest = TRUE)\n  }\n  if (!is.null(psu)) {\n    newdesign <- svydesign(id=as.formula(paste0(\"~\",psu)),\n                         strata=as.formula(paste0(\"~\",strata)),\n                         weights=as.formula(paste0(\"~\",weight)), \n                        data=data2g, nest = TRUE)\n  }\n  decilemodel<- svyglm(r~g, design=newdesign) \n  res <- regTermTest(decilemodel, ~g)\n  return(as.numeric(res$p)) \n}\n```\n:::\n\n\n### Load imputed 5 sets of data\n\nSaved at the end of Lab 6 part 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Saved from last lab\nload(\"Data/missingdata/missOA123CVDnorth.RData\")\nstr(allImputations)\n#> List of 2\n#>  $ imputations:List of 5\n#>   ..$ :'data.frame':\t135448 obs. of  19 variables:\n#>   .. ..$ .imp   : int [1:135448] 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ .id    : int [1:135448] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ CVD    : Factor w/ 2 levels \"0 event\",\"event\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ age    : Factor w/ 4 levels \"20-39 years\",..: 1 2 1 2 3 1 3 2 1 2 ...\n#>   .. ..$ sex    : Factor w/ 2 levels \"Female\",\"Male\": 2 2 1 2 2 2 1 1 1 1 ...\n#>   .. ..$ income : Factor w/ 4 levels \"$29,999 or less\",..: 4 1 3 4 2 2 1 4 4 3 ...\n#>   .. ..$ race   : Factor w/ 2 levels \"Non-white\",\"White\": 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ bmicat : Factor w/ 3 levels \"Normal\",\"Overweight\",..: 1 2 1 1 2 1 2 2 3 2 ...\n#>   .. ..$ phyact : Factor w/ 3 levels \"Active\",\"Inactive\",..: 2 1 2 2 3 3 2 1 2 2 ...\n#>   .. ..$ smoke  : Factor w/ 3 levels \"Current smoker\",..: 2 2 2 2 2 3 2 2 3 3 ...\n#>   .. ..$ fruit  : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 2 2 1 2 3 3 2 ...\n#>   .. ..$ painmed: Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 2 2 2 2 2 ...\n#>   .. ..$ ht     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n#>   .. ..$ copd   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ diab   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ edu    : Factor w/ 4 levels \"< 2ndary\",\"2nd grad.\",..: 4 4 4 4 2 4 1 4 4 4 ...\n#>   .. ..$ weight : num [1:135448] 56.1 56.1 39.2 44 59.9 ...\n#>   .. ..$ OA     : Factor w/ 2 levels \"Control\",\"OA\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID     : int [1:135448] 1 3 6 7 12 13 14 16 20 21 ...\n#>   ..$ :'data.frame':\t135448 obs. of  19 variables:\n#>   .. ..$ .imp   : int [1:135448] 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ .id    : int [1:135448] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ CVD    : Factor w/ 2 levels \"0 event\",\"event\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ age    : Factor w/ 4 levels \"20-39 years\",..: 1 2 1 2 3 1 3 2 1 2 ...\n#>   .. ..$ sex    : Factor w/ 2 levels \"Female\",\"Male\": 2 2 1 2 2 2 1 1 1 1 ...\n#>   .. ..$ income : Factor w/ 4 levels \"$29,999 or less\",..: 4 1 3 4 2 2 1 4 4 3 ...\n#>   .. ..$ race   : Factor w/ 2 levels \"Non-white\",\"White\": 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ bmicat : Factor w/ 3 levels \"Normal\",\"Overweight\",..: 1 2 1 1 2 1 2 2 3 2 ...\n#>   .. ..$ phyact : Factor w/ 3 levels \"Active\",\"Inactive\",..: 2 1 2 2 3 3 2 1 2 2 ...\n#>   .. ..$ smoke  : Factor w/ 3 levels \"Current smoker\",..: 2 2 2 2 2 3 2 2 3 3 ...\n#>   .. ..$ fruit  : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 2 2 1 2 3 3 2 ...\n#>   .. ..$ painmed: Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 1 2 2 2 2 ...\n#>   .. ..$ ht     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n#>   .. ..$ copd   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ diab   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ edu    : Factor w/ 4 levels \"< 2ndary\",\"2nd grad.\",..: 4 4 4 4 2 4 1 4 4 4 ...\n#>   .. ..$ weight : num [1:135448] 56.1 56.1 39.2 44 59.9 ...\n#>   .. ..$ OA     : Factor w/ 2 levels \"Control\",\"OA\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID     : int [1:135448] 1 3 6 7 12 13 14 16 20 21 ...\n#>   ..$ :'data.frame':\t135448 obs. of  19 variables:\n#>   .. ..$ .imp   : int [1:135448] 3 3 3 3 3 3 3 3 3 3 ...\n#>   .. ..$ .id    : int [1:135448] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ CVD    : Factor w/ 2 levels \"0 event\",\"event\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ age    : Factor w/ 4 levels \"20-39 years\",..: 1 2 1 2 3 1 3 2 1 2 ...\n#>   .. ..$ sex    : Factor w/ 2 levels \"Female\",\"Male\": 2 2 1 2 2 2 1 1 1 1 ...\n#>   .. ..$ income : Factor w/ 4 levels \"$29,999 or less\",..: 4 1 3 4 2 2 1 4 4 3 ...\n#>   .. ..$ race   : Factor w/ 2 levels \"Non-white\",\"White\": 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ bmicat : Factor w/ 3 levels \"Normal\",\"Overweight\",..: 1 2 1 1 2 1 2 2 3 2 ...\n#>   .. ..$ phyact : Factor w/ 3 levels \"Active\",\"Inactive\",..: 2 1 2 2 3 3 2 1 2 2 ...\n#>   .. ..$ smoke  : Factor w/ 3 levels \"Current smoker\",..: 2 2 2 2 2 3 2 2 3 3 ...\n#>   .. ..$ fruit  : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 2 2 1 2 3 3 2 ...\n#>   .. ..$ painmed: Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 1 2 2 2 2 2 2 ...\n#>   .. ..$ ht     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n#>   .. ..$ copd   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ diab   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ edu    : Factor w/ 4 levels \"< 2ndary\",\"2nd grad.\",..: 4 4 4 4 2 4 1 4 4 4 ...\n#>   .. ..$ weight : num [1:135448] 56.1 56.1 39.2 44 59.9 ...\n#>   .. ..$ OA     : Factor w/ 2 levels \"Control\",\"OA\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID     : int [1:135448] 1 3 6 7 12 13 14 16 20 21 ...\n#>   ..$ :'data.frame':\t135448 obs. of  19 variables:\n#>   .. ..$ .imp   : int [1:135448] 4 4 4 4 4 4 4 4 4 4 ...\n#>   .. ..$ .id    : int [1:135448] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ CVD    : Factor w/ 2 levels \"0 event\",\"event\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ age    : Factor w/ 4 levels \"20-39 years\",..: 1 2 1 2 3 1 3 2 1 2 ...\n#>   .. ..$ sex    : Factor w/ 2 levels \"Female\",\"Male\": 2 2 1 2 2 2 1 1 1 1 ...\n#>   .. ..$ income : Factor w/ 4 levels \"$29,999 or less\",..: 4 1 3 4 2 2 1 4 4 3 ...\n#>   .. ..$ race   : Factor w/ 2 levels \"Non-white\",\"White\": 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ bmicat : Factor w/ 3 levels \"Normal\",\"Overweight\",..: 1 2 1 1 2 1 2 2 3 2 ...\n#>   .. ..$ phyact : Factor w/ 3 levels \"Active\",\"Inactive\",..: 2 1 2 2 3 3 2 1 2 2 ...\n#>   .. ..$ smoke  : Factor w/ 3 levels \"Current smoker\",..: 2 2 2 2 2 3 2 2 3 3 ...\n#>   .. ..$ fruit  : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 2 2 1 2 3 3 2 ...\n#>   .. ..$ painmed: Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 1 1 2 1 2 2 ...\n#>   .. ..$ ht     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n#>   .. ..$ copd   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ diab   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ edu    : Factor w/ 4 levels \"< 2ndary\",\"2nd grad.\",..: 4 4 4 4 2 4 1 4 4 4 ...\n#>   .. ..$ weight : num [1:135448] 56.1 56.1 39.2 44 59.9 ...\n#>   .. ..$ OA     : Factor w/ 2 levels \"Control\",\"OA\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID     : int [1:135448] 1 3 6 7 12 13 14 16 20 21 ...\n#>   ..$ :'data.frame':\t135448 obs. of  19 variables:\n#>   .. ..$ .imp   : int [1:135448] 5 5 5 5 5 5 5 5 5 5 ...\n#>   .. ..$ .id    : int [1:135448] 1 2 3 4 5 6 7 8 9 10 ...\n#>   .. ..$ CVD    : Factor w/ 2 levels \"0 event\",\"event\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ age    : Factor w/ 4 levels \"20-39 years\",..: 1 2 1 2 3 1 3 2 1 2 ...\n#>   .. ..$ sex    : Factor w/ 2 levels \"Female\",\"Male\": 2 2 1 2 2 2 1 1 1 1 ...\n#>   .. ..$ income : Factor w/ 4 levels \"$29,999 or less\",..: 4 1 3 4 2 2 1 4 4 3 ...\n#>   .. ..$ race   : Factor w/ 2 levels \"Non-white\",\"White\": 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ bmicat : Factor w/ 3 levels \"Normal\",\"Overweight\",..: 1 2 1 1 2 1 2 2 3 2 ...\n#>   .. ..$ phyact : Factor w/ 3 levels \"Active\",\"Inactive\",..: 2 1 2 2 3 3 2 1 2 2 ...\n#>   .. ..$ smoke  : Factor w/ 3 levels \"Current smoker\",..: 2 2 2 2 2 3 2 2 3 3 ...\n#>   .. ..$ fruit  : Factor w/ 3 levels \"0-3 daily serving\",..: 2 2 2 2 2 1 2 3 3 2 ...\n#>   .. ..$ painmed: Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 2 2 2 ...\n#>   .. ..$ ht     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 2 1 1 1 ...\n#>   .. ..$ copd   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ diab   : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ edu    : Factor w/ 4 levels \"< 2ndary\",\"2nd grad.\",..: 4 4 4 4 2 4 1 4 4 4 ...\n#>   .. ..$ weight : num [1:135448] 56.1 56.1 39.2 44 59.9 ...\n#>   .. ..$ OA     : Factor w/ 2 levels \"Control\",\"OA\": 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID     : int [1:135448] 1 3 6 7 12 13 14 16 20 21 ...\n#>  $ call       : language imputationList(list(subset(impdata, subset = .imp == 1), subset(impdata,      subset = .imp == 2), subset(impdata| __truncated__ ...\n#>  - attr(*, \"class\")= chr \"imputationList\"\n```\n:::\n\n\n### Estimating treatment effect\n\n#### Individual beta estimates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\nw.design <- svydesign(ids=~1, weights=~weight,\n                           data = allImputations)\nmodel.formula <- as.formula(\"I(CVD=='event') ~ OA + age + sex +\n                            income + race + painmed + ht +\n                            copd + diab + OA:painmed +\n                            age:copd + sex:copd\")\nestimates <- with(w.design, svyglm(model.formula, family=quasibinomial))\nestimates\n#> [[1]]\n#> Independent Sampling design (with replacement)\n#> svydesign(ids = ids, probs = probs, strata = strata, variables = variables, \n#>     fpc = fpc, nest = nest, check.strata = check.strata, weights = weights, \n#>     data = d, pps = pps, ...)\n#> \n#> Call:  svyglm(formula = model.formula, design = .design, family = quasibinomial)\n#> \n#> Coefficients:\n#>            (Intercept)                    OAOA          age40-49 years  \n#>                -5.6809                  1.1063                  0.7911  \n#>         age50-59 years          age60-64 years                 sexMale  \n#>                 1.6233                  2.0076                  0.6278  \n#>  income$30,000-$49,999   income$50,000-$79,999   income$80,000 or more  \n#>                -0.4347                 -0.6031                 -0.6805  \n#>              raceWhite              painmedYes                   htYes  \n#>                 0.2136                  0.8277                  1.0344  \n#>                copdYes                 diabYes         OAOA:painmedYes  \n#>                 1.9143                  0.8166                 -0.8183  \n#> age40-49 years:copdYes  age50-59 years:copdYes  age60-64 years:copdYes  \n#>                -1.1404                 -0.7286                 -0.9360  \n#>        sexMale:copdYes  \n#>                 0.6167  \n#> \n#> Degrees of Freedom: 135447 Total (i.e. Null);  135429 Residual\n#> Null Deviance:\t    36680 \n#> Residual Deviance: 31100 \tAIC: NA\n#> \n#> [[2]]\n#> Independent Sampling design (with replacement)\n#> svydesign(ids = ids, probs = probs, strata = strata, variables = variables, \n#>     fpc = fpc, nest = nest, check.strata = check.strata, weights = weights, \n#>     data = d, pps = pps, ...)\n#> \n#> Call:  svyglm(formula = model.formula, design = .design, family = quasibinomial)\n#> \n#> Coefficients:\n#>            (Intercept)                    OAOA          age40-49 years  \n#>                -5.4837                  0.8766                  0.7781  \n#>         age50-59 years          age60-64 years                 sexMale  \n#>                 1.6090                  1.9901                  0.6083  \n#>  income$30,000-$49,999   income$50,000-$79,999   income$80,000 or more  \n#>                -0.4415                 -0.5969                 -0.6840  \n#>              raceWhite              painmedYes                   htYes  \n#>                 0.2374                  0.5877                  1.0413  \n#>                copdYes                 diabYes         OAOA:painmedYes  \n#>                 1.8837                  0.8054                 -0.5388  \n#> age40-49 years:copdYes  age50-59 years:copdYes  age60-64 years:copdYes  \n#>                -1.1303                 -0.6944                 -0.8545  \n#>        sexMale:copdYes  \n#>                 0.5857  \n#> \n#> Degrees of Freedom: 135447 Total (i.e. Null);  135429 Residual\n#> Null Deviance:\t    36680 \n#> Residual Deviance: 31260 \tAIC: NA\n#> \n#> [[3]]\n#> Independent Sampling design (with replacement)\n#> svydesign(ids = ids, probs = probs, strata = strata, variables = variables, \n#>     fpc = fpc, nest = nest, check.strata = check.strata, weights = weights, \n#>     data = d, pps = pps, ...)\n#> \n#> Call:  svyglm(formula = model.formula, design = .design, family = quasibinomial)\n#> \n#> Coefficients:\n#>            (Intercept)                    OAOA          age40-49 years  \n#>                -5.6365                  1.0389                  0.7815  \n#>         age50-59 years          age60-64 years                 sexMale  \n#>                 1.6140                  1.9986                  0.6180  \n#>  income$30,000-$49,999   income$50,000-$79,999   income$80,000 or more  \n#>                -0.4334                 -0.5945                 -0.6843  \n#>              raceWhite              painmedYes                   htYes  \n#>                 0.2042                  0.7963                  1.0386  \n#>                copdYes                 diabYes         OAOA:painmedYes  \n#>                 1.9468                  0.8020                 -0.7330  \n#> age40-49 years:copdYes  age50-59 years:copdYes  age60-64 years:copdYes  \n#>                -1.1185                 -0.7775                 -0.9414  \n#>        sexMale:copdYes  \n#>                 0.5548  \n#> \n#> Degrees of Freedom: 135447 Total (i.e. Null);  135429 Residual\n#> Null Deviance:\t    36680 \n#> Residual Deviance: 31130 \tAIC: NA\n#> \n#> [[4]]\n#> Independent Sampling design (with replacement)\n#> svydesign(ids = ids, probs = probs, strata = strata, variables = variables, \n#>     fpc = fpc, nest = nest, check.strata = check.strata, weights = weights, \n#>     data = d, pps = pps, ...)\n#> \n#> Call:  svyglm(formula = model.formula, design = .design, family = quasibinomial)\n#> \n#> Coefficients:\n#>            (Intercept)                    OAOA          age40-49 years  \n#>                -5.6811                  1.2937                  0.7838  \n#>         age50-59 years          age60-64 years                 sexMale  \n#>                 1.6248                  2.0097                  0.6285  \n#>  income$30,000-$49,999   income$50,000-$79,999   income$80,000 or more  \n#>                -0.4431                 -0.6012                 -0.6877  \n#>              raceWhite              painmedYes                   htYes  \n#>                 0.2325                  0.8179                  1.0401  \n#>                copdYes                 diabYes         OAOA:painmedYes  \n#>                 1.9368                  0.8022                 -1.0624  \n#> age40-49 years:copdYes  age50-59 years:copdYes  age60-64 years:copdYes  \n#>                -1.0381                 -0.7407                 -0.9356  \n#>        sexMale:copdYes  \n#>                 0.5422  \n#> \n#> Degrees of Freedom: 135447 Total (i.e. Null);  135429 Residual\n#> Null Deviance:\t    36680 \n#> Residual Deviance: 31100 \tAIC: NA\n#> \n#> [[5]]\n#> Independent Sampling design (with replacement)\n#> svydesign(ids = ids, probs = probs, strata = strata, variables = variables, \n#>     fpc = fpc, nest = nest, check.strata = check.strata, weights = weights, \n#>     data = d, pps = pps, ...)\n#> \n#> Call:  svyglm(formula = model.formula, design = .design, family = quasibinomial)\n#> \n#> Coefficients:\n#>            (Intercept)                    OAOA          age40-49 years  \n#>                -5.4487                  0.7569                  0.7752  \n#>         age50-59 years          age60-64 years                 sexMale  \n#>                 1.6021                  1.9847                  0.6107  \n#>  income$30,000-$49,999   income$50,000-$79,999   income$80,000 or more  \n#>                -0.4393                 -0.5977                 -0.6788  \n#>              raceWhite              painmedYes                   htYes  \n#>                 0.2351                  0.5457                  1.0421  \n#>                copdYes                 diabYes         OAOA:painmedYes  \n#>                 1.9235                  0.8057                 -0.3884  \n#> age40-49 years:copdYes  age50-59 years:copdYes  age60-64 years:copdYes  \n#>                -1.1275                 -0.7370                 -0.9152  \n#>        sexMale:copdYes  \n#>                 0.5871  \n#> \n#> Degrees of Freedom: 135447 Total (i.e. Null);  135429 Residual\n#> Null Deviance:\t    36680 \n#> Residual Deviance: 31290 \tAIC: NA\n#> \n#> attr(,\"call\")\n#> with(w.design, svyglm(model.formula, family = quasibinomial))\n```\n:::\n\n\n#### Pooled / averaged estimates for beta and OR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"mitools\")\npooled.estimates <- MIcombine(estimates)\npooled.estimates\n#> Multiple imputation results:\n#>       with(w.design, svyglm(model.formula, family = quasibinomial))\n#>       MIcombine.default(estimates)\n#>                           results         se\n#> (Intercept)            -5.5861842 0.19239878\n#> OAOA                    1.0144758 0.27097789\n#> age40-49 years          0.7819429 0.10165218\n#> age50-59 years          1.6146502 0.09905167\n#> age60-64 years          1.9981358 0.10380099\n#> sexMale                 0.6186653 0.05484262\n#> income$30,000-$49,999  -0.4383959 0.06787453\n#> income$50,000-$79,999  -0.5987066 0.06593903\n#> income$80,000 or more  -0.6830429 0.06907307\n#> raceWhite               0.2245784 0.10567063\n#> painmedYes              0.7150386 0.16508180\n#> htYes                   1.0393147 0.05522682\n#> copdYes                 1.9210219 0.65240500\n#> diabYes                 0.8063590 0.08169615\n#> OAOA:painmedYes        -0.7081707 0.32575000\n#> age40-49 years:copdYes -1.1109564 0.69441469\n#> age50-59 years:copdYes -0.7356335 0.67352566\n#> age60-64 years:copdYes -0.9165474 0.65626790\n#> sexMale:copdYes         0.5772949 0.30888502\n\nsum.pooled <- summary(pooled.estimates,logeffect=TRUE, digits = 2)\n#> Multiple imputation results:\n#>       with(w.design, svyglm(model.formula, family = quasibinomial))\n#>       MIcombine.default(estimates)\n#>                        results      se (lower  upper) missInfo\n#> (Intercept)             0.0037 0.00072 0.0025  0.0056     45 %\n#> OAOA                    2.7579 0.74733 1.4778  5.1469     76 %\n#> age40-49 years          2.1857 0.22218 1.7909  2.6676      0 %\n#> age50-59 years          5.0261 0.49785 4.1392  6.1031      1 %\n#> age60-64 years          7.3753 0.76556 6.0175  9.0394      1 %\n#> sexMale                 1.8564 0.10181 1.6672  2.0672      4 %\n#> income$30,000-$49,999   0.6451 0.04378 0.5647  0.7369      0 %\n#> income$50,000-$79,999   0.5495 0.03623 0.4829  0.6253      0 %\n#> income$80,000 or more   0.5051 0.03489 0.4411  0.5783      0 %\n#> raceWhite               1.2518 0.13228 1.0176  1.5399      2 %\n#> painmedYes              2.0443 0.33747 1.3628  3.0664     86 %\n#> htYes                   2.8273 0.15614 2.5372  3.1505      0 %\n#> copdYes                 6.8279 4.45458 1.9009 24.5255      0 %\n#> diabYes                 2.2397 0.18298 1.9083  2.6287      1 %\n#> OAOA:painmedYes         0.4925 0.16045 0.2275  1.0663     81 %\n#> age40-49 years:copdYes  0.3292 0.22863 0.0844  1.2841      0 %\n#> age50-59 years:copdYes  0.4792 0.32275 0.1280  1.7940      0 %\n#> age60-64 years:copdYes  0.3999 0.26244 0.1105  1.4473      0 %\n#> sexMale:copdYes         1.7812 0.55019 0.9723  3.2632      1 %\nsum.pooled\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"results\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"se\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"(lower\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"upper)\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"missInfo\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"0.003749307\",\"2\":\"0.0007213621\",\"3\":\"0.002521474\",\"4\":\"0.005575035\",\"5\":\"45 %\",\"_rn_\":\"(Intercept)\"},{\"1\":\"2.757917293\",\"2\":\"0.7473346089\",\"3\":\"1.477812451\",\"4\":\"5.146869475\",\"5\":\"76 %\",\"_rn_\":\"OAOA\"},{\"1\":\"2.185714763\",\"2\":\"0.2221826634\",\"3\":\"1.790880131\",\"4\":\"2.667598431\",\"5\":\"0 %\",\"_rn_\":\"age40-49 years\"},{\"1\":\"5.026129638\",\"2\":\"0.4978465465\",\"3\":\"4.139210342\",\"4\":\"6.103091424\",\"5\":\"1 %\",\"_rn_\":\"age50-59 years\"},{\"1\":\"7.375294204\",\"2\":\"0.7655628729\",\"3\":\"6.017543434\",\"4\":\"9.039397089\",\"5\":\"1 %\",\"_rn_\":\"age60-64 years\"},{\"1\":\"1.856448612\",\"2\":\"0.1018124982\",\"3\":\"1.667183736\",\"4\":\"2.067199538\",\"5\":\"4 %\",\"_rn_\":\"sexMale\"},{\"1\":\"0.645070326\",\"2\":\"0.0437838454\",\"3\":\"0.564718199\",\"4\":\"0.736855526\",\"5\":\"0 %\",\"_rn_\":\"income$30,000-$49,999\"},{\"1\":\"0.549521954\",\"2\":\"0.0362349439\",\"3\":\"0.482900282\",\"4\":\"0.625334856\",\"5\":\"0 %\",\"_rn_\":\"income$50,000-$79,999\"},{\"1\":\"0.505077756\",\"2\":\"0.0348872707\",\"3\":\"0.441126323\",\"4\":\"0.578300423\",\"5\":\"0 %\",\"_rn_\":\"income$80,000 or more\"},{\"1\":\"1.251794895\",\"2\":\"0.1322779501\",\"3\":\"1.017586096\",\"4\":\"1.539909463\",\"5\":\"2 %\",\"_rn_\":\"raceWhite\"},{\"1\":\"2.044265556\",\"2\":\"0.3374710393\",\"3\":\"1.362836413\",\"4\":\"3.066414738\",\"5\":\"86 %\",\"_rn_\":\"painmedYes\"},{\"1\":\"2.827278767\",\"2\":\"0.1561416172\",\"3\":\"2.537226797\",\"4\":\"3.150489043\",\"5\":\"0 %\",\"_rn_\":\"htYes\"},{\"1\":\"6.827932558\",\"2\":\"4.4545773482\",\"3\":\"1.900905879\",\"4\":\"24.525497836\",\"5\":\"0 %\",\"_rn_\":\"copdYes\"},{\"1\":\"2.239738282\",\"2\":\"0.1829779905\",\"3\":\"1.908343389\",\"4\":\"2.628681819\",\"5\":\"1 %\",\"_rn_\":\"diabYes\"},{\"1\":\"0.492544363\",\"2\":\"0.1604463252\",\"3\":\"0.227516338\",\"4\":\"1.066296826\",\"5\":\"81 %\",\"_rn_\":\"OAOA:painmedYes\"},{\"1\":\"0.329243929\",\"2\":\"0.2286318203\",\"3\":\"0.084416559\",\"4\":\"1.284126781\",\"5\":\"0 %\",\"_rn_\":\"age40-49 years:copdYes\"},{\"1\":\"0.479201771\",\"2\":\"0.3227546865\",\"3\":\"0.128000420\",\"4\":\"1.794012369\",\"5\":\"0 %\",\"_rn_\":\"age50-59 years:copdYes\"},{\"1\":\"0.399897335\",\"2\":\"0.2624397832\",\"3\":\"0.110491796\",\"4\":\"1.447328067\",\"5\":\"0 %\",\"_rn_\":\"age60-64 years:copdYes\"},{\"1\":\"1.781213579\",\"2\":\"0.5501901952\",\"3\":\"0.972261649\",\"4\":\"3.263238672\",\"5\":\"1 %\",\"_rn_\":\"sexMale:copdYes\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Estimating model performance (AUC and AL)\n\n#### Individual AUC estimates (with interactions)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ROCR)\nlibrary(WeightedROC)\nmodel.formula <- as.formula(\"I(CVD=='event') ~ OA + age + sex +\n                            income + race + painmed + ht +\n                            copd + diab + OA:painmed +\n                            age:copd + sex:copd\")\nAL.scalar <- AUC.scalar <- vector(\"list\", 5)\nfor (i in 1:5) {\n  analytic.i <- allImputations$imputations[[i]]\n  w.design <- svydesign(id=~1, weights=~weight,\n                        data=analytic.i)\n  model.fit <- svyglm(model.formula, design=w.design, family=quasibinomial)\n  auc <- svyROCw3(fit=model.fit,outcome=w.design$variables$CVD=='event', \n                  weight = w.design$variables$weight, plot = FALSE)\n  \n  AL <- AL.gof3(fit=model.fit, data = analytic.i, \n                   weight = \"weight\", \n                   psu = NULL, \n                   strata= NULL)\n  AL.scalar[[i]] <- AL\n  AUC.scalar[[i]] <- auc \n  cat(\"AUC calculated for data\", i, \"\\n\")\n}\n#> AUC calculated for data 1 \n#> AUC calculated for data 2 \n#> AUC calculated for data 3 \n#> AUC calculated for data 4 \n#> AUC calculated for data 5\nstr(AUC.scalar)\n#> List of 5\n#>  $ : num 0.8\n#>  $ : num 0.795\n#>  $ : num 0.798\n#>  $ : num 0.8\n#>  $ : num 0.794\nAL.scalar\n#> [[1]]\n#> [1] 0.01243738\n#> \n#> [[2]]\n#> [1] 0.5471927\n#> \n#> [[3]]\n#> [1] 0.13081\n#> \n#> [[4]]\n#> [1] 0.644286\n#> \n#> [[5]]\n#> [1] 0.6049137\n```\n:::\n\n\n#### Averaged estimates for AUC (with interactions)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summary of AUC\nmean(unlist(AUC.scalar))\n#> [1] 0.7973746\nsd(unlist(AUC.scalar))\n#> [1] 0.002688964\nround(range(unlist(AUC.scalar)),3)\n#> [1] 0.794 0.800\n# p-values (from AL) by majority\nsum(AL.scalar>0.05)\n#> [1] 4\n```\n:::\n\n\n### Model performance without interactions\n\n#### Individual AUC estimates / AL p-values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ROCR)\nlibrary(WeightedROC)\nAL.scalar <- AUC.scalar <- vector(\"list\", 5)\nmodel.formula <- as.formula(\"I(CVD=='event') ~ OA + age + sex +\n                            income + race + painmed + ht +\n                            copd + diab\")\nfor (i in 1:5) {\n  analytic.i <- allImputations$imputations[[i]]\n  w.design <- svydesign(id=~1, weights=~weight,\n                        data=analytic.i)\n  model.fit <- svyglm(model.formula, design=w.design, family=quasibinomial)\n  auc <- svyROCw3(fit=model.fit,outcome=w.design$variables$CVD=='event', \n                  weight = w.design$variables$weight, plot = FALSE)\n  \n  AL <- AL.gof3(fit=model.fit, data = analytic.i, \n                   weight = \"weight\", \n                   psu = NULL, \n                   strata= NULL)\n  AL.scalar[[i]] <- AL\n  AUC.scalar[[i]] <- auc \n  cat(\"AUC calculated for data\", i, \"\\n\")\n}\n#> AUC calculated for data 1 \n#> AUC calculated for data 2 \n#> AUC calculated for data 3 \n#> AUC calculated for data 4 \n#> AUC calculated for data 5\nstr(AUC.scalar)\n#> List of 5\n#>  $ : num 0.798\n#>  $ : num 0.794\n#>  $ : num 0.797\n#>  $ : num 0.798\n#>  $ : num 0.794\nAL.scalar\n#> [[1]]\n#> [1] 0.01839624\n#> \n#> [[2]]\n#> [1] 0.2836256\n#> \n#> [[3]]\n#> [1] 0.02439659\n#> \n#> [[4]]\n#> [1] 0.8333214\n#> \n#> [[5]]\n#> [1] 0.2050434\n```\n:::\n\n\n#### Averaged estimates for AUC / majority of AL p-values\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summary of AUC\nmean(unlist(AUC.scalar))\n#> [1] 0.7964061\nsd(unlist(AUC.scalar))\n#> [1] 0.002002636\nround(range(unlist(AUC.scalar)),3)\n#> [1] 0.794 0.798\n# p-values (from AL) by majority\nsum(AL.scalar>0.05)\n#> [1] 3\n```\n:::\n\n\n### Appendix\n\nUser-written `svyROCw3` and `AL.gof3` functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvyROCw3\n#> function(fit=fit7,outcome=analytic2$CVD==\"event\", weight = NULL,plot=FALSE){\n#>   if (is.null(weight)){ # require(ROCR)\n#>     prob <- predict(fit, type = \"response\")\n#>   pred <- prediction(as.vector(prob), outcome)\n#>   perf <- performance(pred, \"tpr\", \"fpr\")\n#>   auc <- performance(pred, measure = \"auc\")\n#>   auc <- auc@y.values[[1]]\n#>   if (plot == TRUE){\n#>     roc.data <- data.frame(fpr = unlist(perf@x.values), tpr = unlist(perf@y.values), \n#>       model = \"Logistic\")\n#>     with(data = roc.data,plot(fpr, tpr, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n#>      xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n#>      main = paste(\"AUC = \", round(auc,3))))\n#>   mtext(\"Unweighted ROC\")\n#>   abline(0,1, lty=2)\n#>   }\n#>   } else { # library(WeightedROC)\n#>     outcome <- as.numeric(outcome)\n#>   pred <- predict(fit, type = \"response\")\n#>   tp.fp <- WeightedROC(pred, outcome, weight)\n#>   auc <- WeightedAUC(tp.fp)\n#>   if (plot == TRUE){\n#>     with(data = tp.fp,plot(FPR, TPR, type=\"l\", xlim=c(0,1), ylim=c(0,1), lwd=1,\n#>      xlab=\"1 - specificity\", ylab=\"Sensitivity\",\n#>      main = paste(\"AUC = \", round(auc,3))))\n#>   abline(0,1, lty=2)\n#>   mtext(\"Weighted ROC\")\n#>   }\n#>   }\n#>   return(auc)\n#> }\n#> <bytecode: 0x00000224e3ffdcb8>\nAL.gof3\n#> function(fit=fit7, data = analytic2, weight = \"weight\", psu = \"psu\", \n#>                     strata= \"strata\"){\n#>   r <- residuals(fit, type=\"response\") \n#>   f<-fitted(fit) \n#>   breaks.g <- c(-Inf, quantile(f,  (1:9)/10), Inf)\n#>   breaks.g <- breaks.g + seq_along(breaks.g) * .Machine$double.eps\n#>   g<- cut(f, breaks.g)\n#>   data2g <- cbind(data,r,g)\n#>   if (is.null(psu)){\n#>     newdesign <- svydesign(id=~1,\n#>                          weights=as.formula(paste0(\"~\",weight)), \n#>                         data=data2g, nest = TRUE)\n#>   }\n#>   if (!is.null(psu)) {\n#>     newdesign <- svydesign(id=as.formula(paste0(\"~\",psu)),\n#>                          strata=as.formula(paste0(\"~\",strata)),\n#>                          weights=as.formula(paste0(\"~\",weight)), \n#>                         data=data2g, nest = TRUE)\n#>   }\n#>   decilemodel<- svyglm(r~g, design=newdesign) \n#>   res <- regTermTest(decilemodel, ~g)\n#>   return(as.numeric(res$p)) \n#> }\n#> <bytecode: 0x00000224e41a6d68>\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}