{
  "hash": "1300f2a80f81086bd61c33ecff7b3f48",
  "result": {
    "markdown": "## PSM with MI {.unnumbered}\n\nThe tutorial provides a detailed walkthrough of implementing Propensity Score Matching (PSM) combined with Multiple Imputation (MI) in a statistical analysis, focusing on handling missing data and mitigating bias in observational studies.\n\n\nThe initial chunk is dedicated to loading various R packages that will be utilized throughout the tutorial. These libraries provide functions and tools that facilitate data manipulation, statistical modeling, visualization, and more.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/setup_0a889730c6c504f532a0f187f19bf09a'}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(MatchIt)\nrequire(tableone)\nrequire(survey)\nrequire(cobalt)\nrequire(Publish)\nrequire(optmatch)\nrequire(data.table)\nrequire(jtools)\nrequire(ggstance)\nrequire(DataExplorer)\nrequire(mitools)\nlibrary(kableExtra)\nlibrary(mice)\n```\n:::\n\n\n\n\n### Problem Statement\n\n#### Logistic regression\n\n-   Perform multiple imputation to deal with missing values; with 3 imputed datasets, 5 iterations,\n\n-   fit **survey featured logistic regression** in all of the 3 imputed datasets, and\n\n-   obtain the pooled OR (adjusted) and the corresponding 95% confidence intervals.\n\n-   Hints\n\n    -   Use the **covariates** (listed below) in the imputation model.\n    -   **Imputation model covariates** can be different than the original analysis covariates. You are encouraged to use variables in the imputation model that can be predictive of the variables with missing observations. In this example, we use the strata variable as an **auxiliary variable** in the imputation model, but not the survey weight or PSU variable.\n    -   Also the **imputation model specification** can be modified. For example, we use **pmm** method for bmi in the imputation model.\n    -   Remove any subject ID variable from the imputation model, if created in an intermediate step. Indeed ID variables should not be in the imputation model, if they are **not predictive** of the variables with missing observations.\n\n::: callout-tip\n**Predictive Mean Matching**:\n\nThe \"Predictive Mean Matching\" (PMM) method in Multiple Imputation (MI) is a widely used technique to handle missing data, particularly well-suited for continuous variables. PMM operates by first creating a predictive model for the variable with missing data, using observed values from other variables in the dataset. For each missing value, PMM identifies a set of observed values with predicted scores that are close to the predicted score for the missing value, derived from the predictive model. Then, instead of imputing a predicted score directly, PMM randomly selects one of the observed values from this set and assigns it as the imputed value. This method retains the original distribution of the imputed variable since it only uses observed values for imputation, and it also tends to preserve relationships between variables. PMM is particularly advantageous when the normality assumption of the imputed variable is questionable, providing a robust and practical approach to managing missing data in various research contexts.\n::: \n\n\n#### Propensity score matching (Zanutto, 2006)\n\n-   Use the **propensity score matching as per Zanutto E. L. (2006)**'s recommendation in all of the imputed datasets.\n-   Report the pooled OR estimates (adjusted) and corresponding 95% confidence intervals (adjusted OR).\n\n### Data and variables\n\n#### Analytic data\n\nThe analytic dataset is saved as NHANES17.RData.\n\n#### Variables\n\nWe are primarily interested in outcome **diabetes** and exposure **whether born in the US (born)**.\n\nVariables under consideration:\n\n-   survey features\n    -   PSU\n    -   strata\n    -   survey weight\n-   Covariates\n    -   race\n    -   age\n    -   marriage\n    -   education\n    -   gender\n    -   BMI\n    -   systolic blood pressure\n\n#### Pre-processing\n\nThe data is loaded and variables of interest are identified. \n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/data_c1f46616deae07a6c5aee375d040122d'}\n\n```{.r .cell-code}\nload(file=\"Data/propensityscore/NHANES17.RData\") # read data\nls()\n#> [1] \"analytic\"           \"analytic.with.miss\" \"has_annotations\"\ndim(analytic.with.miss)\n#> [1] 9254   34\nvars <- c(\"ID\", # ID\n          \"psu\", \"strata\", \"weight\", # Survey features \n          \"race\", \"age\", \"married\",\"education\",\"gender\",\"bmi\",\"systolicBP\", # Covariates\n          \"born\", # Exposure\n          \"diabetes\") # Outcome\n```\n:::\n\n\n\n\n#### Subset the dataset\n\nThe dataset is then subsetted to retain only the relevant variables, ensuring that subsequent analyses are focused and computationally efficient. \n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/subset_ec7610f191a8a98724d6cd33907d2bd1'}\n\n```{.r .cell-code}\ndat.with.miss <- analytic.with.miss[,vars]\ndim(analytic.with.miss)\n#> [1] 9254   34\n```\n:::\n\n\n\n\n#### Inspect weights\n\n\nThe weights of the observations are inspected and adjusted to avoid issues in subsequent analyses.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/weight_7466037c873a1fc1685aaa062d51a6b7'}\n\n```{.r .cell-code}\nsummary(dat.with.miss$weight)\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>       0   12347   21060   34671   37562  419763\n# weight = 0 would create problem in the analysis\n# ad-hoc solution to 0 weight problem\ndat.with.miss$weight[dat.with.miss$weight == 0] <- 0.00000001\n```\n:::\n\n\n\n\n#### Recode the exposure variable\n\nThe exposure variable is recoded for clarity and ease of interpretation in results.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/recode_4b3e4601442b7c7d8112f177ccf69d96'}\n\n```{.r .cell-code}\ndat.with.miss$born <- car::recode(dat.with.miss$born, \nrecodes = \" 'Born in 50 US states or Washingt' = \n'Born in US'; 'Others' = 'Others'; else = NA \" )\ndat.with.miss$born <- factor(dat.with.miss$born, levels = c(\"Born in US\", \"Others\"))\n```\n:::\n\n\n\n\n#### variable types\n\nVariable types are set, ensuring that each variable is treated appropriately in the analyses.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/vartype_5c4a6336e890bb7d8f1d5fd6ea435895'}\n\n```{.r .cell-code}\nfactor.names <- c(\"race\", \"married\", \"education\", \"gender\", \"diabetes\")\ndat.with.miss[,factor.names] <- lapply(dat.with.miss[,factor.names], factor)\n```\n:::\n\n\n\n\n#### Inspect extent of missing data problem\n\nA visualization is generated to explore the extent and pattern of missing data in the dataset, which informs the strategy for handling them.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/plot_ca07068247e15d512a4553a2f6af66b6'}\n\n```{.r .cell-code}\nrequire(DataExplorer)\nplot_missing(dat.with.miss)\n```\n\n::: {.cell-output-display}\n![](propensityscore5_files/figure-pdf/plot-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\nNote that, **multiple imputation then delete** (MID) approach can be applied if the outcome had some missing values. Due to the small number of missingness, MICE may not impute the outcomes BTW.\n\n::: callout-tip\n**Multiple imputation then delete (MID)**:\n\nMID is a specific approach used in the context of multiple imputation (MI) when dealing with missing outcome data. All missing values, including those in the outcome variable, are imputed to create several complete datasets. In subsequent analyses, the imputed values for the outcome variable are deleted, so that only observed outcome values are analyzed. Each dataset (with observed outcome values and imputed predictor values) is analyzed separately, and results are pooled to provide a single estimate.\n::: \n\n### Logistic regression\n\n#### Initialization\n\nThe MI process is initialized, setting up the framework for subsequent imputations.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp0_4bbb06f1ffa6c5cfd9424f7c83ed3aa0'}\n\n```{.r .cell-code}\nimputation <- mice(data = dat.with.miss, maxit = 0, print = FALSE)\n```\n:::\n\n\n\n\n#### Setting imputation model covariates\n\nThe predictor matrix is adjusted to specify which variables will be used to predict missing values in the imputation model. Setting strata as auxiliary variable:\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp1_62093b1d43c014a251a85a1f5aa3d178'}\n\n```{.r .cell-code}\npred <- imputation$pred\npred\n#>            ID psu strata weight race age married education gender bmi\n#> ID          0   1      1      1    1   1       1         1      1   1\n#> psu         1   0      1      1    1   1       1         1      1   1\n#> strata      1   1      0      1    1   1       1         1      1   1\n#> weight      1   1      1      0    1   1       1         1      1   1\n#> race        1   1      1      1    0   1       1         1      1   1\n#> age         1   1      1      1    1   0       1         1      1   1\n#> married     1   1      1      1    1   1       0         1      1   1\n#> education   1   1      1      1    1   1       1         0      1   1\n#> gender      1   1      1      1    1   1       1         1      0   1\n#> bmi         1   1      1      1    1   1       1         1      1   0\n#> systolicBP  1   1      1      1    1   1       1         1      1   1\n#> born        1   1      1      1    1   1       1         1      1   1\n#> diabetes    1   1      1      1    1   1       1         1      1   1\n#>            systolicBP born diabetes\n#> ID                  1    1        1\n#> psu                 1    1        1\n#> strata              1    1        1\n#> weight              1    1        1\n#> race                1    1        1\n#> age                 1    1        1\n#> married             1    1        1\n#> education           1    1        1\n#> gender              1    1        1\n#> bmi                 1    1        1\n#> systolicBP          0    1        1\n#> born                1    0        1\n#> diabetes            1    1        0\npred[,\"ID\"] <- pred[\"ID\",] <- 0\npred[,\"psu\"] <- pred[\"psu\",] <- 0\npred[,\"weight\"] <- pred[\"weight\",] <- 0\npred[\"strata\",] <- 0\npred\n#>            ID psu strata weight race age married education gender bmi\n#> ID          0   0      0      0    0   0       0         0      0   0\n#> psu         0   0      0      0    0   0       0         0      0   0\n#> strata      0   0      0      0    0   0       0         0      0   0\n#> weight      0   0      0      0    0   0       0         0      0   0\n#> race        0   0      1      0    0   1       1         1      1   1\n#> age         0   0      1      0    1   0       1         1      1   1\n#> married     0   0      1      0    1   1       0         1      1   1\n#> education   0   0      1      0    1   1       1         0      1   1\n#> gender      0   0      1      0    1   1       1         1      0   1\n#> bmi         0   0      1      0    1   1       1         1      1   0\n#> systolicBP  0   0      1      0    1   1       1         1      1   1\n#> born        0   0      1      0    1   1       1         1      1   1\n#> diabetes    0   0      1      0    1   1       1         1      1   1\n#>            systolicBP born diabetes\n#> ID                  0    0        0\n#> psu                 0    0        0\n#> strata              0    0        0\n#> weight              0    0        0\n#> race                1    1        1\n#> age                 1    1        1\n#> married             1    1        1\n#> education           1    1        1\n#> gender              1    1        1\n#> bmi                 1    1        1\n#> systolicBP          0    1        1\n#> born                1    0        1\n#> diabetes            1    1        0\n```\n:::\n\n\n\n\n#### Setting imputation model specification\n\nThe method for imputing a particular variable is specified (e.g., using Predictive Mean Matching). Here, we add `pmm` for bmi:\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp2_a48135ef0ca313649904a368f1bcf7d7'}\n\n```{.r .cell-code}\nmeth <- imputation$meth\nmeth[\"bmi\"] <- \"pmm\"\n```\n:::\n\n\n\n\n#### Impute incomplete data\n\nMultiple datasets are imputed, each providing a different \"guess\" at the missing values, based on observed data. We are imputing m = 3 times.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp3_e379c6ce426bbb1f1ed5eaa1f45c71e4'}\n\n```{.r .cell-code}\nimputation <- mice(data = dat.with.miss, \n                   seed = 123, \n                   predictorMatrix = pred,\n                   method = meth, \n                   m = 3, \n                   maxit = 5, \n                   print = FALSE)\nimpdata <- mice::complete(imputation, action=\"long\")\nimpdata$.id <- NULL\nm <- 3\nset.seed(123)\nallImputations <-  imputationList(lapply(1:m, \n                                         function(n)\n                                           subset(impdata, \n                                                  subset=.imp==n)))\nstr(allImputations)\n#> List of 2\n#>  $ imputations:List of 3\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp      : int [1:9254] 1 1 1 1 1 1 1 1 1 1 ...\n#>   .. ..$ ID        : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ psu       : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata    : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ weight    : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ race      : Factor w/ 4 levels \"Black\",\"Hispanic\",..: 3 4 1 3 3 3 1 4 3 2 ...\n#>   .. ..$ age       : int [1:9254] 57 46 66 50 23 66 75 49 56 36 ...\n#>   .. ..$ married   : Factor w/ 3 levels \"Married\",\"Never.married\",..: 1 1 3 1 2 1 3 3 1 1 ...\n#>   .. ..$ education : Factor w/ 3 levels \"College\",\"High.School\",..: 1 2 2 1 1 3 1 2 1 3 ...\n#>   .. ..$ gender    : Factor w/ 2 levels \"Female\",\"Male\": 1 2 1 2 2 1 1 1 2 2 ...\n#>   .. ..$ bmi       : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 31.2 21.3 19.7 ...\n#>   .. ..$ systolicBP: int [1:9254] 108 96 200 112 128 124 120 122 108 112 ...\n#>   .. ..$ born      : Factor w/ 2 levels \"Born in US\",\"Others\": 1 1 1 1 1 2 1 1 2 2 ...\n#>   .. ..$ diabetes  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 2 1 1 1 1 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp      : int [1:9254] 2 2 2 2 2 2 2 2 2 2 ...\n#>   .. ..$ ID        : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ psu       : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata    : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ weight    : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ race      : Factor w/ 4 levels \"Black\",\"Hispanic\",..: 3 4 1 3 3 3 1 4 3 2 ...\n#>   .. ..$ age       : int [1:9254] 24 49 66 32 34 66 75 80 56 28 ...\n#>   .. ..$ married   : Factor w/ 3 levels \"Married\",\"Never.married\",..: 2 1 3 2 1 1 3 3 1 2 ...\n#>   .. ..$ education : Factor w/ 3 levels \"College\",\"High.School\",..: 1 1 2 1 2 3 1 1 1 1 ...\n#>   .. ..$ gender    : Factor w/ 2 levels \"Female\",\"Male\": 1 2 1 2 2 1 1 1 2 2 ...\n#>   .. ..$ bmi       : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 24.9 21.3 19.7 ...\n#>   .. ..$ systolicBP: int [1:9254] 102 104 136 112 128 120 120 120 108 112 ...\n#>   .. ..$ born      : Factor w/ 2 levels \"Born in US\",\"Others\": 1 1 1 1 1 2 1 1 2 2 ...\n#>   .. ..$ diabetes  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 2 1 1 1 1 ...\n#>   ..$ :'data.frame':\t9254 obs. of  14 variables:\n#>   .. ..$ .imp      : int [1:9254] 3 3 3 3 3 3 3 3 3 3 ...\n#>   .. ..$ ID        : int [1:9254] 93703 93704 93705 93706 93707 93708 93709 93710 93711 93712 ...\n#>   .. ..$ psu       : Factor w/ 2 levels \"1\",\"2\": 2 1 2 2 1 2 1 1 2 2 ...\n#>   .. ..$ strata    : Factor w/ 15 levels \"134\",\"135\",\"136\",..: 12 10 12 1 5 5 3 1 1 14 ...\n#>   .. ..$ weight    : num [1:9254] 8540 42567 8338 8723 7065 ...\n#>   .. ..$ race      : Factor w/ 4 levels \"Black\",\"Hispanic\",..: 3 4 1 3 3 3 1 4 3 2 ...\n#>   .. ..$ age       : int [1:9254] 47 71 66 71 45 66 75 37 56 47 ...\n#>   .. ..$ married   : Factor w/ 3 levels \"Married\",\"Never.married\",..: 1 1 3 1 1 1 3 1 1 1 ...\n#>   .. ..$ education : Factor w/ 3 levels \"College\",\"High.School\",..: 1 1 2 1 1 3 1 1 1 2 ...\n#>   .. ..$ gender    : Factor w/ 2 levels \"Female\",\"Male\": 1 2 1 2 2 1 1 1 2 2 ...\n#>   .. ..$ bmi       : num [1:9254] 17.5 15.7 31.7 21.5 18.1 23.7 38.9 15.9 21.3 19.7 ...\n#>   .. ..$ systolicBP: int [1:9254] 100 114 162 112 128 166 120 116 108 112 ...\n#>   .. ..$ born      : Factor w/ 2 levels \"Born in US\",\"Others\": 1 1 1 1 1 2 1 1 2 2 ...\n#>   .. ..$ diabetes  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 2 1 1 1 1 ...\n#>  $ call       : language imputationList(lapply(1:m, function(n) subset(impdata, subset = .imp ==      n)))\n#>  - attr(*, \"class\")= chr \"imputationList\"\n```\n:::\n\n\n\n\n#### Design\n\nA survey design object is created, ensuring that subsequent analyses appropriately account for the survey design.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp4_cc7a27e31105de59f711f862c330b5bc'}\n\n```{.r .cell-code}\nw.design <- svydesign(ids = ~psu, weights = ~weight, strata = ~strata,\n                      data = allImputations, nest = TRUE)\n```\n:::\n\n\n\n\n#### Survey data analysis\n\nA logistic regression model is fitted to each imputed dataset.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp5_cfd9c895a59f333043a54327a061dddc'}\n\n```{.r .cell-code}\nmodel.formula <- as.formula(I(diabetes == 'Yes') ~ \n                              born + race + age + married + \n                              education + gender + bmi + systolicBP)\nfit.from.logistic <- with(w.design, svyglm(model.formula, family = binomial(\"logit\")))\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n\n#> Warning in eval(family$initialize): non-integer #successes in a binomial glm!\n```\n:::\n\n\n\n\n#### Pooled estimates\n\nResults from models across all imputed datasets are pooled to provide a single estimate, accounting for the uncertainty due to missing data.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp6_10cd91b4cc3856d8d01676741f1a78d4'}\n\n```{.r .cell-code}\npooled.estimates <- MIcombine(fit.from.logistic)\nsummary(pooled.estimates, digits = 2, logeffect=TRUE)\n#> Multiple imputation results:\n#>       with(w.design, svyglm(model.formula, family = binomial(\"logit\")))\n#>       MIcombine.default(fit.from.logistic)\n#>                           results      se  (lower  upper) missInfo\n#> (Intercept)               0.00013 7.5e-05 3.9e-05 0.00041     22 %\n#> bornOthers                1.44729 2.7e-01 1.0e+00 2.07384      0 %\n#> raceHispanic              0.81619 1.1e-01 6.3e-01 1.05882      0 %\n#> raceOther                 1.43817 2.6e-01 1.0e+00 2.04954      3 %\n#> raceWhite                 0.86411 1.3e-01 6.5e-01 1.14994      3 %\n#> age                       1.06157 3.6e-03 1.1e+00 1.06874      6 %\n#> marriedNever.married      0.83242 1.6e-01 5.7e-01 1.20809     10 %\n#> marriedPreviously.married 0.88401 1.1e-01 6.8e-01 1.14163     11 %\n#> educationHigh.School      1.16331 1.9e-01 8.4e-01 1.60803      0 %\n#> educationSchool           1.41943 2.4e-01 1.0e+00 1.98397      7 %\n#> genderMale                1.53458 1.8e-01 1.2e+00 1.94217      3 %\n#> bmi                       1.10597 1.2e-02 1.1e+00 1.12956      1 %\n#> systolicBP                1.00325 3.2e-03 1.0e+00 1.01001     39 %\nOR <- round(exp(pooled.estimates$coefficients), 2) \nOR <- as.data.frame(OR)\nCI <- round(exp(confint(pooled.estimates)), 2)\nOR <- cbind(OR, CI)\nOR[2,]\n#>              OR 2.5 % 97.5 %\n#> bornOthers 1.45  1.01   2.07\n```\n:::\n\n\n\n\n### Propensity score matching analysis\n\n#### Initialization\n\nThe MI process is re-initialized to facilitate PSM in the context of MI.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp7_dbf8de5223a423f2d3c13444ac68c8a2'}\n\n```{.r .cell-code}\nimputation <- mice(data = dat.with.miss, maxit = 0, print = FALSE)\nimpdata <- mice::complete(imputation, action=\"long\")\nm <- 3\nallImputations <- imputationList(lapply(1:m, \n                                        function(n) \n                                          subset(impdata, \n                                                 subset=.imp==n)))\n```\n:::\n\n\n\n\n#### Zanutto E. L. (2006) under multiple imputation\n\n::: callout-tip\nAn iterative process is performed within each imputed dataset, which involves:\n\n1. Estimating propensity scores.\n2. Matching treated and untreated subjects based on these scores.\n3. Extracting matched data and checking the balance of covariates across matched groups.\n4. Fitting outcome models to the survey weighted matched data and estimating treatment effects.\n::: \n\nNotice that we are performing multi-step process within MI\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp8_08fc3bd9edf8aaa8005b47e2fbff58b1'}\n\n```{.r .cell-code}\nmatch.statm <- SMDm <- tab1m <- vector(\"list\", m) \nfit.from.PS <- vector(\"list\", m)\n\nfor (i in 1:m) {\n  analytic.i <- allImputations$imputations[[i]]\n  # Rename the weight variable into survey.weight\n  names(analytic.i)[names(analytic.i) == \"weight\"] <- \"survey.weight\"\n  \n  # Specify the PS model to estimate propensity scores\n  ps.formula <- as.formula(I(born==\"Others\") ~ \n                             race + age + married + education + \n                             gender + bmi + systolicBP)\n\n  # Propensity scores\n  ps.fit <- glm(ps.formula, data = analytic.i, family = binomial(\"logit\"))\n  analytic.i$PS <- fitted(ps.fit)\n  \n  # Match exposed and unexposed subjects \n  set.seed(123)\n  match.obj <- matchit(ps.formula, data = analytic.i, \n                       distance = analytic.i$PS, \n                       method = \"nearest\", \n                       replace = FALSE,\n                       caliper = 0.2, \n                       ratio = 1)\n  match.statm[[i]] <- match.obj\n  analytic.i$PS <- match.obj$distance\n  \n  # Extract matched data\n  matched.data <- match.data(match.obj) \n  \n  # Balance checking\n  cov <- c(\"race\", \"age\", \"married\", \"education\", \"gender\", \"bmi\", \"systolicBP\")\n  \n  tab1m[[i]] <- CreateTableOne(strata = \"born\", \n                               vars = cov, data = matched.data, \n                               test = FALSE, smd = TRUE)\n  SMDm[[i]] <- ExtractSmd(tab1m[[i]])\n  \n  # Setup the design with survey features\n  analytic.i$matched <- 0\n  analytic.i$matched[analytic.i$ID %in% matched.data$ID] <- 1\n  \n  # Survey setup for full data\n  w.design0 <- svydesign(strata = ~strata, id = ~psu, weights = ~survey.weight, \n                         data = analytic.i, nest = TRUE)\n  \n  # Subset matched data\n  w.design.m <- subset(w.design0, matched == 1)\n  \n  # Outcome model (double adjustment)\n  out.formula <- as.formula(I(diabetes == \"Yes\") ~ \n                              born + race + age + married + \n                              education + gender + bmi + systolicBP)\n  fit.from.PS[[i]] <- svyglm(out.formula, design = w.design.m, \n                     family = quasibinomial(\"logit\"))\n}\n```\n:::\n\n\n\n\n#### Check matched data\n\nThe matched data is inspected to ensure that matching was successful and appropriate.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp9_77695e3f908eb3ef45e39df674f5ee8f'}\n\n```{.r .cell-code}\nmatch.statm\n#> [[1]]\n#> A matchit object\n#>  - method: 1:1 nearest neighbor matching without replacement\n#>  - distance: User-defined [caliper]\n#>  - caliper: <distance> (0.044)\n#>  - number of obs.: 9254 (original), 3590 (matched)\n#>  - target estimand: ATT\n#>  - covariates: race, age, married, education, gender, bmi, systolicBP\n#> \n#> [[2]]\n#> A matchit object\n#>  - method: 1:1 nearest neighbor matching without replacement\n#>  - distance: User-defined [caliper]\n#>  - caliper: <distance> (0.044)\n#>  - number of obs.: 9254 (original), 3598 (matched)\n#>  - target estimand: ATT\n#>  - covariates: race, age, married, education, gender, bmi, systolicBP\n#> \n#> [[3]]\n#> A matchit object\n#>  - method: 1:1 nearest neighbor matching without replacement\n#>  - distance: User-defined [caliper]\n#>  - caliper: <distance> (0.044)\n#>  - number of obs.: 9254 (original), 3594 (matched)\n#>  - target estimand: ATT\n#>  - covariates: race, age, married, education, gender, bmi, systolicBP\n```\n:::\n\n\n\n\n#### Check balance in matched data\n\nThe balance of covariates across matched groups is assessed to ensure that matching has successfully reduced bias.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp10_5b988b51a1d31e20470c136df4574f1d'}\n\n```{.r .cell-code}\nSMDm\n#> [[1]]\n#>                 1 vs 2\n#> race       0.028883793\n#> age        0.033614763\n#> married    0.007318561\n#> education  0.117536503\n#> gender     0.040145831\n#> bmi        0.043350560\n#> systolicBP 0.054549772\n#> \n#> [[2]]\n#>                 1 vs 2\n#> race       0.019901420\n#> age        0.016267050\n#> married    0.017196043\n#> education  0.128811588\n#> gender     0.003338016\n#> bmi        0.057014434\n#> systolicBP 0.071553721\n#> \n#> [[3]]\n#>                1 vs 2\n#> race       0.04490482\n#> age        0.01959377\n#> married    0.03687394\n#> education  0.13301810\n#> gender     0.01225625\n#> bmi        0.03697878\n#> systolicBP 0.10025529\n```\n:::\n\n\n\n\n### Pooled estimate\n\nFinally, the treatment effect estimates from the matched analyses across all imputed datasets are pooled to provide a single, overall estimate, ensuring that the final result appropriately accounts for the uncertainty due to both the matching process and the imputation of missing data.\n\n\n\n\n::: {.cell hash='propensityscore5_cache/pdf/imp11_958aec80333c3de8a6f85af6689cc493'}\n\n```{.r .cell-code}\npooled.estimates <- MIcombine(fit.from.PS)\nsummary(pooled.estimates, digits = 2, logeffect=TRUE)\n#> Multiple imputation results:\n#>       MIcombine.default(fit.from.PS)\n#>                           results      se  (lower  upper) missInfo\n#> (Intercept)               8.9e-05 4.9e-05 0.00003 0.00026      8 %\n#> bornOthers                2.0e+00 3.1e-01 1.47719 2.73325     16 %\n#> raceHispanic              7.0e-01 1.7e-01 0.42593 1.15504     27 %\n#> raceOther                 1.4e+00 4.1e-01 0.77209 2.53278     26 %\n#> raceWhite                 4.9e-01 2.7e-01 0.15853 1.52308     28 %\n#> age                       1.1e+00 4.6e-03 1.04472 1.06298      8 %\n#> marriedNever.married      5.9e-01 2.0e-01 0.28824 1.18926     38 %\n#> marriedPreviously.married 1.0e+00 2.5e-01 0.62417 1.64438     11 %\n#> educationHigh.School      1.4e+00 3.0e-01 0.89403 2.10852      2 %\n#> educationSchool           1.3e+00 3.4e-01 0.81042 2.21438      7 %\n#> genderMale                1.3e+00 2.3e-01 0.86695 1.83880     31 %\n#> bmi                       1.1e+00 1.1e-02 1.08062 1.12285      5 %\n#> systolicBP                1.0e+00 3.0e-03 1.00314 1.01494      3 %\nOR <- round(exp(pooled.estimates$coefficients), 2) \nOR <- as.data.frame(OR)\nCI <- round(exp(confint(pooled.estimates)), 2)\nOR <- cbind(OR, CI)\nOR[2,]\n#>              OR 2.5 % 97.5 %\n#> bornOthers 2.01  1.48   2.72\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}