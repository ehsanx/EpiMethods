{
  "hash": "38b3a8daa573e8ff29647652ad06fcb4",
  "result": {
    "markdown": "## Estimating Causal Effects {.unnumbered}\n\nThis tutorial walks through a hypothetical regression-based Monte Carlo simulation example. Specifically, we simulate many datasets under a known data-generating mechanism where the true treatment effect is 0.7. We then estimate the average treatment effect (ATE) and compare the estimated coefficients from generalized linear models (`glm(Y ~ A + L)`) with the true treatment effect. Finally, we use the `rsimsum` package to assess estimator performance based on simulation-based performance measures introduced previously.\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-1_f9ab45ee9fd48836fec79582d9b87dd8'}\n\n```{.r .cell-code}\n# Load Required Packages\nrequire(ggplot2)\nrequire(simcausal)\nrequire(rsimsum)\nrequire(knitr)\n```\n:::\n\n\n------------------------------------------------------------------------\n\nWe are interested in exploring cholesterol levels, and examining how diabetes medication intake affects them while accounting for the potential confounding effect of age.\n\n|                        |                                 |\n|------------------------|---------------------------------|\n| $Y$ : Outcome          | Cholesterol levels (continuous) |\n| $A$ : Exposure         | Diabetes Medication             |\n| $L$ : Known Confounder | Age (continuous)                |\n\n-   Confounder $L$ (age) is continuous and follows a normal distribution\n\n    -   $L \\sim N(\\mu = 10, \\sigma = 1)$\n\n-   Exposure $A$ (diabetes medication) is binary (0/1) and follows a logit distribution:\n\n    -   $\\text{Logit} P(A = 1) \\sim 0.4L$\n\n-   Outcome $Y$ (cholesterol levels) is continuous and follows a normal distribution:\n\n    -   $Y \\sim N(\\mu = 3L + \\theta A, \\sigma = 1)$\n\nWhere the true parameter for $\\theta = 0.7$, indicating that, while adjusting for age, the true difference in cholesterol levels between individuals taking diabetes medication and those who are not is 0.7.\n\nIn this example, age is considered a confounder. This is because it likely influences both the exposure (diabetes medication intake), and the outcome (cholesterol levels). The risk for developing Type 2 Diabetes increases with age, which increases the likelihood of taking diabetes medication [@diabetes]. Additionally, cholesterol levels tend to increase due to changes in metabolism, increasing the risk for developing high blood cholesterol levels [@cholesterol].\n\nThe relationship can be illustrated with a DAG using the `simcausal` package [@simcausal].\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-2_077b3ec3a6958302304e7776a8d3a408'}\n\n```{.r .cell-code}\ntheta <- 0.7\n\n#Initialize the DAG object\nD <- DAG.empty()\n#Adding the \"nodes\" to the DAG object\nD <- D +\n  node(\"L\", distr = \"rnorm\", mean = 10, sd = 1) +\n  node(\"A\", distr = \"rbern\", prob = plogis(0.4*L)) +\n  node(\"Y\", distr = \"rnorm\", mean = 3 * L + theta * A, sd = 1)\n\n#Creating the DAG with the designated nodes\nDset <- set.DAG(D)\n\n#Plot the DAG\nplotDAG(Dset, xjitter = 0.1, yjitter = 0.9, \n        edge_attrs = list(width = 0.5, arrow.width = 0.4, arrow.size = 1.5), \n        vertex_attrs = list(size = 10, label.cex = 1.8))\n```\n\n::: {.cell-output-display}\n![](Simulation3_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Dataset Generation\n\nBased on the above structural causal model, we simulate a hypothetical dataset where each observation represents an individual with a given age ($L$), diabetes medication status ($A$), and cholesterol level ($Y$). We generate counterfactual cholesterol levels under both treatment ($A=1$, denoted as $Y_1$) and no treatment ($A=0$, denoted as $Y_0$), enabling us to estimate causal effects. Diabetes medication status is randomly assigned to individuals, and their cholesterol level will be assigned $Y=Y_1$ if cholesterol is treated, and $Y=Y_0$ if cholesterol is not treated.\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-3_a9856770ac8e76fe08f82507820adf74'}\n\n```{.r .cell-code}\n# Creating a function for generating data based on the 3 variables, L, A, and Y.\n\nsimulate_data <- function(n = 10, seedx = 123){\n  require(simcausal)\n  set.seed(seedx)\n  D <- DAG.empty()\n  D <- D +\n    node(\"L\", distr = \"rnorm\", mean = 10, sd = 1) +\n    node(\"A\", distr = \"rbern\", prob = plogis(0.4*L)) +\n    node(\"Y\", distr = \"rnorm\", mean = 3 * L + 0.7 * A, sd = 1)\n  Dset <- suppressMessages(set.DAG(D))\n  \n  # Creating the diabetes medication intervention, but not adding more nodes.\n  # Under A1, A will always be 1 (Assigned the intervention)\n  # Under A0, A will always be 0 (Not assigned the intervention).\n  \n  A1 <- node(\"A\", distr = \"rbern\", prob = 1)\n  Dset <- Dset + action(\"A1\", nodes = A1)\n  A0 <- node(\"A\", distr = \"rbern\", prob = 0)\n  Dset <- Dset + action(\"A0\", nodes = A0)\n  \n  # Simulate data based on on the intervention \n  # (Simulate both L and Y for both interventions\n  # (If Diabetes Medication is Given (A = 1) or if is not (A = 0)))\n  \n  Cdat <- suppressMessages(sim(DAG = Dset, actions = c(\"A1\", \"A0\"), n = n, \n                               rndseed = 123))\n  \n  # Round and bind the data to one dataframe\n  generated.data <- round(cbind(Cdat$A1[c(\"ID\", \"L\", \"Y\")],Cdat$A0[c(\"Y\")]),2)\n  names(generated.data) <- c(\"ID\", \"L\", \"Y1\", \"Y0\")\n  \n  # Order data by Age (L) and ID\n  generated.data <- generated.data[order(generated.data$L, generated.data$ID),]\n  \n  # Randomly Assign data either A = 0 or A = 1\n  generated.data$A <- sample(c(0,1),n, replace = TRUE)\n  \n  # If A=0, Y0 is assigned, else Y1 is assigned\n  # Y1 is cholesterol if treated (A=1), Y0 is cholesterol if not treated (A=0) \n  # and Y is the observed cholesterol based on assigned treatment\n  generated.data$Y <- ifelse(generated.data$A==0, generated.data$Y0, generated.data$Y1)\n  \n  # Save and return both the complete (observed) and counterfactual datasets.\n  #\n  # The counterfactual dataset contains cholesterol levels \n  # under both medication statuses.\n  #\n  # The observed dataset contains only the cholesterol level \n  # corresponding to the assigned medication status.\n  \n  counterfactual.dataset<- generated.data[order(generated.data$ID) , ][c(\"ID\",\"L\",\"A\",\"Y1\",\"Y0\")]\n  observed.dataset<- generated.data[order(generated.data$ID) , ][c(\"ID\",\"L\",\"A\",\"Y\")]\n  return(list(counterfactual=counterfactual.dataset,\n              observed=observed.dataset))\n  \n}\n```\n:::\n\n\nUsing this function, let's generate 10 random data points.\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-4_77a540c75433c53b255a0db9bbd013c9'}\n\n```{.r .cell-code}\nresult.data <- simulate_data(n=10)  \nresult.data$observed\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"L\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"9.44\",\"3\":\"0\",\"4\":\"29.54\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"9.77\",\"3\":\"1\",\"4\":\"30.37\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"11.56\",\"3\":\"1\",\"4\":\"35.78\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"10.07\",\"3\":\"1\",\"4\":\"31.02\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"10.13\",\"3\":\"0\",\"4\":\"29.83\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"11.72\",\"3\":\"1\",\"4\":\"37.63\",\"_rn_\":\"6\"},{\"1\":\"7\",\"2\":\"10.46\",\"3\":\"0\",\"4\":\"31.88\",\"_rn_\":\"7\"},{\"1\":\"8\",\"2\":\"8.73\",\"3\":\"1\",\"4\":\"24.94\",\"_rn_\":\"8\"},{\"1\":\"9\",\"2\":\"9.31\",\"3\":\"0\",\"4\":\"28.64\",\"_rn_\":\"9\"},{\"1\":\"10\",\"2\":\"9.55\",\"3\":\"0\",\"4\":\"28.19\",\"_rn_\":\"10\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nLet's also observe the counterfactual dataset, and see how cholesterol levels differ based on medication status.\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-5_3da054eaea8442925b1d2d34de763140'}\n\n```{.r .cell-code}\nresult.data$counterfactual$TE <- result.data$counterfactual$Y1- result.data$counterfactual$Y0\nresult.data$counterfactual\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"ID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"L\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"A\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y1\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Y0\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"TE\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"9.44\",\"3\":\"0\",\"4\":\"30.24\",\"5\":\"29.54\",\"6\":\"0.7\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"9.77\",\"3\":\"1\",\"4\":\"30.37\",\"5\":\"29.67\",\"6\":\"0.7\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"11.56\",\"3\":\"1\",\"4\":\"35.78\",\"5\":\"35.08\",\"6\":\"0.7\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"10.07\",\"3\":\"1\",\"4\":\"31.02\",\"5\":\"30.32\",\"6\":\"0.7\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"10.13\",\"3\":\"0\",\"4\":\"30.53\",\"5\":\"29.83\",\"6\":\"0.7\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"11.72\",\"3\":\"1\",\"4\":\"37.63\",\"5\":\"36.93\",\"6\":\"0.7\",\"_rn_\":\"6\"},{\"1\":\"7\",\"2\":\"10.46\",\"3\":\"0\",\"4\":\"32.58\",\"5\":\"31.88\",\"6\":\"0.7\",\"_rn_\":\"7\"},{\"1\":\"8\",\"2\":\"8.73\",\"3\":\"1\",\"4\":\"24.94\",\"5\":\"24.24\",\"6\":\"0.7\",\"_rn_\":\"8\"},{\"1\":\"9\",\"2\":\"9.31\",\"3\":\"0\",\"4\":\"29.34\",\"5\":\"28.64\",\"6\":\"0.7\",\"_rn_\":\"9\"},{\"1\":\"10\",\"2\":\"9.55\",\"3\":\"0\",\"4\":\"28.89\",\"5\":\"28.19\",\"6\":\"0.7\",\"_rn_\":\"10\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWhen subtracting the cholesterol levels under the two medication statues, we can see that the difference for each individual is equal to the true effect, $\\theta=0.7$, as defined earlier.\n\nWe established that theoretically $Y$ follows a normal distribution with mean $\\mu = 3L + \\theta A$. Observing the data above, we see that the true effect of diabetes medication on cholesterol levels is 0.7, adjusted for age.\n\n------------------------------------------------------------------------\n\nWe can also observe the distribution of the cholesterol levels for both the treatment and non-treatment groups using a mirrored density plot:\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-6_ad65a4d871162d0e4993224c3652cc0c'}\n\n```{.r .cell-code}\ndf <- result.data$counterfactual\n \n# Create densities manually so we can flip one of them\ndensity_y0 <- density(df$Y0)\ndensity_y1 <- density(df$Y1)\n \n# Create dataframes for plotting\ndf_y0 <- data.frame(x = density_y0$x, y = -density_y0$y, Treatment = \"Y0 (No Medication)\")\ndf_y1 <- data.frame(x = density_y1$x, y =  density_y1$y, Treatment = \"Y1 (Medication)\")\n \n# Combine\ndensity_df <- rbind(df_y0, df_y1)\n \n# Plot\nggplot(density_df, aes(x = x, y = y, fill = Treatment)) +\n  geom_area(alpha = 0.6, color = \"black\") +\n  geom_hline(yintercept = 0, color = \"gray40\") +\n  labs(\n    title = \"Mirrored Cholesterol Densities\",\n    x = \"Cholesterol Level\",\n    y = \"Density\",\n    fill = \"Medication\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = abs) +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](Simulation3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe mirrored density plot shows the distribution of cholesterol levels for both the medicated and non-medicated groups. The two distributions are similar in shape, however, the distribution for the non-medicated group is slightly shifted to the left compared to the medicated group. This indicate that cholesterol levels are, on average, slightly higher when medication is given.\n\n------------------------------------------------------------------------\n\nUsing the simulated data and Monte Carlo simulation, we can estimate the true effect that $A$, diabetes medication, has on cholesterol levels adjusted for age, based on the theoretical distributions we defined for each variable.\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-7_4413c23ef3a98a619e3bcdadd6856cc4'}\n\n```{.r .cell-code}\n\nsim <- 10000 # Number of iterations for the simulation  \ntheta <- 0.7 #True parameter value\n\n# Create a dataframe for the regression estimate for A, and its standard error, for each iteration\nresults <- data.frame(\n  A = numeric(sim),\n  se = numeric(sim)\n)\n\nparam_A <- numeric(sim) # Numeric vector to store cumulative effect estimate\n\n# Simulate 10000 different datasets using the simulate_data() function,\n# and storing the regression parameters for A, and their standard errors\nfor(i in 1:sim){\n  \n  result_data <- simulate_data(n = 1000)\n  results[i,] <- summary(glm(Y ~ A + L, family = \"gaussian\", \n                             data = result_data$observed))$coefficients[\"A\",c(\"Estimate\", \"Std. Error\")]\n\n  param_A[i] <- mean(results[1:i, \"A\"])\n}\n\ntrace_data <- data.frame(\n  Iteration = 1:sim,\n  ProbabilityEstimate_A = param_A\n)\n\n# Create a line plot using ggplot2\nggplot(trace_data, aes(x = Iteration, y = ProbabilityEstimate_A)) +  \n  \n  # Add a blue line to represent probability estimates over iterations\n  geom_line(color = \"blue\") + \n  geom_hline(yintercept = theta, linetype = \"dashed\", color = \"red\") + \n  \n  labs(\n    title = \"Trace Plot of Estimated Probability Over Iterations\",  # Plot Title\n    x = \"Iteration Number\",  # x-axis label for the x-axis\n    y = \"Estimated Probability\"  # y-axis label\n  ) +\n  theme_minimal()  #ggplot2 minimal theme for clean appearance\n```\n\n::: {.cell-output-display}\n![](Simulation3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFrom the plot, we can see that the Monte Carlo simulation is doing a stable job at estimating the true effect of diabetes medication on cholesterol levels adjusted for age, as the estimate stabilizes.\n\n------------------------------------------------------------------------\n\nAs we did with the last example, we can observe the performance using the `simsum()` function from the `rsimsum` package [@Gasparini2018]. Since we constructed a glm model, we also have standard errors for our estimates, meaning we can calculate model SE, relative error, coverage, bias-eliminated coverage, and power, in addition to what we calculated in the previous example. Results will be formatted and printed using the `knitr` package [@knitr].\n\n\n::: {.cell hash='Simulation3_cache/html/unnamed-chunk-8_fffce2894043e51a468973a13956f526'}\n\n```{.r .cell-code}\n\n# Analyze the simulated results using the rsimsum package\nsim_analysis <- simsum(\n  data = results,  # Our simulated dataset\n  estvarname = \"A\",  \n  true = theta,\n  se = \"se\" \n)\n\n# Output summary of the analysis\n# Format 'est' and 'mcse' columns to regular decimal notation with 5 digits\nformatted_summ <- sim_analysis$summ\nformatted_summ$est <- format(formatted_summ$est, scientific = FALSE, digits = 5)\nformatted_summ$mcse <- format(formatted_summ$mcse, scientific = FALSE, digits = 5)\n \n# Show using kable\nkable(formatted_summ, caption = \"Simulation Summary (Non-scientific Notation)\")\n```\n\n::: {.cell-output-display}\nTable: Simulation Summary (Non-scientific Notation)\n\n|stat        |est            |mcse          |\n|:-----------|:--------------|:-------------|\n|nsim        |10000.00000000 |NA            |\n|thetamean   |0.69948803     |NA            |\n|thetamedian |0.69952436     |NA            |\n|se2mean     |0.00406110     |NA            |\n|se2median   |0.00405982     |NA            |\n|bias        |-0.00051197    |0.00063665244 |\n|rbias       |-0.00073139    |0.00090950348 |\n|empse       |0.06366524     |0.00045020377 |\n|mse         |0.00405312     |0.00005752099 |\n|relprec     |NA             |NA            |\n|modelse     |0.06372675     |0.00000078243 |\n|relerror    |0.09661679     |0.70782642414 |\n|cover       |0.94920000     |0.00219589071 |\n|becover     |0.94940000     |0.00219179470 |\n|power       |1.00000000     |0.00000000000 |\n:::\n:::\n\n\nFirst, the bias is very small, indicating that the estimate just slightly underestimates the true effect, though this bias is very small. the relative bias confirms that an unbiased estimate is generated from the Monte Carlo simulations. The empirical standard error and model standard error show that the estimates vary little across simulation repetitions, and that the standard errors produced within each simulation are also small. The relative percentage error in the model standard error is very small, indicating that the model SE deviates only slightly from the empirical SE.\n\nThe MSE should approximately equal the variance since $\\text{MSE} = \\text{bias}^2 + \\text{variance}$ and our bias is approximately zero. Squaring the empirical standard error gives an empirical variance, which aligns with the MSE, highlighting that our estimate is unbiased. Additionally, since the MSE is approximately zero, this confirms that our simulation is accurately estimating the properties of this probability experiment.\n\nLastly, both the calculated coverage and the bias-corrected coverage indicate that the confidence intervals generated across simulations successfully captured the true effect approximately 95% of the time.\n\nThis simulation shows accurate estimation of the treatment effect ($\\approx 0.7$). The approach demonstrates how counterfactuals + Monte Carlo allow causal effect estimation in a fully known data-generating process (DGP).\n\n::: callout-tip\nThis tutorial developed is based on a previously developed external ([tutorial](https://ehsanx.github.io/psw/compare.html#data-simulation%20and))\n:::\n\n### References",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}