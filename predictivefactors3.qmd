## Binary outcome {.unnumbered}

We focus on statistical analysis and modeling of a binary outcome (cholesterol level) that is categorized as either "healthy" or "unhealthy." 

### Explore relationships for binary outcome variable

```{r setup, warning=FALSE, echo=FALSE,cache=TRUE}
# Load required packages
library(rms)
library(Hmisc)
library(Publish)
library(car)
library(pROC)
```

#### Load data

```{r load, warning=FALSE, cache=TRUE}
load(file = "Data/predictivefactors/cholesterolNHANES15part1.RData")
```

#### Creating binary variable

**Binary categorization**: The cholesterol variable is converted into a binary outcome ("healthy" or "unhealthy") using the `ifelse` function based on a threshold value of 200. 

**Re-leveling**: The reference category for the binary variable is changed to "unhealthy."

```{r binary, warning=FALSE, cache=TRUE}
# Binary variable
analytic3$cholesterol.bin <- ifelse(analytic3$cholesterol < 200, "healthy", "unhealthy")
table(analytic3$cholesterol.bin)

# Changing the reference category
analytic3$cholesterol.bin <- as.factor(analytic3$cholesterol.bin)
analytic3$cholesterol.bin <- relevel(analytic3$cholesterol.bin, ref = "unhealthy")
table(analytic3$cholesterol.bin)
```

#### Modelling data

A logistic regression is fitted to predict the binary cholesterol outcome from multiple predictor variables.

::: callout-tip
We use the `glm` function to run generalized linear models. The default family is gaussian with identity link. Setting binomial family with logit link (logit link is default for binomial family) means fitting logistic regression.
:::

```{r glm, warning=FALSE, cache=TRUE}
# Regression model
formula5x <- as.formula("cholesterol.bin~gender + age + born + 
             race + education + married + 
             income + diastolicBP + systolicBP + 
             bmi + bodyweight + bodyheight + waist +  
             triglycerides + uric.acid + 
             protein + bilirubin + phosphorus + sodium + potassium + 
             globulin + calcium + physical.work + physical.recreational + 
             diabetes")

# Summary
fit5x <- glm(formula5x, family = binomial(), data = analytic3)
publish(fit5x)

# VIF
car::vif(fit5x)
```

#### AUC

The [Area Under the Receiver Operating Characteristic (ROC) Curve (AUC)](https://en.wikipedia.org/wiki/Receiver_operating_characteristic) is calculated to assess the model's predictive performance in terms of discrimination. The AUC would tell how much the model is capable of distinguishing between healthy and unhealthy levels.

Let us measure the accuracy for classification models `fit5x`.

::: callout-tip
We can use the `roc` function to build a ROC curve and `auc` function to calculate the AUC (are under the ROC curve) value.
:::

```{r auc1, warning=FALSE, cache=TRUE}
require(pROC)
pred.y <- predict(fit5x, type = "response")
rocobj <- roc(analytic3$cholesterol.bin, pred.y)
rocobj

auc(rocobj)
```

#### Re-modelling

Let us re-fit the model and measure the AUC. VIF is calculated again for this new model.

```{r refit1, warning=FALSE, cache=TRUE}
formula5 <- as.formula("cholesterol.bin~gender + age + born + 
             race + education + married + 
             income + diastolicBP + systolicBP + 
             bmi +
             triglycerides + uric.acid + 
             protein + bilirubin + phosphorus + sodium + potassium + 
             globulin + calcium + physical.work + physical.recreational + 
             diabetes")
fit5 <- glm(formula5, family = binomial(), data = analytic3)
publish(fit5)

# VIF
car::vif(fit5)
```

The AUC for this new model is also calculated.

```{r auc2, warning=FALSE, cache=TRUE}
#### AUC
pred.y <- predict(fit5, type = "response")
rocobj <- roc(analytic3$cholesterol.bin, pred.y)
rocobj
auc(rocobj)
```

### Save data

```{r save, warning=FALSE, cache=TRUE}
save.image(file = "Data/predictivefactors/cholesterolNHANES15part2.RData")
```

### References
